

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu May  1 23:35:04 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataBANK0
    63  00167C                     __pidataBANK0:
    64                           	opt stack 0
    65                           
    66                           ;initializer for ReadLaser_Message@lastdist
    67  00167C  FFFF               	dw	65535
    68  00167E  FFFF               	dw	65535
    69                           
    70                           ;initializer for laser_read@F8867
    71  001680  42                 	db	66
    72  001681  00                 	db	0
    73  0000                     _ANSELA	set	3896
    74  0000                     _ANSELB	set	3897
    75  0000                     _ANSELC	set	3898
    76  0000                     _ANSELD	set	3899
    77  0000                     _ANSELE	set	3900
    78  0000                     _BAUDCON1bits	set	4024
    79  0000                     _BAUDCON2bits	set	3952
    80  0000                     _INTCONbits	set	4082
    81  0000                     _LATAbits	set	3977
    82  0000                     _OSCCONbits	set	4051
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIE3bits	set	4003
    85  0000                     _PIR3bits	set	4004
    86  0000                     _RC1REG	set	4014
    87  0000                     _RCREG1	set	4014
    88  0000                     _RCREG2	set	3956
    89  0000                     _RCSTA1bits	set	4011
    90  0000                     _RCSTA2bits	set	3953
    91  0000                     _SPBRG1	set	4015
    92  0000                     _SPBRG2	set	3957
    93  0000                     _T1CONbits	set	4045
    94  0000                     _T1GCON	set	4044
    95  0000                     _TMR1H	set	4047
    96  0000                     _TMR1L	set	4046
    97  0000                     _TRISAbits	set	3986
    98  0000                     _TRISCbits	set	3988
    99  0000                     _TRISDbits	set	3989
   100  0000                     _TXREG1	set	4013
   101  0000                     _TXREG2	set	3955
   102  0000                     _TXSTA1bits	set	4012
   103  0000                     _TXSTA2bits	set	3954
   104  0000                     _PIR1bits	set	3998
   105                           
   106                           	psect	nvBANK0
   107  0000DA                     __pnvBANK0:
   108                           	opt stack 0
   109  0000DA                     _timer_data_p:
   110                           	opt stack 0
   111  0000DA                     	ds	2
   112  0000DC                     _uart_1_data_p:
   113                           	opt stack 0
   114  0000DC                     	ds	2
   115  0000DE                     _uart_2_data_p:
   116                           	opt stack 0
   117  0000DE                     	ds	2
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  001456                     __pcinit:
   123                           	opt stack 0
   124  001456                     start_initialization:
   125                           	opt stack 0
   126  001456                     __initialization:
   127                           	opt stack 0
   128                           
   129                           ; Clear objects allocated to BANK1 (216 bytes)
   130  001456  EE01  F000         	lfsr	0,__pbssBANK1
   131  00145A  0ED8               	movlw	216
   132  00145C                     clear_0:
   133  00145C  6AEE               	clrf	postinc0,c
   134  00145E  06E8               	decf	wreg,f,c
   135  001460  E1FD               	bnz	clear_0
   136                           
   137                           ; Clear objects allocated to BANK0 (10 bytes)
   138  001462  EE00  F0D0         	lfsr	0,__pbssBANK0
   139  001466  0E0A               	movlw	10
   140  001468                     clear_1:
   141  001468  6AEE               	clrf	postinc0,c
   142  00146A  06E8               	decf	wreg,f,c
   143  00146C  E1FD               	bnz	clear_1
   144                           
   145                           ; Initialize objects allocated to BANK0 (6 bytes)
   146                           ; load TBLPTR registers with __pidataBANK0
   147  00146E  0E7C               	movlw	low __pidataBANK0
   148  001470  6EF6               	movwf	tblptrl,c
   149  001472  0E16               	movlw	high __pidataBANK0
   150  001474  6EF7               	movwf	tblptrh,c
   151  001476  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   152  001478  6EF8               	movwf	tblptru,c
   153  00147A  EE00  F0E0         	lfsr	0,__pdataBANK0
   154  00147E  EE10 F006          	lfsr	1,6
   155  001482                     copy_data0:
   156  001482  0009               	tblrd		*+
   157  001484  CFF5 FFEE          	movff	tablat,postinc0
   158  001488  50E5               	movf	postdec1,w,c
   159  00148A  50E1               	movf	fsr1l,w,c
   160  00148C  E1FA               	bnz	copy_data0
   161  00148E                     end_of_initialization:
   162                           	opt stack 0
   163  00148E                     __end_of__initialization:
   164                           	opt stack 0
   165  00148E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166  001490  6EF8               	movwf	tblptru,c
   167  001492  0100               	movlb	0
   168  001494  EFD3  F001         	goto	_main	;jump to C main() function
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	bssBANK0
   179  0000D0                     __pbssBANK0:
   180                           	opt stack 0
   181  0000D0                     ReadLaser_Message@total:
   182                           	opt stack 0
   183  0000D0                     	ds	4
   184  0000D4                     _readings_count:
   185                           	opt stack 0
   186  0000D4                     	ds	2
   187  0000D6                     Timer_message_handle@wait_status:
   188                           	opt stack 0
   189  0000D6                     	ds	1
   190  0000D7                     _MQ_Main_Willing_to_block:
   191                           	opt stack 0
   192  0000D7                     	ds	1
   193  0000D8                     _readings_num:
   194                           	opt stack 0
   195  0000D8                     	ds	2
   196                           tblptru	equ	0xFF8
   197                           tblptrh	equ	0xFF7
   198                           tblptrl	equ	0xFF6
   199                           tablat	equ	0xFF5
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           postdec1	equ	0xFE5
   203                           fsr1l	equ	0xFE1
   204                           
   205                           	psect	dataBANK0
   206  0000E0                     __pdataBANK0:
   207                           	opt stack 0
   208  0000E0                     ReadLaser_Message@lastdist:
   209                           	opt stack 0
   210  0000E0                     	ds	4
   211  0000E4                     laser_read@F8867:
   212                           	opt stack 0
   213  0000E4                     	ds	2
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           postdec1	equ	0xFE5
   221                           fsr1l	equ	0xFE1
   222                           
   223                           	psect	bssBANK1
   224  000100                     __pbssBANK1:
   225                           	opt stack 0
   226  000100                     _FromMainHigh_MQ:
   227                           	opt stack 0
   228  000100                     	ds	54
   229  000136                     _FromMainLow_MQ:
   230                           	opt stack 0
   231  000136                     	ds	54
   232  00016C                     _ToMainHigh_MQ:
   233                           	opt stack 0
   234  00016C                     	ds	54
   235  0001A2                     _ToMainLow_MQ:
   236                           	opt stack 0
   237  0001A2                     	ds	54
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1l	equ	0xFE1
   246                           
   247                           	psect	cstackBANK0
   248  000060                     __pcstackBANK0:
   249                           	opt stack 0
   250  000060                     ?_timer_init:
   251                           	opt stack 0
   252  000060                     ?_UART1_Init:
   253                           	opt stack 0
   254  000060                     ?_UART2_Init:
   255                           	opt stack 0
   256  000060                     ?_start_timer:
   257                           	opt stack 0
   258  000060                     ?_Delay1KTCYx:
   259                           	opt stack 0
   260  000060                     ?_UART1_Write:
   261                           	opt stack 0
   262  000060                     ?_UART2_Write:
   263                           	opt stack 0
   264  000060                     ?_UART1_Read_Enable:
   265                           	opt stack 0
   266  000060                     ?_UART2_Read:
   267                           	opt stack 0
   268  000060                     ?_init_queue:
   269                           	opt stack 0
   270  000060                     ?_check_msg:
   271                           	opt stack 0
   272  000060                     ?_memcpy:
   273                           	opt stack 0
   274  000060                     ?_in_high_int:
   275                           	opt stack 0
   276  000060                     ?___awdiv:
   277                           	opt stack 0
   278  000060                     ?___lmul:
   279                           	opt stack 0
   280  000060                     ?___lldiv:
   281                           	opt stack 0
   282  000060                     Delay1KTCYx@unit:
   283                           	opt stack 0
   284  000060                     UART1_Init@data:
   285                           	opt stack 0
   286  000060                     UART2_Init@data:
   287                           	opt stack 0
   288  000060                     UART1_Write@c:
   289                           	opt stack 0
   290  000060                     UART2_Write@c:
   291                           	opt stack 0
   292  000060                     UART2_Read@len:
   293                           	opt stack 0
   294  000060                     timer_init@data:
   295                           	opt stack 0
   296  000060                     start_timer@timer_target:
   297                           	opt stack 0
   298  000060                     init_queue@qptr:
   299                           	opt stack 0
   300  000060                     check_msg@qptr:
   301                           	opt stack 0
   302  000060                     ___awdiv@dividend:
   303                           	opt stack 0
   304  000060                     memcpy@d1:
   305                           	opt stack 0
   306  000060                     ___lldiv@dividend:
   307                           	opt stack 0
   308  000060                     ___lmul@multiplier:
   309                           	opt stack 0
   310                           
   311                           ; 4 bytes @ 0x0
   312  000060                     	ds	1
   313  000061                     
   314                           ; 0 bytes @ 0x1
   315  000061                     	ds	1
   316  000062                     ??_init_queue:
   317  000062                     ??_check_msg:
   318  000062                     ?_in_low_int:
   319                           	opt stack 0
   320  000062                     UART1_Read_Enable@data:
   321                           	opt stack 0
   322  000062                     UART1_Write@length:
   323                           	opt stack 0
   324  000062                     UART2_Write@length:
   325                           	opt stack 0
   326  000062                     start_timer@RX_Callback:
   327                           	opt stack 0
   328  000062                     ___awdiv@divisor:
   329                           	opt stack 0
   330  000062                     memcpy@s1:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x2
   334  000062                     	ds	1
   335  000063                     init_queue@i:
   336                           	opt stack 0
   337                           
   338                           ; 1 bytes @ 0x3
   339  000063                     	ds	1
   340  000064                     ??_init_queues:
   341  000064                     ??_UART1_Write:
   342  000064                     ??_UART2_Write:
   343  000064                     ??___awdiv:
   344  000064                     ?_in_main:
   345                           	opt stack 0
   346  000064                     return_motor@target:
   347                           	opt stack 0
   348  000064                     memcpy@n:
   349                           	opt stack 0
   350  000064                     ___lldiv@divisor:
   351                           	opt stack 0
   352  000064                     ___lmul@multiplicand:
   353                           	opt stack 0
   354                           
   355                           ; 4 bytes @ 0x4
   356  000064                     	ds	1
   357  000065                     ___awdiv@counter:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x5
   361  000065                     	ds	1
   362  000066                     ??_block_on_To_msgqueues:
   363  000066                     ___awdiv@sign:
   364                           	opt stack 0
   365  000066                     UART1_Write@i:
   366                           	opt stack 0
   367  000066                     UART2_Write@i:
   368                           	opt stack 0
   369  000066                     memcpy@d:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x6
   373  000066                     	ds	1
   374  000067                     ___awdiv@quotient:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x7
   378  000067                     	ds	1
   379  000068                     ??_laser_init:
   380  000068                     ?_wifi_write:
   381                           	opt stack 0
   382  000068                     ??___lldiv:
   383  000068                     laser_read@read:
   384                           	opt stack 0
   385  000068                     memcpy@s:
   386                           	opt stack 0
   387  000068                     wifi_write@total:
   388                           	opt stack 0
   389  000068                     ___lmul@product:
   390                           	opt stack 0
   391                           
   392                           ; 4 bytes @ 0x8
   393  000068                     	ds	1
   394  000069                     laser_init@init:
   395                           	opt stack 0
   396  000069                     move_motor@target:
   397                           	opt stack 0
   398  000069                     ___lldiv@quotient:
   399                           	opt stack 0
   400                           
   401                           ; 4 bytes @ 0x9
   402  000069                     	ds	1
   403  00006A                     ?_ReadWIFLY_Message:
   404                           	opt stack 0
   405  00006A                     ?_recv_msg:
   406                           	opt stack 0
   407  00006A                     ReadWIFLY_Message@data:
   408                           	opt stack 0
   409  00006A                     recv_msg@qptr:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0xA
   413  00006A                     	ds	2
   414  00006C                     ??_wifi_write:
   415  00006C                     recv_msg@maxlength:
   416                           	opt stack 0
   417  00006C                     
   418                           ; 2 bytes @ 0xC
   419  00006C                     	ds	1
   420  00006D                     ___lldiv@counter:
   421                           	opt stack 0
   422  00006D                     recv_msg@msgtype:
   423                           	opt stack 0
   424  00006D                     wifi_write@write:
   425                           	opt stack 0
   426                           
   427                           ; 5 bytes @ 0xD
   428  00006D                     	ds	1
   429  00006E                     ??_ReadWIFLY_Message:
   430                           
   431                           ; 0 bytes @ 0xE
   432  00006E                     	ds	1
   433  00006F                     recv_msg@data:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0xF
   437  00006F                     	ds	2
   438  000071                     ??_recv_msg:
   439                           
   440                           ; 0 bytes @ 0x11
   441  000071                     	ds	1
   442  000072                     ?_ReadLaser_Message:
   443                           	opt stack 0
   444  000072                     ReadLaser_Message@data:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x12
   448  000072                     	ds	1
   449  000073                     recv_msg@slot:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x13
   453  000073                     	ds	1
   454  000074                     ReadLaser_Message@length:
   455                           	opt stack 0
   456  000074                     recv_msg@tlength:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x14
   460  000074                     	ds	2
   461  000076                     ??_ReadLaser_Message:
   462  000076                     recv_msg@qmsg:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x16
   466  000076                     	ds	2
   467  000078                     ?_ToMainHigh_recvmsg:
   468                           	opt stack 0
   469  000078                     ?_ToMainLow_recvmsg:
   470                           	opt stack 0
   471  000078                     ToMainLow_recvmsg@maxlength:
   472                           	opt stack 0
   473  000078                     ToMainHigh_recvmsg@maxlength:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x18
   477  000078                     	ds	1
   478  000079                     ToMainLow_recvmsg@msgtype:
   479                           	opt stack 0
   480  000079                     ToMainHigh_recvmsg@msgtype:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x19
   484  000079                     	ds	1
   485  00007A                     ReadLaser_Message@reading:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x1A
   489  00007A                     	ds	1
   490  00007B                     ToMainLow_recvmsg@data:
   491                           	opt stack 0
   492  00007B                     ToMainHigh_recvmsg@data:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x1B
   496  00007B                     	ds	1
   497  00007C                     ReadLaser_Message@avgdist:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x1C
   501  00007C                     	ds	1
   502  00007D                     
   503                           ; 0 bytes @ 0x1D
   504  00007D                     	ds	3
   505  000080                     ReadLaser_Message@arcarea:
   506                           	opt stack 0
   507                           
   508                           ; 4 bytes @ 0x20
   509  000080                     	ds	4
   510  000084                     ??_main:
   511                           
   512                           ; 0 bytes @ 0x24
   513  000084                     	ds	1
   514  000085                     main@msgbuffer:
   515                           	opt stack 0
   516                           
   517                           ; 11 bytes @ 0x25
   518  000085                     	ds	11
   519  000090                     main@TIMER1:
   520                           	opt stack 0
   521                           
   522                           ; 6 bytes @ 0x30
   523  000090                     	ds	6
   524  000096                     main@msgtype:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x36
   528  000096                     	ds	1
   529  000097                     main@uart_data1:
   530                           	opt stack 0
   531                           
   532                           ; 28 bytes @ 0x37
   533  000097                     	ds	28
   534  0000B3                     main@length:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x53
   538  0000B3                     	ds	1
   539  0000B4                     main@uart_data2:
   540                           	opt stack 0
   541                           
   542                           ; 28 bytes @ 0x54
   543  0000B4                     	ds	28
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	cstackCOMRAM
   554  000001                     __pcstackCOMRAM:
   555                           	opt stack 0
   556  000001                     ??_InterruptHandlerLow:
   557  000001                     
   558                           ; 2 bytes @ 0x0
   559  000001                     	ds	17
   560  000012                     ??_UART1_TX_Int_handle:
   561  000012                     ??_UART2_TX_Int_handle:
   562  000012                     ?i2_memcpy:
   563                           	opt stack 0
   564  000012                     i2memcpy@d1:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x11
   568  000012                     	ds	2
   569  000014                     i2memcpy@s1:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x13
   573  000014                     	ds	2
   574  000016                     i2memcpy@n:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x15
   578  000016                     	ds	2
   579  000018                     i2memcpy@d:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x17
   583  000018                     	ds	2
   584  00001A                     i2memcpy@s:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x19
   588  00001A                     	ds	2
   589  00001C                     ?_send_msg:
   590                           	opt stack 0
   591  00001C                     send_msg@qptr:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x1B
   595  00001C                     	ds	2
   596  00001E                     send_msg@length:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x1D
   600  00001E                     	ds	1
   601  00001F                     send_msg@msgtype:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x1E
   605  00001F                     	ds	1
   606  000020                     send_msg@data:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x1F
   610  000020                     	ds	2
   611  000022                     ??_send_msg:
   612                           
   613                           ; 0 bytes @ 0x21
   614  000022                     	ds	1
   615  000023                     send_msg@tlength:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x22
   619  000023                     	ds	2
   620  000025                     send_msg@slot:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x24
   624  000025                     	ds	1
   625  000026                     send_msg@qmsg:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x25
   629  000026                     	ds	2
   630  000028                     ?_ToMainHigh_sendmsg:
   631                           	opt stack 0
   632  000028                     ?_ToMainLow_sendmsg:
   633                           	opt stack 0
   634  000028                     ToMainLow_sendmsg@length:
   635                           	opt stack 0
   636  000028                     ToMainHigh_sendmsg@length:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x27
   640  000028                     	ds	1
   641  000029                     ToMainLow_sendmsg@msgtype:
   642                           	opt stack 0
   643  000029                     ToMainHigh_sendmsg@msgtype:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x28
   647  000029                     	ds	1
   648  00002A                     ToMainLow_sendmsg@data:
   649                           	opt stack 0
   650  00002A                     ToMainHigh_sendmsg@data:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x29
   654  00002A                     	ds	2
   655  00002C                     ??_UART1_RX_Int_handle:
   656  00002C                     ??_UART2_RX_Int_handle:
   657                           
   658                           ; 0 bytes @ 0x2B
   659  00002C                     	ds	2
   660  00002E                     UART1_RX_Int_handle@data:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x2D
   664  00002E                     	ds	1
   665  00002F                     ??_InterruptHandlerHigh:
   666                           
   667                           ; 0 bytes @ 0x2E
   668  00002F                     	ds	16
   669  00003F                     _InterruptHandlerHigh$1406:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x3E
   673  00003F                     	ds	1
   674  000040                     InterruptHandlerHigh@data:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x3F
   678  000040                     	ds	1
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           postdec1	equ	0xFE5
   686                           fsr1l	equ	0xFE1
   687                           
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 189 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  uart_data2     28   84[BANK0 ] struct .
   698 ;;  uart_data1     28   55[BANK0 ] struct .
   699 ;;  msgbuffer      11   37[BANK0 ] unsigned char [11]
   700 ;;  TIMER1          6   48[BANK0 ] struct .
   701 ;;  length          1   83[BANK0 ] char 
   702 ;;  msgtype         1   54[BANK0 ] unsigned char 
   703 ;;  i               1    0        unsigned char 
   704 ;;  c               1    0        unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  2   40[COMRAM] int 
   707 ;; Registers used:
   708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   714 ;;      Params:         0       0       0       0       0       0       0
   715 ;;      Locals:         0      75       0       0       0       0       0
   716 ;;      Temps:          0       1       0       0       0       0       0
   717 ;;      Totals:         0      76       0       0       0       0       0
   718 ;;Total ram usage:       76 bytes
   719 ;; Hardware stack levels required when called:   10
   720 ;; This function calls:
   721 ;;		_timer_init
   722 ;;		_UART1_Init
   723 ;;		_UART2_Init
   724 ;;		_init_queues
   725 ;;		_enable_interrupts
   726 ;;		_laser_init
   727 ;;		_block_on_To_msgqueues
   728 ;;		_ToMainHigh_recvmsg
   729 ;;		_ReadLaser_Message
   730 ;;		_ReadWIFLY_Message
   731 ;;		_ToMainLow_recvmsg
   732 ;;		_Timer_message_handle
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739  0003A6                     __ptext0:
   740                           	opt stack 0
   741  0003A6                     _main:
   742                           	opt stack 21
   743                           
   744                           ;main.c: 190: char c;
   745                           ;main.c: 191: signed char length;
   746                           ;main.c: 192: unsigned char msgtype;
   747                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   748                           ;main.c: 194: unsigned char i;
   749                           ;main.c: 196: ANSELA = 0x0;
   750                           
   751                           ;incstack = 0
   752                           ;incstack = 0
   753  0003A6  0E00               	movlw	0
   754  0003A8  010F               	movlb	15	; () banked
   755  0003AA  010F               	movlb	15	; () banked
   756  0003AC  6F38               	movwf	56,b	;volatile
   757                           
   758                           ;main.c: 197: ANSELB = 0x0;
   759  0003AE  0E00               	movlw	0
   760  0003B0  010F               	movlb	15	; () banked
   761  0003B2  010F               	movlb	15	; () banked
   762  0003B4  6F39               	movwf	57,b	;volatile
   763                           
   764                           ;main.c: 198: ANSELC = 0x0;
   765  0003B6  0E00               	movlw	0
   766  0003B8  010F               	movlb	15	; () banked
   767  0003BA  010F               	movlb	15	; () banked
   768  0003BC  6F3A               	movwf	58,b	;volatile
   769                           
   770                           ;main.c: 199: ANSELD = 0x0;
   771  0003BE  0E00               	movlw	0
   772  0003C0  010F               	movlb	15	; () banked
   773  0003C2  010F               	movlb	15	; () banked
   774  0003C4  6F3B               	movwf	59,b	;volatile
   775                           
   776                           ;main.c: 200: ANSELE = 0x0;
   777  0003C6  0E00               	movlw	0
   778  0003C8  010F               	movlb	15	; () banked
   779  0003CA  010F               	movlb	15	; () banked
   780  0003CC  6F3C               	movwf	60,b	;volatile
   781                           
   782                           ; BSR set to: 15
   783                           ;main.c: 202: UART_DATA uart_data1;
   784                           ;main.c: 203: UART_DATA uart_data2;
   785                           ;main.c: 204: TIMER_DATA TIMER1;
   786                           ;main.c: 205: timer_init(&TIMER1);
   787  0003CE  0100               	movlb	0	; () banked
   788  0003D0  0E00               	movlw	high main@TIMER1
   789  0003D2  0100               	movlb	0	; () banked
   790  0003D4  0100               	movlb	0	; () banked
   791  0003D6  6F61               	movwf	(?_timer_init+1)& (0+255),b
   792  0003D8  0100               	movlb	0	; () banked
   793  0003DA  0E90               	movlw	low main@TIMER1
   794  0003DC  0100               	movlb	0	; () banked
   795  0003DE  6F60               	movwf	?_timer_init& (0+255),b
   796  0003E0  EC1C  F00B         	call	_timer_init	;wreg free
   797                           
   798                           ;main.c: 207: UART1_Init(&uart_data1);
   799  0003E4  0100               	movlb	0	; () banked
   800  0003E6  0E00               	movlw	high main@uart_data1
   801  0003E8  0100               	movlb	0	; () banked
   802  0003EA  0100               	movlb	0	; () banked
   803  0003EC  6F61               	movwf	(?_UART1_Init+1)& (0+255),b
   804  0003EE  0100               	movlb	0	; () banked
   805  0003F0  0E97               	movlw	low main@uart_data1
   806  0003F2  0100               	movlb	0	; () banked
   807  0003F4  6F60               	movwf	?_UART1_Init& (0+255),b
   808  0003F6  ECE0  F008         	call	_UART1_Init	;wreg free
   809                           
   810                           ;main.c: 208: UART2_Init(&uart_data2);
   811  0003FA  0100               	movlb	0	; () banked
   812  0003FC  0E00               	movlw	high main@uart_data2
   813  0003FE  0100               	movlb	0	; () banked
   814  000400  0100               	movlb	0	; () banked
   815  000402  6F61               	movwf	(?_UART2_Init+1)& (0+255),b
   816  000404  0100               	movlb	0	; () banked
   817  000406  0EB4               	movlw	low main@uart_data2
   818  000408  0100               	movlb	0	; () banked
   819  00040A  6F60               	movwf	?_UART2_Init& (0+255),b
   820  00040C  EC46  F008         	call	_UART2_Init	;wreg free
   821                           
   822                           ;main.c: 210: TRISAbits.TRISA0 = 0;
   823  000410  9092               	bcf	3986,0,c	;volatile
   824                           
   825                           ;main.c: 211: TRISAbits.TRISA1 = 0;
   826  000412  9292               	bcf	3986,1,c	;volatile
   827                           
   828                           ;main.c: 212: TRISAbits.TRISA2 = 0;
   829  000414  9492               	bcf	3986,2,c	;volatile
   830                           
   831                           ;main.c: 213: TRISAbits.TRISA3 = 0;
   832  000416  9692               	bcf	3986,3,c	;volatile
   833                           
   834                           ;main.c: 215: TRISAbits.TRISA4 = 0;
   835  000418  9892               	bcf	3986,4,c	;volatile
   836                           
   837                           ;main.c: 216: TRISAbits.TRISA5 = 0;
   838  00041A  9A92               	bcf	3986,5,c	;volatile
   839                           
   840                           ;main.c: 217: TRISAbits.TRISA6 = 0;
   841  00041C  9C92               	bcf	3986,6,c	;volatile
   842                           
   843                           ;main.c: 218: TRISAbits.TRISA7 = 0;
   844  00041E  9E92               	bcf	3986,7,c	;volatile
   845                           
   846                           ;main.c: 220: LATAbits.LATA1 = 0;
   847  000420  9289               	bcf	3977,1,c	;volatile
   848                           
   849                           ;main.c: 222: init_queues();
   850  000422  EC7E  F008         	call	_init_queues	;wreg free
   851                           
   852                           ;main.c: 226: enable_interrupts();
   853  000426  EC41  F00B         	call	_enable_interrupts	;wreg free
   854                           
   855                           ;main.c: 228: laser_init();
   856  00042A  EC5B  F009         	call	_laser_init	;wreg free
   857  00042E                     l41:
   858                           
   859                           ;main.c: 252: block_on_To_msgqueues();
   860  00042E  ECBF  F007         	call	_block_on_To_msgqueues	;wreg free
   861                           
   862                           ;main.c: 259: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   863  000432  0100               	movlb	0	; () banked
   864  000434  6F84               	movwf	??_main& (0+255),b
   865  000436  0E0A               	movlw	10
   866  000438  0100               	movlb	0	; () banked
   867  00043A  0100               	movlb	0	; () banked
   868  00043C  6F78               	movwf	?_ToMainHigh_recvmsg& (0+255),b
   869  00043E  0100               	movlb	0	; () banked
   870  000440  5184               	movf	??_main& (0+255),w,b
   871  000442  0100               	movlb	0	; () banked
   872  000444  0E00               	movlw	high main@msgtype
   873  000446  0100               	movlb	0	; () banked
   874  000448  0100               	movlb	0	; () banked
   875  00044A  6F7A               	movwf	(?_ToMainHigh_recvmsg+2)& (0+255),b
   876  00044C  0100               	movlb	0	; () banked
   877  00044E  0E96               	movlw	low main@msgtype
   878  000450  0100               	movlb	0	; () banked
   879  000452  6F79               	movwf	(?_ToMainHigh_recvmsg+1)& (0+255),b
   880  000454  0100               	movlb	0	; () banked
   881  000456  0E00               	movlw	high main@msgbuffer
   882  000458  0100               	movlb	0	; () banked
   883  00045A  0100               	movlb	0	; () banked
   884  00045C  6F7C               	movwf	(?_ToMainHigh_recvmsg+4)& (0+255),b
   885  00045E  0100               	movlb	0	; () banked
   886  000460  0E85               	movlw	low main@msgbuffer
   887  000462  0100               	movlb	0	; () banked
   888  000464  6F7B               	movwf	(?_ToMainHigh_recvmsg+3)& (0+255),b
   889  000466  ECD3  F00A         	call	_ToMainHigh_recvmsg	;wreg free
   890  00046A  0100               	movlb	0	; () banked
   891  00046C  0100               	movlb	0	; () banked
   892  00046E  6FB3               	movwf	main@length& (0+255),b
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 260: if (length < 0) {
   896  000470  0100               	movlb	0	; () banked
   897  000472  0100               	movlb	0	; () banked
   898  000474  BFB3               	btfsc	main@length& (0+255),7,b
   899  000476  D038               	goto	l1790
   900  000478  D02E               	goto	l1788
   901  00047A                     l1782:
   902                           
   903                           ; BSR set to: 0
   904                           ;main.c: 268: {
   905                           ;main.c: 269: ReadLaser_Message(msgbuffer, length);
   906  00047A  0100               	movlb	0	; () banked
   907  00047C  0E00               	movlw	high main@msgbuffer
   908  00047E  0100               	movlb	0	; () banked
   909  000480  0100               	movlb	0	; () banked
   910  000482  6F73               	movwf	(?_ReadLaser_Message+1)& (0+255),b
   911  000484  0100               	movlb	0	; () banked
   912  000486  0E85               	movlw	low main@msgbuffer
   913  000488  0100               	movlb	0	; () banked
   914  00048A  6F72               	movwf	?_ReadLaser_Message& (0+255),b
   915  00048C  0100               	movlb	0	; () banked
   916  00048E  0100               	movlb	0	; () banked
   917  000490  51B3               	movf	main@length& (0+255),w,b
   918  000492  0100               	movlb	0	; () banked
   919  000494  0100               	movlb	0	; () banked
   920  000496  6F74               	movwf	(?_ReadLaser_Message+2)& (0+255),b
   921  000498  0100               	movlb	0	; () banked
   922  00049A  6B75               	clrf	(?_ReadLaser_Message+3)& (0+255),b
   923  00049C  0100               	movlb	0	; () banked
   924  00049E  BF74               	btfsc	(?_ReadLaser_Message+2)& (0+255),7,b
   925  0004A0  0775               	decf	(?_ReadLaser_Message+3)& (0+255),f,b
   926  0004A2  EC53  F000         	call	_ReadLaser_Message	;wreg free
   927                           
   928                           ;main.c: 270: break;
   929  0004A6  D020               	goto	l1790
   930  0004A8                     l1784:
   931                           
   932                           ;main.c: 273: {
   933                           ;main.c: 274: ReadWIFLY_Message(msgbuffer,length);
   934  0004A8  0100               	movlb	0	; () banked
   935  0004AA  0E00               	movlw	high main@msgbuffer
   936  0004AC  0100               	movlb	0	; () banked
   937  0004AE  0100               	movlb	0	; () banked
   938  0004B0  6F6B               	movwf	(?_ReadWIFLY_Message+1)& (0+255),b
   939  0004B2  0100               	movlb	0	; () banked
   940  0004B4  0E85               	movlw	low main@msgbuffer
   941  0004B6  0100               	movlb	0	; () banked
   942  0004B8  6F6A               	movwf	?_ReadWIFLY_Message& (0+255),b
   943  0004BA  0100               	movlb	0	; () banked
   944  0004BC  0100               	movlb	0	; () banked
   945  0004BE  51B3               	movf	main@length& (0+255),w,b
   946  0004C0  0100               	movlb	0	; () banked
   947  0004C2  0100               	movlb	0	; () banked
   948  0004C4  6F6C               	movwf	(?_ReadWIFLY_Message+2)& (0+255),b
   949  0004C6  0100               	movlb	0	; () banked
   950  0004C8  6B6D               	clrf	(?_ReadWIFLY_Message+3)& (0+255),b
   951  0004CA  0100               	movlb	0	; () banked
   952  0004CC  BF6C               	btfsc	(?_ReadWIFLY_Message+2)& (0+255),7,b
   953  0004CE  076D               	decf	(?_ReadWIFLY_Message+3)& (0+255),f,b
   954  0004D0  EC0B  F009         	call	_ReadWIFLY_Message	;wreg free
   955                           
   956                           ;main.c: 275: break;
   957  0004D4  D009               	goto	l1790
   958  0004D6                     l1788:
   959  0004D6  0100               	movlb	0	; () banked
   960  0004D8  0100               	movlb	0	; () banked
   961  0004DA  5196               	movf	main@msgtype& (0+255),w,b
   962                           
   963                           ; Switch size 1, requested type "space"
   964                           ; Number of cases is 2, Range of values is 50 to 51
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte            7     4 (average)
   968                           ;	Chosen strategy is simple_byte
   969  0004DC  0A32               	xorlw	50	; case 50
   970  0004DE  B4D8               	btfsc	status,2,c
   971  0004E0  D7E3               	goto	l1784
   972  0004E2  0A01               	xorlw	1	; case 51
   973  0004E4  B4D8               	btfsc	status,2,c
   974  0004E6  D7C9               	goto	l1782
   975  0004E8                     l1790:
   976                           
   977                           ;main.c: 283: }
   978                           ;main.c: 286: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
   979  0004E8  0100               	movlb	0	; () banked
   980  0004EA  6F84               	movwf	??_main& (0+255),b
   981  0004EC  0E0A               	movlw	10
   982  0004EE  0100               	movlb	0	; () banked
   983  0004F0  0100               	movlb	0	; () banked
   984  0004F2  6F78               	movwf	?_ToMainLow_recvmsg& (0+255),b
   985  0004F4  0100               	movlb	0	; () banked
   986  0004F6  5184               	movf	??_main& (0+255),w,b
   987  0004F8  0100               	movlb	0	; () banked
   988  0004FA  0E00               	movlw	high main@msgtype
   989  0004FC  0100               	movlb	0	; () banked
   990  0004FE  0100               	movlb	0	; () banked
   991  000500  6F7A               	movwf	(?_ToMainLow_recvmsg+2)& (0+255),b
   992  000502  0100               	movlb	0	; () banked
   993  000504  0E96               	movlw	low main@msgtype
   994  000506  0100               	movlb	0	; () banked
   995  000508  6F79               	movwf	(?_ToMainLow_recvmsg+1)& (0+255),b
   996  00050A  0100               	movlb	0	; () banked
   997  00050C  0E00               	movlw	high main@msgbuffer
   998  00050E  0100               	movlb	0	; () banked
   999  000510  0100               	movlb	0	; () banked
  1000  000512  6F7C               	movwf	(?_ToMainLow_recvmsg+4)& (0+255),b
  1001  000514  0100               	movlb	0	; () banked
  1002  000516  0E85               	movlw	low main@msgbuffer
  1003  000518  0100               	movlb	0	; () banked
  1004  00051A  6F7B               	movwf	(?_ToMainLow_recvmsg+3)& (0+255),b
  1005  00051C  ECA7  F00A         	call	_ToMainLow_recvmsg	;wreg free
  1006  000520  0100               	movlb	0	; () banked
  1007  000522  0100               	movlb	0	; () banked
  1008  000524  6FB3               	movwf	main@length& (0+255),b
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;main.c: 287: if (length < 0) {
  1012  000526  0100               	movlb	0	; () banked
  1013  000528  0100               	movlb	0	; () banked
  1014  00052A  BFB3               	btfsc	main@length& (0+255),7,b
  1015  00052C  D780               	goto	l41
  1016  00052E  D003               	goto	l1800
  1017  000530                     l1796:
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;main.c: 297: {
  1021                           ;main.c: 298: Timer_message_handle();
  1022  000530  EC1F  F007         	call	_Timer_message_handle	;wreg free
  1023                           
  1024                           ;main.c: 299: break;
  1025  000534  D77C               	goto	l41
  1026  000536                     l1800:
  1027  000536  0100               	movlb	0	; () banked
  1028  000538  0100               	movlb	0	; () banked
  1029  00053A  5196               	movf	main@msgtype& (0+255),w,b
  1030                           
  1031                           ; Switch size 1, requested type "space"
  1032                           ; Number of cases is 1, Range of values is 10 to 10
  1033                           ; switch strategies available:
  1034                           ; Name         Instructions Cycles
  1035                           ; simple_byte            4     3 (average)
  1036                           ;	Chosen strategy is simple_byte
  1037  00053C  0A0A               	xorlw	10	; case 10
  1038  00053E  B4D8               	btfsc	status,2,c
  1039  000540  D7F7               	goto	l1796
  1040  000542  D775               	goto	l41
  1041  000544                     __end_of_main:
  1042                           	opt stack 0
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1l	equ	0xFE1
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _Timer_message_handle *****************
  1054 ;; Defined at:
  1055 ;;		line 28 in file "timer.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;		None               void
  1062 ;; Registers used:
  1063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1069 ;;      Params:         0       0       0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    8
  1076 ;; This function calls:
  1077 ;;		Absolute function
  1078 ;;		_laser_read
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text1
  1085  000E3E                     __ptext1:
  1086                           	opt stack 0
  1087  000E3E                     _Timer_message_handle:
  1088                           	opt stack 22
  1089                           
  1090                           ;timer.c: 29: static char wait_status = 0;
  1091                           ;timer.c: 30: wait_status ^= 1;
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;incstack = 0
  1095                           ;incstack = 0
  1096  000E3E  0E01               	movlw	1
  1097  000E40  0100               	movlb	0	; () banked
  1098  000E42  0100               	movlb	0	; () banked
  1099  000E44  1BD6               	xorwf	Timer_message_handle@wait_status& (0+255),f,b
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;timer.c: 31: if (wait_status == 0) {
  1103  000E46  0100               	movlb	0	; () banked
  1104  000E48  0100               	movlb	0	; () banked
  1105  000E4A  67D6               	tstfsz	Timer_message_handle@wait_status& (0+255),b
  1106  000E4C  0012               	return	
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;timer.c: 32: if (timer_data_p->count == timer_data_p->timer_target) {
  1110  000E4E  C0DA  FFD9         	movff	_timer_data_p,fsr2l
  1111  000E52  C0DB  FFDA         	movff	_timer_data_p+1,fsr2h
  1112  000E56  0100               	movlb	0	; () banked
  1113  000E58  EE10 F002          	lfsr	1,2
  1114  000E5C  0100               	movlb	0	; () banked
  1115  000E5E  51DA               	movf	_timer_data_p& (0+255),w,b
  1116  000E60  26E1               	addwf	fsr1l,f,c
  1117  000E62  0100               	movlb	0	; () banked
  1118  000E64  51DB               	movf	(_timer_data_p+1)& (0+255),w,b
  1119  000E66  22E2               	addwfc	fsr1h,f,c
  1120  000E68  52E6               	movf	postinc1,f,c
  1121  000E6A  52DE               	movf	postinc2,f,c
  1122  000E6C  50DD               	movf	postdec2,w,c
  1123  000E6E  18E5               	xorwf	postdec1,w,c
  1124  000E70  CFDF FFE8          	movff	indf2,wreg
  1125  000E74  B4D8               	btfsc	status,2,c
  1126  000E76  18E7               	xorwf	indf1,w,c
  1127  000E78  A4D8               	btfss	status,2,c
  1128  000E7A  D025               	goto	l1968
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;timer.c: 33: if (*timer_data_p->TIMER_Callback != 0) {
  1132  000E7C  0100               	movlb	0	; () banked
  1133  000E7E  EE20 F004          	lfsr	2,4
  1134  000E82  0100               	movlb	0	; () banked
  1135  000E84  51DA               	movf	_timer_data_p& (0+255),w,b
  1136  000E86  26D9               	addwf	fsr2l,f,c
  1137  000E88  0100               	movlb	0	; () banked
  1138  000E8A  51DB               	movf	(_timer_data_p+1)& (0+255),w,b
  1139  000E8C  22DA               	addwfc	fsr2h,f,c
  1140  000E8E  50DE               	movf	postinc2,w,c
  1141  000E90  10DD               	iorwf	postdec2,w,c
  1142  000E92  B4D8               	btfsc	status,2,c
  1143  000E94  D016               	goto	l1966
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;timer.c: 34: (*timer_data_p->TIMER_Callback)();
  1147  000E96  0100               	movlb	0	; () banked
  1148  000E98  EE20 F004          	lfsr	2,4
  1149  000E9C  0100               	movlb	0	; () banked
  1150  000E9E  51DA               	movf	_timer_data_p& (0+255),w,b
  1151  000EA0  26D9               	addwf	fsr2l,f,c
  1152  000EA2  0100               	movlb	0	; () banked
  1153  000EA4  51DB               	movf	(_timer_data_p+1)& (0+255),w,b
  1154  000EA6  22DA               	addwfc	fsr2h,f,c
  1155  000EA8  D801               	call	u748
  1156  000EAA  D00A               	goto	u749
  1157  000EAC                     u748:
  1158  000EAC  0005               	push	
  1159  000EAE  6EFA               	movwf	pclath,c
  1160  000EB0  50DE               	movf	postinc2,w,c
  1161  000EB2  6EFD               	movwf	tosl,c
  1162  000EB4  50DE               	movf	postinc2,w,c
  1163  000EB6  6EFE               	movwf	tosh,c
  1164  000EB8  50F8               	movf	tblptru,w,c
  1165  000EBA  6EFF               	movwf	tosu,c
  1166  000EBC  50FA               	movf	pclath,w,c
  1167  000EBE  0012               	return		;indir
  1168  000EC0                     u749:
  1169                           
  1170                           ;timer.c: 35: T1CONbits.TMR1ON = 0;
  1171  000EC0  90CD               	bcf	4045,0,c	;volatile
  1172  000EC2                     l1966:
  1173                           
  1174                           ;timer.c: 36: }
  1175                           ;timer.c: 37: LATAbits.LATA0 = 0;
  1176  000EC2  9089               	bcf	3977,0,c	;volatile
  1177                           
  1178                           ;timer.c: 38: } else {
  1179  000EC4  0012               	return	
  1180  000EC6                     l1968:
  1181                           
  1182                           ;timer.c: 39: LATAbits.LATA0 ^= 1;
  1183  000EC6  7089               	btg	3977,0,c	;volatile
  1184                           
  1185                           ;timer.c: 40: timer_data_p->count++;
  1186  000EC8  0100               	movlb	0	; () banked
  1187  000ECA  EE20 F002          	lfsr	2,2
  1188  000ECE  0100               	movlb	0	; () banked
  1189  000ED0  51DA               	movf	_timer_data_p& (0+255),w,b
  1190  000ED2  26D9               	addwf	fsr2l,f,c
  1191  000ED4  0100               	movlb	0	; () banked
  1192  000ED6  51DB               	movf	(_timer_data_p+1)& (0+255),w,b
  1193  000ED8  22DA               	addwfc	fsr2h,f,c
  1194  000EDA  2ADE               	incf	postinc2,f,c
  1195  000EDC  0E00               	movlw	0
  1196  000EDE  22DD               	addwfc	postdec2,f,c
  1197  000EE0  0012               	return	
  1198  000EE2                     __end_of_Timer_message_handle:
  1199                           	opt stack 0
  1200                           tosu	equ	0xFFF
  1201                           tosh	equ	0xFFE
  1202                           tosl	equ	0xFFD
  1203                           pclath	equ	0xFFA
  1204                           tblptru	equ	0xFF8
  1205                           tblptrh	equ	0xFF7
  1206                           tblptrl	equ	0xFF6
  1207                           tablat	equ	0xFF5
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           indf1	equ	0xFE7
  1211                           postinc1	equ	0xFE6
  1212                           postdec1	equ	0xFE5
  1213                           fsr1h	equ	0xFE2
  1214                           fsr1l	equ	0xFE1
  1215                           indf2	equ	0xFDF
  1216                           postinc2	equ	0xFDE
  1217                           postdec2	equ	0xFDD
  1218                           fsr2h	equ	0xFDA
  1219                           fsr2l	equ	0xFD9
  1220                           status	equ	0xFD8
  1221                           
  1222 ;; *************** function _ToMainLow_recvmsg *****************
  1223 ;; Defined at:
  1224 ;;		line 112 in file "messages.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  maxlength       1   24[BANK0 ] unsigned char 
  1227 ;;  msgtype         2   25[BANK0 ] PTR unsigned char 
  1228 ;;		 -> main@msgtype(1), 
  1229 ;;  data            2   27[BANK0 ] PTR void 
  1230 ;;		 -> main@msgbuffer(11), 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      char 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1242 ;;      Params:         0       5       0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0
  1245 ;;      Totals:         0       5       0       0       0       0       0
  1246 ;;Total ram usage:        5 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    8
  1249 ;; This function calls:
  1250 ;;		_recv_msg
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text2
  1257  00154E                     __ptext2:
  1258                           	opt stack 0
  1259  00154E                     _ToMainLow_recvmsg:
  1260                           	opt stack 22
  1261                           
  1262                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  1263                           
  1264                           ;incstack = 0
  1265                           ;incstack = 0
  1266  00154E  0101               	movlb	1	; () banked
  1267  001550  0E01               	movlw	high _ToMainLow_MQ
  1268  001552  0100               	movlb	0	; () banked
  1269  001554  0100               	movlb	0	; () banked
  1270  001556  6F6B               	movwf	(?_recv_msg+1)& (0+255),b
  1271  001558  0101               	movlb	1	; () banked
  1272  00155A  0EA2               	movlw	low _ToMainLow_MQ
  1273  00155C  0100               	movlb	0	; () banked
  1274  00155E  6F6A               	movwf	?_recv_msg& (0+255),b
  1275  001560  C078  F06C         	movff	ToMainLow_recvmsg@maxlength,?_recv_msg+2
  1276  001564  C079  F06D         	movff	ToMainLow_recvmsg@msgtype,?_recv_msg+3
  1277  001568  C07A  F06E         	movff	ToMainLow_recvmsg@msgtype+1,?_recv_msg+4
  1278  00156C  C07B  F06F         	movff	ToMainLow_recvmsg@data,?_recv_msg+5
  1279  001570  C07C  F070         	movff	ToMainLow_recvmsg@data+1,?_recv_msg+6
  1280  001574  EC3E  F003         	call	_recv_msg	;wreg free
  1281  001578  0012               	return	
  1282  00157A                     __end_of_ToMainLow_recvmsg:
  1283                           	opt stack 0
  1284                           tosu	equ	0xFFF
  1285                           tosh	equ	0xFFE
  1286                           tosl	equ	0xFFD
  1287                           pclath	equ	0xFFA
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           indf1	equ	0xFE7
  1295                           postinc1	equ	0xFE6
  1296                           postdec1	equ	0xFE5
  1297                           fsr1h	equ	0xFE2
  1298                           fsr1l	equ	0xFE1
  1299                           indf2	equ	0xFDF
  1300                           postinc2	equ	0xFDE
  1301                           postdec2	equ	0xFDD
  1302                           fsr2h	equ	0xFDA
  1303                           fsr2l	equ	0xFD9
  1304                           status	equ	0xFD8
  1305                           
  1306 ;; *************** function _ReadWIFLY_Message *****************
  1307 ;; Defined at:
  1308 ;;		line 55 in file "operations.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  data            2   10[BANK0 ] PTR unsigned char 
  1311 ;;		 -> main@msgbuffer(11), 
  1312 ;;  length          2   12[BANK0 ] int 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;		None               void
  1317 ;; Registers used:
  1318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1324 ;;      Params:         0       4       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0
  1326 ;;      Temps:          0       1       0       0       0       0       0
  1327 ;;      Totals:         0       5       0       0       0       0       0
  1328 ;;Total ram usage:        5 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    8
  1331 ;; This function calls:
  1332 ;;		_UART1_Read_Disable
  1333 ;;		_laser_read
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text3
  1340  001216                     __ptext3:
  1341                           	opt stack 0
  1342  001216                     _ReadWIFLY_Message:
  1343                           	opt stack 22
  1344                           
  1345                           ;operations.c: 56: if(data[0] < 29 || data[0] > 200)
  1346                           
  1347                           ;incstack = 0
  1348                           ;incstack = 0
  1349  001216  C06A  FFD9         	movff	ReadWIFLY_Message@data,fsr2l
  1350  00121A  C06B  FFDA         	movff	ReadWIFLY_Message@data+1,fsr2h
  1351  00121E  0E1C               	movlw	28
  1352  001220  64DF               	cpfsgt	indf2,c
  1353  001222  0012               	return	
  1354  001224  C06A  FFD9         	movff	ReadWIFLY_Message@data,fsr2l
  1355  001228  C06B  FFDA         	movff	ReadWIFLY_Message@data+1,fsr2h
  1356  00122C  0EC8               	movlw	200
  1357  00122E  64DF               	cpfsgt	indf2,c
  1358  001230  D001               	goto	l1942
  1359  001232  0012               	return	
  1360  001234                     l1942:
  1361                           
  1362                           ;operations.c: 58: readings_num = data[0];
  1363  001234  C06A  FFD9         	movff	ReadWIFLY_Message@data,fsr2l
  1364  001238  C06B  FFDA         	movff	ReadWIFLY_Message@data+1,fsr2h
  1365  00123C  50DF               	movf	indf2,w,c
  1366  00123E  0100               	movlb	0	; () banked
  1367  001240  6F6E               	movwf	??_ReadWIFLY_Message& (0+255),b
  1368  001242  0100               	movlb	0	; () banked
  1369  001244  516E               	movf	??_ReadWIFLY_Message& (0+255),w,b
  1370  001246  0100               	movlb	0	; () banked
  1371  001248  0100               	movlb	0	; () banked
  1372  00124A  6FD8               	movwf	_readings_num& (0+255),b
  1373  00124C  0100               	movlb	0	; () banked
  1374  00124E  6BD9               	clrf	(_readings_num+1)& (0+255),b
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;operations.c: 59: readings_count = 0;
  1378  001250  0E00               	movlw	0
  1379  001252  0100               	movlb	0	; () banked
  1380  001254  0100               	movlb	0	; () banked
  1381  001256  6FD5               	movwf	(_readings_count+1)& (0+255),b
  1382  001258  0E00               	movlw	0
  1383  00125A  0100               	movlb	0	; () banked
  1384  00125C  6FD4               	movwf	_readings_count& (0+255),b
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;operations.c: 60: UART1_Read_Disable();
  1388  00125E  EC44  F00B         	call	_UART1_Read_Disable	;wreg free
  1389                           
  1390                           ;operations.c: 61: laser_read();
  1391  001262  EC4C  F00A         	call	_laser_read	;wreg free
  1392  001266  0012               	return	
  1393  001268                     __end_of_ReadWIFLY_Message:
  1394                           	opt stack 0
  1395                           tosu	equ	0xFFF
  1396                           tosh	equ	0xFFE
  1397                           tosl	equ	0xFFD
  1398                           pclath	equ	0xFFA
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           indf1	equ	0xFE7
  1406                           postinc1	equ	0xFE6
  1407                           postdec1	equ	0xFE5
  1408                           fsr1h	equ	0xFE2
  1409                           fsr1l	equ	0xFE1
  1410                           indf2	equ	0xFDF
  1411                           postinc2	equ	0xFDE
  1412                           postdec2	equ	0xFDD
  1413                           fsr2h	equ	0xFDA
  1414                           fsr2l	equ	0xFD9
  1415                           status	equ	0xFD8
  1416                           
  1417 ;; *************** function _laser_read *****************
  1418 ;; Defined at:
  1419 ;;		line 36 in file "operations.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  read            2    8[BANK0 ] unsigned char [2]
  1424 ;; Return value:  Size  Location     Type
  1425 ;;		None               void
  1426 ;; Registers used:
  1427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         0       0       0       0       0       0       0
  1434 ;;      Locals:         0       2       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         0       2       0       0       0       0       0
  1437 ;;Total ram usage:        2 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    7
  1440 ;; This function calls:
  1441 ;;		_UART2_Write
  1442 ;;		_UART2_Read
  1443 ;; This function is called by:
  1444 ;;		_move_motor
  1445 ;;		_ReadWIFLY_Message
  1446 ;;		_Timer_message_handle
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text4
  1451  001498                     __ptext4:
  1452                           	opt stack 0
  1453  001498                     _laser_read:
  1454                           	opt stack 22
  1455                           
  1456                           ;operations.c: 37: char read[] = "B";
  1457                           
  1458                           ;incstack = 0
  1459                           ;incstack = 0
  1460  001498  C0E4  F068         	movff	laser_read@F8867,laser_read@read
  1461  00149C  C0E5  F069         	movff	laser_read@F8867+1,laser_read@read+1
  1462                           
  1463                           ;operations.c: 38: UART2_Write(&read, 1);
  1464  0014A0  0100               	movlb	0	; () banked
  1465  0014A2  0E00               	movlw	high laser_read@read
  1466  0014A4  0100               	movlb	0	; () banked
  1467  0014A6  0100               	movlb	0	; () banked
  1468  0014A8  6F61               	movwf	(?_UART2_Write+1)& (0+255),b
  1469  0014AA  0100               	movlb	0	; () banked
  1470  0014AC  0E68               	movlw	low laser_read@read
  1471  0014AE  0100               	movlb	0	; () banked
  1472  0014B0  6F60               	movwf	?_UART2_Write& (0+255),b
  1473  0014B2  0E00               	movlw	0
  1474  0014B4  0100               	movlb	0	; () banked
  1475  0014B6  0100               	movlb	0	; () banked
  1476  0014B8  6F63               	movwf	(?_UART2_Write+3)& (0+255),b
  1477  0014BA  0E01               	movlw	1
  1478  0014BC  0100               	movlb	0	; () banked
  1479  0014BE  6F62               	movwf	(?_UART2_Write+2)& (0+255),b
  1480  0014C0  ECBB  F005         	call	_UART2_Write	;wreg free
  1481                           
  1482                           ;operations.c: 39: UART2_Read(6);
  1483  0014C4  0E00               	movlw	0
  1484  0014C6  0100               	movlb	0	; () banked
  1485  0014C8  0100               	movlb	0	; () banked
  1486  0014CA  6F61               	movwf	(?_UART2_Read+1)& (0+255),b
  1487  0014CC  0E06               	movlw	6
  1488  0014CE  0100               	movlb	0	; () banked
  1489  0014D0  6F60               	movwf	?_UART2_Read& (0+255),b
  1490  0014D2  EC09  F00A         	call	_UART2_Read	;wreg free
  1491  0014D6  0012               	return	
  1492  0014D8                     __end_of_laser_read:
  1493                           	opt stack 0
  1494                           tosu	equ	0xFFF
  1495                           tosh	equ	0xFFE
  1496                           tosl	equ	0xFFD
  1497                           pclath	equ	0xFFA
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           indf1	equ	0xFE7
  1505                           postinc1	equ	0xFE6
  1506                           postdec1	equ	0xFE5
  1507                           fsr1h	equ	0xFE2
  1508                           fsr1l	equ	0xFE1
  1509                           indf2	equ	0xFDF
  1510                           postinc2	equ	0xFDE
  1511                           postdec2	equ	0xFDD
  1512                           fsr2h	equ	0xFDA
  1513                           fsr2l	equ	0xFD9
  1514                           status	equ	0xFD8
  1515                           
  1516 ;; *************** function _UART1_Read_Disable *****************
  1517 ;; Defined at:
  1518 ;;		line 94 in file "my_UART.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;		None               void
  1525 ;; Registers used:
  1526 ;;		None
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1532 ;;      Params:         0       0       0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0
  1535 ;;      Totals:         0       0       0       0       0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    6
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_ReadWIFLY_Message
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text5
  1547  001688                     __ptext5:
  1548                           	opt stack 0
  1549  001688                     _UART1_Read_Disable:
  1550                           	opt stack 23
  1551                           
  1552                           ;my_UART.c: 95: PIE1bits.RC1IE = 0;
  1553                           
  1554                           ;incstack = 0
  1555                           ;incstack = 0
  1556  001688  9A9D               	bcf	3997,5,c	;volatile
  1557  00168A  0012               	return	
  1558  00168C                     __end_of_UART1_Read_Disable:
  1559                           	opt stack 0
  1560                           tosu	equ	0xFFF
  1561                           tosh	equ	0xFFE
  1562                           tosl	equ	0xFFD
  1563                           pclath	equ	0xFFA
  1564                           tblptru	equ	0xFF8
  1565                           tblptrh	equ	0xFF7
  1566                           tblptrl	equ	0xFF6
  1567                           tablat	equ	0xFF5
  1568                           postinc0	equ	0xFEE
  1569                           wreg	equ	0xFE8
  1570                           indf1	equ	0xFE7
  1571                           postinc1	equ	0xFE6
  1572                           postdec1	equ	0xFE5
  1573                           fsr1h	equ	0xFE2
  1574                           fsr1l	equ	0xFE1
  1575                           indf2	equ	0xFDF
  1576                           postinc2	equ	0xFDE
  1577                           postdec2	equ	0xFDD
  1578                           fsr2h	equ	0xFDA
  1579                           fsr2l	equ	0xFD9
  1580                           status	equ	0xFD8
  1581                           
  1582 ;; *************** function _ReadLaser_Message *****************
  1583 ;; Defined at:
  1584 ;;		line 64 in file "operations.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  data            2   18[BANK0 ] PTR unsigned char 
  1587 ;;		 -> main@msgbuffer(11), 
  1588 ;;  length          2   20[BANK0 ] int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  reading         2   26[BANK0 ] int 
  1591 ;;  arcarea         4   32[BANK0 ] unsigned long 
  1592 ;;  avgdist         4   28[BANK0 ] unsigned long 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;		None               void
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1602 ;;      Params:         0       4       0       0       0       0       0
  1603 ;;      Locals:         0      10       0       0       0       0       0
  1604 ;;      Temps:          0       4       0       0       0       0       0
  1605 ;;      Totals:         0      18       0       0       0       0       0
  1606 ;;Total ram usage:       18 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    8
  1609 ;; This function calls:
  1610 ;;		_UART1_Read_Enable
  1611 ;;		_move_motor
  1612 ;;		_return_motor
  1613 ;;		_wifi_write
  1614 ;;		___lmul
  1615 ;;		___lldiv
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text6
  1622  0000A6                     __ptext6:
  1623                           	opt stack 0
  1624  0000A6                     _ReadLaser_Message:
  1625                           	opt stack 22
  1626                           
  1627                           ;operations.c: 65: static long lastdist = -1;
  1628                           ;operations.c: 66: static unsigned long total = 0;
  1629                           ;operations.c: 67: unsigned long avgdist = 0;
  1630                           
  1631                           ;incstack = 0
  1632                           ;incstack = 0
  1633  0000A6  0E00               	movlw	0
  1634  0000A8  0100               	movlb	0	; () banked
  1635  0000AA  0100               	movlb	0	; () banked
  1636  0000AC  6F7C               	movwf	ReadLaser_Message@avgdist& (0+255),b
  1637  0000AE  0E00               	movlw	0
  1638  0000B0  0100               	movlb	0	; () banked
  1639  0000B2  6F7D               	movwf	(ReadLaser_Message@avgdist+1)& (0+255),b
  1640  0000B4  0E00               	movlw	0
  1641  0000B6  0100               	movlb	0	; () banked
  1642  0000B8  6F7E               	movwf	(ReadLaser_Message@avgdist+2)& (0+255),b
  1643  0000BA  0E00               	movlw	0
  1644  0000BC  0100               	movlb	0	; () banked
  1645  0000BE  6F7F               	movwf	(ReadLaser_Message@avgdist+3)& (0+255),b
  1646                           
  1647                           ;operations.c: 68: unsigned long arcarea = 0;
  1648  0000C0  0E00               	movlw	0
  1649  0000C2  0100               	movlb	0	; () banked
  1650  0000C4  0100               	movlb	0	; () banked
  1651  0000C6  6F80               	movwf	ReadLaser_Message@arcarea& (0+255),b
  1652  0000C8  0E00               	movlw	0
  1653  0000CA  0100               	movlb	0	; () banked
  1654  0000CC  6F81               	movwf	(ReadLaser_Message@arcarea+1)& (0+255),b
  1655  0000CE  0E00               	movlw	0
  1656  0000D0  0100               	movlb	0	; () banked
  1657  0000D2  6F82               	movwf	(ReadLaser_Message@arcarea+2)& (0+255),b
  1658  0000D4  0E00               	movlw	0
  1659  0000D6  0100               	movlb	0	; () banked
  1660  0000D8  6F83               	movwf	(ReadLaser_Message@arcarea+3)& (0+255),b
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;operations.c: 70: if (length == 6) {
  1664  0000DA  0100               	movlb	0	; () banked
  1665  0000DC  0100               	movlb	0	; () banked
  1666  0000DE  5174               	movf	ReadLaser_Message@length& (0+255),w,b
  1667  0000E0  0A06               	xorlw	6
  1668  0000E2  1175               	iorwf	(ReadLaser_Message@length+1)& (0+255),w,b
  1669  0000E4  A4D8               	btfss	status,2,c
  1670  0000E6  D15C               	goto	l1936
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;operations.c: 71: int reading = 0;
  1674  0000E8  0E00               	movlw	0
  1675  0000EA  0100               	movlb	0	; () banked
  1676  0000EC  0100               	movlb	0	; () banked
  1677  0000EE  6F7B               	movwf	(ReadLaser_Message@reading+1)& (0+255),b
  1678  0000F0  0E00               	movlw	0
  1679  0000F2  0100               	movlb	0	; () banked
  1680  0000F4  6F7A               	movwf	ReadLaser_Message@reading& (0+255),b
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;operations.c: 73: reading += data[2] << 8;
  1684  0000F6  0100               	movlb	0	; () banked
  1685  0000F8  EE20 F002          	lfsr	2,2
  1686  0000FC  0100               	movlb	0	; () banked
  1687  0000FE  5172               	movf	ReadLaser_Message@data& (0+255),w,b
  1688  000100  26D9               	addwf	fsr2l,f,c
  1689  000102  0100               	movlb	0	; () banked
  1690  000104  5173               	movf	(ReadLaser_Message@data+1)& (0+255),w,b
  1691  000106  22DA               	addwfc	fsr2h,f,c
  1692  000108  50DF               	movf	indf2,w,c
  1693  00010A  0100               	movlb	0	; () banked
  1694  00010C  0100               	movlb	0	; () banked
  1695  00010E  277B               	addwf	(ReadLaser_Message@reading+1)& (0+255),f,b
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;operations.c: 74: reading += data[3];
  1699  000110  0100               	movlb	0	; () banked
  1700  000112  EE20 F003          	lfsr	2,3
  1701  000116  0100               	movlb	0	; () banked
  1702  000118  5172               	movf	ReadLaser_Message@data& (0+255),w,b
  1703  00011A  26D9               	addwf	fsr2l,f,c
  1704  00011C  0100               	movlb	0	; () banked
  1705  00011E  5173               	movf	(ReadLaser_Message@data+1)& (0+255),w,b
  1706  000120  22DA               	addwfc	fsr2h,f,c
  1707  000122  50DF               	movf	indf2,w,c
  1708  000124  0100               	movlb	0	; () banked
  1709  000126  6F76               	movwf	??_ReadLaser_Message& (0+255),b
  1710  000128  0100               	movlb	0	; () banked
  1711  00012A  5176               	movf	??_ReadLaser_Message& (0+255),w,b
  1712  00012C  0100               	movlb	0	; () banked
  1713  00012E  0100               	movlb	0	; () banked
  1714  000130  277A               	addwf	ReadLaser_Message@reading& (0+255),f,b
  1715  000132  0E00               	movlw	0
  1716  000134  0100               	movlb	0	; () banked
  1717  000136  237B               	addwfc	(ReadLaser_Message@reading+1)& (0+255),f,b
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;operations.c: 76: if (lastdist != -1) {
  1721  000138  0100               	movlb	0	; () banked
  1722  00013A  0100               	movlb	0	; () banked
  1723  00013C  29E0               	incf	ReadLaser_Message@lastdist& (0+255),w,b
  1724  00013E  B4D8               	btfsc	status,2,c
  1725  000140  29E1               	incf	(ReadLaser_Message@lastdist+1)& (0+255),w,b
  1726  000142  B4D8               	btfsc	status,2,c
  1727  000144  29E2               	incf	(ReadLaser_Message@lastdist+2)& (0+255),w,b
  1728  000146  B4D8               	btfsc	status,2,c
  1729  000148  29E3               	incf	(ReadLaser_Message@lastdist+3)& (0+255),w,b
  1730  00014A  B4D8               	btfsc	status,2,c
  1731  00014C  D0E4               	goto	l1922
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;operations.c: 77: avgdist = (reading + lastdist);
  1735  00014E  0100               	movlb	0	; () banked
  1736  000150  C07A  F076         	movff	ReadLaser_Message@reading,??_ReadLaser_Message
  1737  000154  0100               	movlb	0	; () banked
  1738  000156  C07B  F077         	movff	ReadLaser_Message@reading+1,??_ReadLaser_Message+1
  1739  00015A  0E00               	movlw	0
  1740  00015C  0100               	movlb	0	; () banked
  1741  00015E  BF77               	btfsc	(??_ReadLaser_Message+1)& (0+255),7,b
  1742  000160  0EFF               	movlw	255
  1743  000162  6F78               	movwf	(??_ReadLaser_Message+2)& (0+255),b
  1744  000164  6F79               	movwf	(??_ReadLaser_Message+3)& (0+255),b
  1745  000166  0100               	movlb	0	; () banked
  1746  000168  0100               	movlb	0	; () banked
  1747  00016A  51E0               	movf	ReadLaser_Message@lastdist& (0+255),w,b
  1748  00016C  0100               	movlb	0	; () banked
  1749  00016E  2576               	addwf	??_ReadLaser_Message& (0+255),w,b
  1750  000170  0100               	movlb	0	; () banked
  1751  000172  0100               	movlb	0	; () banked
  1752  000174  6F7C               	movwf	ReadLaser_Message@avgdist& (0+255),b
  1753  000176  0100               	movlb	0	; () banked
  1754  000178  0100               	movlb	0	; () banked
  1755  00017A  51E1               	movf	(ReadLaser_Message@lastdist+1)& (0+255),w,b
  1756  00017C  0100               	movlb	0	; () banked
  1757  00017E  2177               	addwfc	(??_ReadLaser_Message+1)& (0+255),w,b
  1758  000180  0100               	movlb	0	; () banked
  1759  000182  6F7D               	movwf	(ReadLaser_Message@avgdist+1)& (0+255),b
  1760  000184  0100               	movlb	0	; () banked
  1761  000186  0100               	movlb	0	; () banked
  1762  000188  51E2               	movf	(ReadLaser_Message@lastdist+2)& (0+255),w,b
  1763  00018A  0100               	movlb	0	; () banked
  1764  00018C  2178               	addwfc	(??_ReadLaser_Message+2)& (0+255),w,b
  1765  00018E  0100               	movlb	0	; () banked
  1766  000190  6F7E               	movwf	(ReadLaser_Message@avgdist+2)& (0+255),b
  1767  000192  0100               	movlb	0	; () banked
  1768  000194  0100               	movlb	0	; () banked
  1769  000196  51E3               	movf	(ReadLaser_Message@lastdist+3)& (0+255),w,b
  1770  000198  0100               	movlb	0	; () banked
  1771  00019A  2179               	addwfc	(??_ReadLaser_Message+3)& (0+255),w,b
  1772  00019C  0100               	movlb	0	; () banked
  1773  00019E  6F7F               	movwf	(ReadLaser_Message@avgdist+3)& (0+255),b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;operations.c: 78: avgdist = (avgdist / 2);
  1777  0001A0  0100               	movlb	0	; () banked
  1778  0001A2  C07C  F076         	movff	ReadLaser_Message@avgdist,??_ReadLaser_Message
  1779  0001A6  0100               	movlb	0	; () banked
  1780  0001A8  C07D  F077         	movff	ReadLaser_Message@avgdist+1,??_ReadLaser_Message+1
  1781  0001AC  0100               	movlb	0	; () banked
  1782  0001AE  C07E  F078         	movff	ReadLaser_Message@avgdist+2,??_ReadLaser_Message+2
  1783  0001B2  0100               	movlb	0	; () banked
  1784  0001B4  C07F  F079         	movff	ReadLaser_Message@avgdist+3,??_ReadLaser_Message+3
  1785  0001B8  0100               	movlb	0	; () banked
  1786  0001BA  90D8               	bcf	status,0,c
  1787  0001BC  3379               	rrcf	(??_ReadLaser_Message+3)& (0+255),f,b
  1788  0001BE  3378               	rrcf	(??_ReadLaser_Message+2)& (0+255),f,b
  1789  0001C0  3377               	rrcf	(??_ReadLaser_Message+1)& (0+255),f,b
  1790  0001C2  3376               	rrcf	??_ReadLaser_Message& (0+255),f,b
  1791  0001C4  C079  F07F         	movff	??_ReadLaser_Message+3,ReadLaser_Message@avgdist+3
  1792  0001C8  C078  F07E         	movff	??_ReadLaser_Message+2,ReadLaser_Message@avgdist+2
  1793  0001CC  C077  F07D         	movff	??_ReadLaser_Message+1,ReadLaser_Message@avgdist+1
  1794  0001D0  C076  F07C         	movff	??_ReadLaser_Message,ReadLaser_Message@avgdist
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;operations.c: 79: arcarea = avgdist*avgdist;
  1798  0001D4  C07C  F060         	movff	ReadLaser_Message@avgdist,?___lmul
  1799  0001D8  C07D  F061         	movff	ReadLaser_Message@avgdist+1,?___lmul+1
  1800  0001DC  C07E  F062         	movff	ReadLaser_Message@avgdist+2,?___lmul+2
  1801  0001E0  C07F  F063         	movff	ReadLaser_Message@avgdist+3,?___lmul+3
  1802  0001E4  C07C  F064         	movff	ReadLaser_Message@avgdist,?___lmul+4
  1803  0001E8  C07D  F065         	movff	ReadLaser_Message@avgdist+1,?___lmul+5
  1804  0001EC  C07E  F066         	movff	ReadLaser_Message@avgdist+2,?___lmul+6
  1805  0001F0  C07F  F067         	movff	ReadLaser_Message@avgdist+3,?___lmul+7
  1806  0001F4  EC71  F007         	call	___lmul	;wreg free
  1807  0001F8  C063  F083         	movff	?___lmul+3,ReadLaser_Message@arcarea+3
  1808  0001FC  C062  F082         	movff	?___lmul+2,ReadLaser_Message@arcarea+2
  1809  000200  C061  F081         	movff	?___lmul+1,ReadLaser_Message@arcarea+1
  1810  000204  C060  F080         	movff	?___lmul,ReadLaser_Message@arcarea
  1811                           
  1812                           ;operations.c: 80: arcarea = (arcarea / readings_num);
  1813  000208  C080  F060         	movff	ReadLaser_Message@arcarea,?___lldiv
  1814  00020C  C081  F061         	movff	ReadLaser_Message@arcarea+1,?___lldiv+1
  1815  000210  C082  F062         	movff	ReadLaser_Message@arcarea+2,?___lldiv+2
  1816  000214  C083  F063         	movff	ReadLaser_Message@arcarea+3,?___lldiv+3
  1817  000218  0100               	movlb	0	; () banked
  1818  00021A  0100               	movlb	0	; () banked
  1819  00021C  C0D8  F064         	movff	_readings_num,?___lldiv+4
  1820  000220  0100               	movlb	0	; () banked
  1821  000222  0100               	movlb	0	; () banked
  1822  000224  C0D9  F065         	movff	_readings_num+1,?___lldiv+5
  1823  000228  0100               	movlb	0	; () banked
  1824  00022A  0E00               	movlw	0
  1825  00022C  0100               	movlb	0	; () banked
  1826  00022E  BF65               	btfsc	(?___lldiv+5)& (0+255),7,b
  1827  000230  0EFF               	movlw	-1
  1828  000232  0100               	movlb	0	; () banked
  1829  000234  6F66               	movwf	(?___lldiv+6)& (0+255),b
  1830  000236  0100               	movlb	0	; () banked
  1831  000238  6F67               	movwf	(?___lldiv+7)& (0+255),b
  1832  00023A  EC5F  F004         	call	___lldiv	;wreg free
  1833  00023E  C063  F083         	movff	?___lldiv+3,ReadLaser_Message@arcarea+3
  1834  000242  C062  F082         	movff	?___lldiv+2,ReadLaser_Message@arcarea+2
  1835  000246  C061  F081         	movff	?___lldiv+1,ReadLaser_Message@arcarea+1
  1836  00024A  C060  F080         	movff	?___lldiv,ReadLaser_Message@arcarea
  1837                           
  1838                           ;operations.c: 81: arcarea = (arcarea * 314);
  1839  00024E  C080  F060         	movff	ReadLaser_Message@arcarea,?___lmul
  1840  000252  C081  F061         	movff	ReadLaser_Message@arcarea+1,?___lmul+1
  1841  000256  C082  F062         	movff	ReadLaser_Message@arcarea+2,?___lmul+2
  1842  00025A  C083  F063         	movff	ReadLaser_Message@arcarea+3,?___lmul+3
  1843  00025E  0E3A               	movlw	58
  1844  000260  0100               	movlb	0	; () banked
  1845  000262  0100               	movlb	0	; () banked
  1846  000264  6F64               	movwf	(?___lmul+4)& (0+255),b
  1847  000266  0E01               	movlw	1
  1848  000268  0100               	movlb	0	; () banked
  1849  00026A  6F65               	movwf	(?___lmul+5)& (0+255),b
  1850  00026C  0E00               	movlw	0
  1851  00026E  0100               	movlb	0	; () banked
  1852  000270  6F66               	movwf	(?___lmul+6)& (0+255),b
  1853  000272  0E00               	movlw	0
  1854  000274  0100               	movlb	0	; () banked
  1855  000276  6F67               	movwf	(?___lmul+7)& (0+255),b
  1856  000278  EC71  F007         	call	___lmul	;wreg free
  1857  00027C  C063  F083         	movff	?___lmul+3,ReadLaser_Message@arcarea+3
  1858  000280  C062  F082         	movff	?___lmul+2,ReadLaser_Message@arcarea+2
  1859  000284  C061  F081         	movff	?___lmul+1,ReadLaser_Message@arcarea+1
  1860  000288  C060  F080         	movff	?___lmul,ReadLaser_Message@arcarea
  1861                           
  1862                           ;operations.c: 82: arcarea = (arcarea / 100);
  1863  00028C  C080  F060         	movff	ReadLaser_Message@arcarea,?___lldiv
  1864  000290  C081  F061         	movff	ReadLaser_Message@arcarea+1,?___lldiv+1
  1865  000294  C082  F062         	movff	ReadLaser_Message@arcarea+2,?___lldiv+2
  1866  000298  C083  F063         	movff	ReadLaser_Message@arcarea+3,?___lldiv+3
  1867  00029C  0E64               	movlw	100
  1868  00029E  0100               	movlb	0	; () banked
  1869  0002A0  0100               	movlb	0	; () banked
  1870  0002A2  6F64               	movwf	(?___lldiv+4)& (0+255),b
  1871  0002A4  0E00               	movlw	0
  1872  0002A6  0100               	movlb	0	; () banked
  1873  0002A8  6F65               	movwf	(?___lldiv+5)& (0+255),b
  1874  0002AA  0E00               	movlw	0
  1875  0002AC  0100               	movlb	0	; () banked
  1876  0002AE  6F66               	movwf	(?___lldiv+6)& (0+255),b
  1877  0002B0  0E00               	movlw	0
  1878  0002B2  0100               	movlb	0	; () banked
  1879  0002B4  6F67               	movwf	(?___lldiv+7)& (0+255),b
  1880  0002B6  EC5F  F004         	call	___lldiv	;wreg free
  1881  0002BA  C063  F083         	movff	?___lldiv+3,ReadLaser_Message@arcarea+3
  1882  0002BE  C062  F082         	movff	?___lldiv+2,ReadLaser_Message@arcarea+2
  1883  0002C2  C061  F081         	movff	?___lldiv+1,ReadLaser_Message@arcarea+1
  1884  0002C6  C060  F080         	movff	?___lldiv,ReadLaser_Message@arcarea
  1885                           
  1886                           ;operations.c: 83: total += arcarea;
  1887  0002CA  0100               	movlb	0	; () banked
  1888  0002CC  0100               	movlb	0	; () banked
  1889  0002CE  5180               	movf	ReadLaser_Message@arcarea& (0+255),w,b
  1890  0002D0  0100               	movlb	0	; () banked
  1891  0002D2  0100               	movlb	0	; () banked
  1892  0002D4  27D0               	addwf	ReadLaser_Message@total& (0+255),f,b
  1893  0002D6  0100               	movlb	0	; () banked
  1894  0002D8  0100               	movlb	0	; () banked
  1895  0002DA  5181               	movf	(ReadLaser_Message@arcarea+1)& (0+255),w,b
  1896  0002DC  0100               	movlb	0	; () banked
  1897  0002DE  0100               	movlb	0	; () banked
  1898  0002E0  23D1               	addwfc	(ReadLaser_Message@total+1)& (0+255),f,b
  1899  0002E2  0100               	movlb	0	; () banked
  1900  0002E4  0100               	movlb	0	; () banked
  1901  0002E6  5182               	movf	(ReadLaser_Message@arcarea+2)& (0+255),w,b
  1902  0002E8  0100               	movlb	0	; () banked
  1903  0002EA  0100               	movlb	0	; () banked
  1904  0002EC  23D2               	addwfc	(ReadLaser_Message@total+2)& (0+255),f,b
  1905  0002EE  0100               	movlb	0	; () banked
  1906  0002F0  0100               	movlb	0	; () banked
  1907  0002F2  5183               	movf	(ReadLaser_Message@arcarea+3)& (0+255),w,b
  1908  0002F4  0100               	movlb	0	; () banked
  1909  0002F6  0100               	movlb	0	; () banked
  1910  0002F8  23D3               	addwfc	(ReadLaser_Message@total+3)& (0+255),f,b
  1911                           
  1912                           ;operations.c: 84: readings_count++;
  1913  0002FA  0100               	movlb	0	; () banked
  1914  0002FC  0100               	movlb	0	; () banked
  1915  0002FE  4BD4               	infsnz	_readings_count& (0+255),f,b
  1916  000300  2BD5               	incf	(_readings_count+1)& (0+255),f,b
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;operations.c: 85: wifi_write(total);
  1920  000302  C0D0  F068         	movff	ReadLaser_Message@total,?_wifi_write
  1921  000306  C0D1  F069         	movff	ReadLaser_Message@total+1,?_wifi_write+1
  1922  00030A  C0D2  F06A         	movff	ReadLaser_Message@total+2,?_wifi_write+2
  1923  00030E  C0D3  F06B         	movff	ReadLaser_Message@total+3,?_wifi_write+3
  1924  000312  EC7F  F009         	call	_wifi_write	;wreg free
  1925  000316                     l1922:
  1926                           
  1927                           ;operations.c: 86: }
  1928                           ;operations.c: 88: lastdist = reading;
  1929  000316  0100               	movlb	0	; () banked
  1930  000318  0100               	movlb	0	; () banked
  1931  00031A  C07A  F0E0         	movff	ReadLaser_Message@reading,ReadLaser_Message@lastdist
  1932  00031E  0100               	movlb	0	; () banked
  1933  000320  0100               	movlb	0	; () banked
  1934  000322  C07B  F0E1         	movff	ReadLaser_Message@reading+1,ReadLaser_Message@lastdist+1
  1935  000326  0100               	movlb	0	; () banked
  1936  000328  0E00               	movlw	0
  1937  00032A  0100               	movlb	0	; () banked
  1938  00032C  BFE1               	btfsc	(ReadLaser_Message@lastdist+1)& (0+255),7,b
  1939  00032E  0EFF               	movlw	-1
  1940  000330  0100               	movlb	0	; () banked
  1941  000332  6FE2               	movwf	(ReadLaser_Message@lastdist+2)& (0+255),b
  1942  000334  0100               	movlb	0	; () banked
  1943  000336  6FE3               	movwf	(ReadLaser_Message@lastdist+3)& (0+255),b
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;operations.c: 90: if (readings_count == readings_num) {
  1947  000338  0100               	movlb	0	; () banked
  1948  00033A  0100               	movlb	0	; () banked
  1949  00033C  51D9               	movf	(_readings_num+1)& (0+255),w,b
  1950  00033E  0100               	movlb	0	; () banked
  1951  000340  0100               	movlb	0	; () banked
  1952  000342  19D5               	xorwf	(_readings_count+1)& (0+255),w,b
  1953  000344  E106               	bnz	u685
  1954  000346  0100               	movlb	0	; () banked
  1955  000348  0100               	movlb	0	; () banked
  1956  00034A  51D8               	movf	_readings_num& (0+255),w,b
  1957  00034C  0100               	movlb	0	; () banked
  1958  00034E  0100               	movlb	0	; () banked
  1959  000350  19D4               	xorwf	_readings_count& (0+255),w,b
  1960  000352                     u685:
  1961  000352  A4D8               	btfss	status,2,c
  1962  000354  D022               	goto	l1934
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;operations.c: 91: lastdist = -1;
  1966  000356  0100               	movlb	0	; () banked
  1967  000358  0100               	movlb	0	; () banked
  1968  00035A  69E0               	setf	ReadLaser_Message@lastdist& (0+255),b
  1969  00035C  0100               	movlb	0	; () banked
  1970  00035E  69E1               	setf	(ReadLaser_Message@lastdist+1)& (0+255),b
  1971  000360  0100               	movlb	0	; () banked
  1972  000362  69E2               	setf	(ReadLaser_Message@lastdist+2)& (0+255),b
  1973  000364  0100               	movlb	0	; () banked
  1974  000366  69E3               	setf	(ReadLaser_Message@lastdist+3)& (0+255),b
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;operations.c: 92: total = 0;
  1978  000368  0E00               	movlw	0
  1979  00036A  0100               	movlb	0	; () banked
  1980  00036C  0100               	movlb	0	; () banked
  1981  00036E  6FD0               	movwf	ReadLaser_Message@total& (0+255),b
  1982  000370  0E00               	movlw	0
  1983  000372  0100               	movlb	0	; () banked
  1984  000374  6FD1               	movwf	(ReadLaser_Message@total+1)& (0+255),b
  1985  000376  0E00               	movlw	0
  1986  000378  0100               	movlb	0	; () banked
  1987  00037A  6FD2               	movwf	(ReadLaser_Message@total+2)& (0+255),b
  1988  00037C  0E00               	movlw	0
  1989  00037E  0100               	movlb	0	; () banked
  1990  000380  6FD3               	movwf	(ReadLaser_Message@total+3)& (0+255),b
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;operations.c: 93: return_motor();
  1994  000382  ECBD  F00A         	call	_return_motor	;wreg free
  1995                           
  1996                           ;operations.c: 94: UART1_Read_Enable(0);
  1997  000386  0E00               	movlw	0
  1998  000388  0100               	movlb	0	; () banked
  1999  00038A  0100               	movlb	0	; () banked
  2000  00038C  6F61               	movwf	(?_UART1_Read_Enable+1)& (0+255),b
  2001  00038E  0E00               	movlw	0
  2002  000390  0100               	movlb	0	; () banked
  2003  000392  6F60               	movwf	?_UART1_Read_Enable& (0+255),b
  2004  000394  EC3A  F00B         	call	_UART1_Read_Enable	;wreg free
  2005                           
  2006                           ;operations.c: 95: } else {
  2007  000398  0012               	return	
  2008  00039A                     l1934:
  2009                           
  2010                           ;operations.c: 96: move_motor();
  2011  00039A  ECC5  F009         	call	_move_motor	;wreg free
  2012  00039E  0012               	return	
  2013  0003A0                     l1936:
  2014                           
  2015                           ;operations.c: 99: UART1_Read_Enable();
  2016  0003A0  EC3A  F00B         	call	_UART1_Read_Enable	;wreg free
  2017  0003A4  0012               	return	
  2018  0003A6                     __end_of_ReadLaser_Message:
  2019                           	opt stack 0
  2020                           tosu	equ	0xFFF
  2021                           tosh	equ	0xFFE
  2022                           tosl	equ	0xFFD
  2023                           pclath	equ	0xFFA
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           indf1	equ	0xFE7
  2031                           postinc1	equ	0xFE6
  2032                           postdec1	equ	0xFE5
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           indf2	equ	0xFDF
  2036                           postinc2	equ	0xFDE
  2037                           postdec2	equ	0xFDD
  2038                           fsr2h	equ	0xFDA
  2039                           fsr2l	equ	0xFD9
  2040                           status	equ	0xFD8
  2041                           
  2042 ;; *************** function ___lldiv *****************
  2043 ;; Defined at:
  2044 ;;		line 10 in file "/Applications/microchip/xc8/v1.21/sources/common/lldiv.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  dividend        4    0[BANK0 ] unsigned long 
  2047 ;;  divisor         4    4[BANK0 ] unsigned long 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  quotient        4    9[BANK0 ] unsigned long 
  2050 ;;  counter         1   13[BANK0 ] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  4    0[BANK0 ] unsigned long 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2060 ;;      Params:         0       8       0       0       0       0       0
  2061 ;;      Locals:         0       5       0       0       0       0       0
  2062 ;;      Temps:          0       1       0       0       0       0       0
  2063 ;;      Totals:         0      14       0       0       0       0       0
  2064 ;;Total ram usage:       14 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    6
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_ReadLaser_Message
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text7
  2075  0008BE                     __ptext7:
  2076                           	opt stack 0
  2077  0008BE                     ___lldiv:
  2078                           	opt stack 23
  2079                           
  2080                           ;incstack = 0
  2081                           ;incstack = 0
  2082  0008BE  0E00               	movlw	0
  2083  0008C0  0100               	movlb	0	; () banked
  2084  0008C2  0100               	movlb	0	; () banked
  2085  0008C4  6F69               	movwf	___lldiv@quotient& (0+255),b
  2086  0008C6  0E00               	movlw	0
  2087  0008C8  0100               	movlb	0	; () banked
  2088  0008CA  6F6A               	movwf	(___lldiv@quotient+1)& (0+255),b
  2089  0008CC  0E00               	movlw	0
  2090  0008CE  0100               	movlb	0	; () banked
  2091  0008D0  6F6B               	movwf	(___lldiv@quotient+2)& (0+255),b
  2092  0008D2  0E00               	movlw	0
  2093  0008D4  0100               	movlb	0	; () banked
  2094  0008D6  6F6C               	movwf	(___lldiv@quotient+3)& (0+255),b
  2095                           
  2096                           ; BSR set to: 0
  2097  0008D8  0100               	movlb	0	; () banked
  2098  0008DA  0100               	movlb	0	; () banked
  2099  0008DC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2100  0008DE  1164               	iorwf	___lldiv@divisor& (0+255),w,b
  2101  0008E0  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  2102  0008E2  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  2103  0008E4  B4D8               	btfsc	status,2,c
  2104  0008E6  D067               	goto	l823
  2105                           
  2106                           ; BSR set to: 0
  2107  0008E8  0100               	movlb	0	; () banked
  2108  0008EA  6F68               	movwf	??___lldiv& (0+255),b
  2109  0008EC  0E01               	movlw	1
  2110  0008EE  0100               	movlb	0	; () banked
  2111  0008F0  0100               	movlb	0	; () banked
  2112  0008F2  6F6D               	movwf	___lldiv@counter& (0+255),b
  2113  0008F4  0100               	movlb	0	; () banked
  2114  0008F6  5168               	movf	??___lldiv& (0+255),w,b
  2115  0008F8  D00D               	goto	l2370
  2116  0008FA                     l2368:
  2117                           
  2118                           ; BSR set to: 0
  2119  0008FA  0100               	movlb	0	; () banked
  2120  0008FC  90D8               	bcf	status,0,c
  2121  0008FE  0100               	movlb	0	; () banked
  2122  000900  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  2123  000902  0100               	movlb	0	; () banked
  2124  000904  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  2125  000906  0100               	movlb	0	; () banked
  2126  000908  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  2127  00090A  0100               	movlb	0	; () banked
  2128  00090C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  2129  00090E  0100               	movlb	0	; () banked
  2130  000910  0100               	movlb	0	; () banked
  2131  000912  2B6D               	incf	___lldiv@counter& (0+255),f,b
  2132  000914                     l2370:
  2133                           
  2134                           ; BSR set to: 0
  2135  000914  0100               	movlb	0	; () banked
  2136  000916  0100               	movlb	0	; () banked
  2137  000918  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  2138  00091A  D7EF               	goto	l2368
  2139  00091C                     l2372:
  2140                           
  2141                           ; BSR set to: 0
  2142  00091C  0100               	movlb	0	; () banked
  2143  00091E  90D8               	bcf	status,0,c
  2144  000920  0100               	movlb	0	; () banked
  2145  000922  3769               	rlcf	___lldiv@quotient& (0+255),f,b
  2146  000924  0100               	movlb	0	; () banked
  2147  000926  376A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  2148  000928  0100               	movlb	0	; () banked
  2149  00092A  376B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  2150  00092C  0100               	movlb	0	; () banked
  2151  00092E  376C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  2152                           
  2153                           ; BSR set to: 0
  2154  000930  0100               	movlb	0	; () banked
  2155  000932  0100               	movlb	0	; () banked
  2156  000934  5164               	movf	___lldiv@divisor& (0+255),w,b
  2157  000936  0100               	movlb	0	; () banked
  2158  000938  0100               	movlb	0	; () banked
  2159  00093A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  2160  00093C  0100               	movlb	0	; () banked
  2161  00093E  0100               	movlb	0	; () banked
  2162  000940  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  2163  000942  0100               	movlb	0	; () banked
  2164  000944  0100               	movlb	0	; () banked
  2165  000946  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  2166  000948  0100               	movlb	0	; () banked
  2167  00094A  0100               	movlb	0	; () banked
  2168  00094C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  2169  00094E  0100               	movlb	0	; () banked
  2170  000950  0100               	movlb	0	; () banked
  2171  000952  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  2172  000954  0100               	movlb	0	; () banked
  2173  000956  0100               	movlb	0	; () banked
  2174  000958  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2175  00095A  0100               	movlb	0	; () banked
  2176  00095C  0100               	movlb	0	; () banked
  2177  00095E  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  2178  000960  A0D8               	btfss	status,0,c
  2179  000962  D01B               	goto	l2380
  2180                           
  2181                           ; BSR set to: 0
  2182  000964  0100               	movlb	0	; () banked
  2183  000966  0100               	movlb	0	; () banked
  2184  000968  5164               	movf	___lldiv@divisor& (0+255),w,b
  2185  00096A  0100               	movlb	0	; () banked
  2186  00096C  0100               	movlb	0	; () banked
  2187  00096E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  2188  000970  0100               	movlb	0	; () banked
  2189  000972  0100               	movlb	0	; () banked
  2190  000974  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  2191  000976  0100               	movlb	0	; () banked
  2192  000978  0100               	movlb	0	; () banked
  2193  00097A  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  2194  00097C  0100               	movlb	0	; () banked
  2195  00097E  0100               	movlb	0	; () banked
  2196  000980  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  2197  000982  0100               	movlb	0	; () banked
  2198  000984  0100               	movlb	0	; () banked
  2199  000986  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  2200  000988  0100               	movlb	0	; () banked
  2201  00098A  0100               	movlb	0	; () banked
  2202  00098C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2203  00098E  0100               	movlb	0	; () banked
  2204  000990  0100               	movlb	0	; () banked
  2205  000992  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  2206                           
  2207                           ; BSR set to: 0
  2208  000994  0100               	movlb	0	; () banked
  2209  000996  0100               	movlb	0	; () banked
  2210  000998  8169               	bsf	___lldiv@quotient& (0+255),0,b
  2211  00099A                     l2380:
  2212                           
  2213                           ; BSR set to: 0
  2214  00099A  0100               	movlb	0	; () banked
  2215  00099C  90D8               	bcf	status,0,c
  2216  00099E  0100               	movlb	0	; () banked
  2217  0009A0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  2218  0009A2  0100               	movlb	0	; () banked
  2219  0009A4  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  2220  0009A6  0100               	movlb	0	; () banked
  2221  0009A8  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  2222  0009AA  0100               	movlb	0	; () banked
  2223  0009AC  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  2224                           
  2225                           ; BSR set to: 0
  2226  0009AE  0100               	movlb	0	; () banked
  2227  0009B0  0100               	movlb	0	; () banked
  2228  0009B2  2F6D               	decfsz	___lldiv@counter& (0+255),f,b
  2229  0009B4  D7B3               	goto	l2372
  2230  0009B6                     l823:
  2231                           
  2232                           ; BSR set to: 0
  2233  0009B6  C069  F060         	movff	___lldiv@quotient,?___lldiv
  2234  0009BA  C06A  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  2235  0009BE  C06B  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  2236  0009C2  C06C  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  2237                           
  2238                           ; BSR set to: 0
  2239  0009C6  0012               	return	
  2240  0009C8                     __end_of___lldiv:
  2241                           	opt stack 0
  2242                           tosu	equ	0xFFF
  2243                           tosh	equ	0xFFE
  2244                           tosl	equ	0xFFD
  2245                           pclath	equ	0xFFA
  2246                           tblptru	equ	0xFF8
  2247                           tblptrh	equ	0xFF7
  2248                           tblptrl	equ	0xFF6
  2249                           tablat	equ	0xFF5
  2250                           postinc0	equ	0xFEE
  2251                           wreg	equ	0xFE8
  2252                           indf1	equ	0xFE7
  2253                           postinc1	equ	0xFE6
  2254                           postdec1	equ	0xFE5
  2255                           fsr1h	equ	0xFE2
  2256                           fsr1l	equ	0xFE1
  2257                           indf2	equ	0xFDF
  2258                           postinc2	equ	0xFDE
  2259                           postdec2	equ	0xFDD
  2260                           fsr2h	equ	0xFDA
  2261                           fsr2l	equ	0xFD9
  2262                           status	equ	0xFD8
  2263                           
  2264 ;; *************** function ___lmul *****************
  2265 ;; Defined at:
  2266 ;;		line 3 in file "/Applications/microchip/xc8/v1.21/sources/common/lmul.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2269 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  product         4    8[BANK0 ] unsigned long 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  4    0[BANK0 ] unsigned long 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2281 ;;      Params:         0       8       0       0       0       0       0
  2282 ;;      Locals:         0       4       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0
  2284 ;;      Totals:         0      12       0       0       0       0       0
  2285 ;;Total ram usage:       12 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    6
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_ReadLaser_Message
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text8
  2296  000EE2                     __ptext8:
  2297                           	opt stack 0
  2298  000EE2                     ___lmul:
  2299                           	opt stack 23
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;incstack = 0
  2303                           ;incstack = 0
  2304  000EE2  0E00               	movlw	0
  2305  000EE4  0100               	movlb	0	; () banked
  2306  000EE6  0100               	movlb	0	; () banked
  2307  000EE8  6F68               	movwf	___lmul@product& (0+255),b
  2308  000EEA  0E00               	movlw	0
  2309  000EEC  0100               	movlb	0	; () banked
  2310  000EEE  6F69               	movwf	(___lmul@product+1)& (0+255),b
  2311  000EF0  0E00               	movlw	0
  2312  000EF2  0100               	movlb	0	; () banked
  2313  000EF4  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  2314  000EF6  0E00               	movlw	0
  2315  000EF8  0100               	movlb	0	; () banked
  2316  000EFA  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  2317  000EFC                     l2310:
  2318                           
  2319                           ; BSR set to: 0
  2320  000EFC  0100               	movlb	0	; () banked
  2321  000EFE  0100               	movlb	0	; () banked
  2322  000F00  A160               	btfss	___lmul@multiplier& (0+255),0,b
  2323  000F02  D018               	goto	l2314
  2324                           
  2325                           ; BSR set to: 0
  2326  000F04  0100               	movlb	0	; () banked
  2327  000F06  0100               	movlb	0	; () banked
  2328  000F08  5164               	movf	___lmul@multiplicand& (0+255),w,b
  2329  000F0A  0100               	movlb	0	; () banked
  2330  000F0C  0100               	movlb	0	; () banked
  2331  000F0E  2768               	addwf	___lmul@product& (0+255),f,b
  2332  000F10  0100               	movlb	0	; () banked
  2333  000F12  0100               	movlb	0	; () banked
  2334  000F14  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  2335  000F16  0100               	movlb	0	; () banked
  2336  000F18  0100               	movlb	0	; () banked
  2337  000F1A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  2338  000F1C  0100               	movlb	0	; () banked
  2339  000F1E  0100               	movlb	0	; () banked
  2340  000F20  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  2341  000F22  0100               	movlb	0	; () banked
  2342  000F24  0100               	movlb	0	; () banked
  2343  000F26  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  2344  000F28  0100               	movlb	0	; () banked
  2345  000F2A  0100               	movlb	0	; () banked
  2346  000F2C  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  2347  000F2E  0100               	movlb	0	; () banked
  2348  000F30  0100               	movlb	0	; () banked
  2349  000F32  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  2350  000F34                     l2314:
  2351                           
  2352                           ; BSR set to: 0
  2353  000F34  0100               	movlb	0	; () banked
  2354  000F36  90D8               	bcf	status,0,c
  2355  000F38  0100               	movlb	0	; () banked
  2356  000F3A  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  2357  000F3C  0100               	movlb	0	; () banked
  2358  000F3E  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  2359  000F40  0100               	movlb	0	; () banked
  2360  000F42  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  2361  000F44  0100               	movlb	0	; () banked
  2362  000F46  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  2363                           
  2364                           ; BSR set to: 0
  2365  000F48  0100               	movlb	0	; () banked
  2366  000F4A  90D8               	bcf	status,0,c
  2367  000F4C  0100               	movlb	0	; () banked
  2368  000F4E  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2369  000F50  0100               	movlb	0	; () banked
  2370  000F52  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2371  000F54  0100               	movlb	0	; () banked
  2372  000F56  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2373  000F58  0100               	movlb	0	; () banked
  2374  000F5A  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  2375  000F5C  0100               	movlb	0	; () banked
  2376  000F5E  0100               	movlb	0	; () banked
  2377  000F60  5163               	movf	(___lmul@multiplier+3)& (0+255),w,b
  2378  000F62  1160               	iorwf	___lmul@multiplier& (0+255),w,b
  2379  000F64  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2380  000F66  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2381  000F68  A4D8               	btfss	status,2,c
  2382  000F6A  D7C8               	goto	l2310
  2383                           
  2384                           ; BSR set to: 0
  2385  000F6C  C068  F060         	movff	___lmul@product,?___lmul
  2386  000F70  C069  F061         	movff	___lmul@product+1,?___lmul+1
  2387  000F74  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  2388  000F78  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  2389                           
  2390                           ; BSR set to: 0
  2391  000F7C  0012               	return	
  2392  000F7E                     __end_of___lmul:
  2393                           	opt stack 0
  2394                           tosu	equ	0xFFF
  2395                           tosh	equ	0xFFE
  2396                           tosl	equ	0xFFD
  2397                           pclath	equ	0xFFA
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           indf1	equ	0xFE7
  2405                           postinc1	equ	0xFE6
  2406                           postdec1	equ	0xFE5
  2407                           fsr1h	equ	0xFE2
  2408                           fsr1l	equ	0xFE1
  2409                           indf2	equ	0xFDF
  2410                           postinc2	equ	0xFDE
  2411                           postdec2	equ	0xFDD
  2412                           fsr2h	equ	0xFDA
  2413                           fsr2l	equ	0xFD9
  2414                           status	equ	0xFD8
  2415                           
  2416 ;; *************** function _wifi_write *****************
  2417 ;; Defined at:
  2418 ;;		line 43 in file "operations.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  total           4    8[BANK0 ] unsigned long 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  write           5   13[BANK0 ] unsigned char [5]
  2423 ;; Return value:  Size  Location     Type
  2424 ;;		None               void
  2425 ;; Registers used:
  2426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2432 ;;      Params:         0       4       0       0       0       0       0
  2433 ;;      Locals:         0       5       0       0       0       0       0
  2434 ;;      Temps:          0       1       0       0       0       0       0
  2435 ;;      Totals:         0      10       0       0       0       0       0
  2436 ;;Total ram usage:       10 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    7
  2439 ;; This function calls:
  2440 ;;		_UART1_Write
  2441 ;; This function is called by:
  2442 ;;		_ReadLaser_Message
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text9
  2447  0012FE                     __ptext9:
  2448                           	opt stack 0
  2449  0012FE                     _wifi_write:
  2450                           	opt stack 22
  2451                           
  2452                           ;operations.c: 44: char write[5];
  2453                           ;operations.c: 45: write[0] = total >> 24;
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;incstack = 0
  2457                           ;incstack = 0
  2458  0012FE  C06B  F06D         	movff	wifi_write@total+3,wifi_write@write
  2459                           
  2460                           ;operations.c: 46: write[1] = total >> 16;
  2461  001302  C06A  F06E         	movff	wifi_write@total+2,wifi_write@write+1
  2462                           
  2463                           ;operations.c: 47: write[2] = total >> 8;
  2464  001306  C069  F06F         	movff	wifi_write@total+1,wifi_write@write+2
  2465                           
  2466                           ;operations.c: 48: write[3] = total;
  2467  00130A  C068  F070         	movff	wifi_write@total,wifi_write@write+3
  2468                           
  2469                           ;operations.c: 49: write[4] = '\n';
  2470  00130E  0100               	movlb	0	; () banked
  2471  001310  6F6C               	movwf	??_wifi_write& (0+255),b
  2472  001312  0E0A               	movlw	10
  2473  001314  0100               	movlb	0	; () banked
  2474  001316  0100               	movlb	0	; () banked
  2475  001318  6F71               	movwf	(wifi_write@write+4)& (0+255),b
  2476  00131A  0100               	movlb	0	; () banked
  2477  00131C  516C               	movf	??_wifi_write& (0+255),w,b
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;operations.c: 51: UART1_Write(&write, 5);
  2481  00131E  0100               	movlb	0	; () banked
  2482  001320  0E00               	movlw	high wifi_write@write
  2483  001322  0100               	movlb	0	; () banked
  2484  001324  0100               	movlb	0	; () banked
  2485  001326  6F61               	movwf	(?_UART1_Write+1)& (0+255),b
  2486  001328  0100               	movlb	0	; () banked
  2487  00132A  0E6D               	movlw	low wifi_write@write
  2488  00132C  0100               	movlb	0	; () banked
  2489  00132E  6F60               	movwf	?_UART1_Write& (0+255),b
  2490  001330  0E00               	movlw	0
  2491  001332  0100               	movlb	0	; () banked
  2492  001334  0100               	movlb	0	; () banked
  2493  001336  6F63               	movwf	(?_UART1_Write+3)& (0+255),b
  2494  001338  0E05               	movlw	5
  2495  00133A  0100               	movlb	0	; () banked
  2496  00133C  6F62               	movwf	(?_UART1_Write+2)& (0+255),b
  2497  00133E  EC56  F005         	call	_UART1_Write	;wreg free
  2498  001342  0012               	return	
  2499  001344                     __end_of_wifi_write:
  2500                           	opt stack 0
  2501                           tosu	equ	0xFFF
  2502                           tosh	equ	0xFFE
  2503                           tosl	equ	0xFFD
  2504                           pclath	equ	0xFFA
  2505                           tblptru	equ	0xFF8
  2506                           tblptrh	equ	0xFF7
  2507                           tblptrl	equ	0xFF6
  2508                           tablat	equ	0xFF5
  2509                           postinc0	equ	0xFEE
  2510                           wreg	equ	0xFE8
  2511                           indf1	equ	0xFE7
  2512                           postinc1	equ	0xFE6
  2513                           postdec1	equ	0xFE5
  2514                           fsr1h	equ	0xFE2
  2515                           fsr1l	equ	0xFE1
  2516                           indf2	equ	0xFDF
  2517                           postinc2	equ	0xFDE
  2518                           postdec2	equ	0xFDD
  2519                           fsr2h	equ	0xFDA
  2520                           fsr2l	equ	0xFD9
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function _UART1_Write *****************
  2524 ;; Defined at:
  2525 ;;		line 62 in file "my_UART.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  c               2    0[BANK0 ] PTR unsigned char 
  2528 ;;		 -> wifi_write@write(5), 
  2529 ;;  length          2    2[BANK0 ] int 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  i               2    6[BANK0 ] int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;		None               void
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2541 ;;      Params:         0       4       0       0       0       0       0
  2542 ;;      Locals:         0       2       0       0       0       0       0
  2543 ;;      Temps:          0       2       0       0       0       0       0
  2544 ;;      Totals:         0       8       0       0       0       0       0
  2545 ;;Total ram usage:        8 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    6
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_wifi_write
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text10
  2556  000AAC                     __ptext10:
  2557                           	opt stack 0
  2558  000AAC                     _UART1_Write:
  2559                           	opt stack 22
  2560                           
  2561                           ;my_UART.c: 63: if(uart_1_data_p->buffer_out_ind!=0) {
  2562                           
  2563                           ;incstack = 0
  2564                           ;incstack = 0
  2565  000AAC  0100               	movlb	0	; () banked
  2566  000AAE  EE20 F018          	lfsr	2,24
  2567  000AB2  0100               	movlb	0	; () banked
  2568  000AB4  51DC               	movf	_uart_1_data_p& (0+255),w,b
  2569  000AB6  26D9               	addwf	fsr2l,f,c
  2570  000AB8  0100               	movlb	0	; () banked
  2571  000ABA  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  2572  000ABC  22DA               	addwfc	fsr2h,f,c
  2573  000ABE  50DE               	movf	postinc2,w,c
  2574  000AC0  10DD               	iorwf	postdec2,w,c
  2575  000AC2  A4D8               	btfss	status,2,c
  2576  000AC4  0012               	return	
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;my_UART.c: 65: }
  2580                           ;my_UART.c: 67: uart_1_data_p->buffer_out_len= length;
  2581                           
  2582                           ; BSR set to: 0
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;my_UART.c: 64: return;
  2586  000AC6  0100               	movlb	0	; () banked
  2587  000AC8  EE20 F01A          	lfsr	2,26
  2588  000ACC  0100               	movlb	0	; () banked
  2589  000ACE  51DC               	movf	_uart_1_data_p& (0+255),w,b
  2590  000AD0  26D9               	addwf	fsr2l,f,c
  2591  000AD2  0100               	movlb	0	; () banked
  2592  000AD4  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  2593  000AD6  22DA               	addwfc	fsr2h,f,c
  2594  000AD8  0100               	movlb	0	; () banked
  2595  000ADA  C062  FFDE         	movff	UART1_Write@length,postinc2
  2596  000ADE  0100               	movlb	0	; () banked
  2597  000AE0  C063  FFDD         	movff	UART1_Write@length+1,postdec2
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;my_UART.c: 68: for(int i=0; i<length; i++) {
  2601  000AE4  0E00               	movlw	0
  2602  000AE6  0100               	movlb	0	; () banked
  2603  000AE8  0100               	movlb	0	; () banked
  2604  000AEA  6F67               	movwf	(UART1_Write@i+1)& (0+255),b
  2605  000AEC  0E00               	movlw	0
  2606  000AEE  0100               	movlb	0	; () banked
  2607  000AF0  6F66               	movwf	UART1_Write@i& (0+255),b
  2608  000AF2  D02C               	goto	l1984
  2609  000AF4                     l1980:
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;my_UART.c: 69: uart_1_data_p->buffer_out[i] = c[i];
  2613  000AF4  0100               	movlb	0	; () banked
  2614  000AF6  0100               	movlb	0	; () banked
  2615  000AF8  5166               	movf	UART1_Write@i& (0+255),w,b
  2616  000AFA  0100               	movlb	0	; () banked
  2617  000AFC  0100               	movlb	0	; () banked
  2618  000AFE  2560               	addwf	UART1_Write@c& (0+255),w,b
  2619  000B00  6ED9               	movwf	fsr2l,c
  2620  000B02  0100               	movlb	0	; () banked
  2621  000B04  0100               	movlb	0	; () banked
  2622  000B06  5167               	movf	(UART1_Write@i+1)& (0+255),w,b
  2623  000B08  0100               	movlb	0	; () banked
  2624  000B0A  0100               	movlb	0	; () banked
  2625  000B0C  2161               	addwfc	(UART1_Write@c+1)& (0+255),w,b
  2626  000B0E  6EDA               	movwf	fsr2h,c
  2627  000B10  0E0E               	movlw	14
  2628  000B12  0100               	movlb	0	; () banked
  2629  000B14  0100               	movlb	0	; () banked
  2630  000B16  2566               	addwf	UART1_Write@i& (0+255),w,b
  2631  000B18  0100               	movlb	0	; () banked
  2632  000B1A  6F64               	movwf	??_UART1_Write& (0+255),b
  2633  000B1C  0E00               	movlw	0
  2634  000B1E  0100               	movlb	0	; () banked
  2635  000B20  0100               	movlb	0	; () banked
  2636  000B22  2167               	addwfc	(UART1_Write@i+1)& (0+255),w,b
  2637  000B24  0100               	movlb	0	; () banked
  2638  000B26  6F65               	movwf	(??_UART1_Write+1)& (0+255),b
  2639  000B28  0100               	movlb	0	; () banked
  2640  000B2A  5164               	movf	??_UART1_Write& (0+255),w,b
  2641  000B2C  0100               	movlb	0	; () banked
  2642  000B2E  0100               	movlb	0	; () banked
  2643  000B30  25DC               	addwf	_uart_1_data_p& (0+255),w,b
  2644  000B32  6EE1               	movwf	fsr1l,c
  2645  000B34  0100               	movlb	0	; () banked
  2646  000B36  5165               	movf	(??_UART1_Write+1)& (0+255),w,b
  2647  000B38  0100               	movlb	0	; () banked
  2648  000B3A  0100               	movlb	0	; () banked
  2649  000B3C  21DD               	addwfc	(_uart_1_data_p+1)& (0+255),w,b
  2650  000B3E  6EE2               	movwf	fsr1h,c
  2651  000B40  CFDF FFE7          	movff	indf2,indf1
  2652                           
  2653                           ; BSR set to: 0
  2654  000B44  0100               	movlb	0	; () banked
  2655  000B46  0100               	movlb	0	; () banked
  2656  000B48  4B66               	infsnz	UART1_Write@i& (0+255),f,b
  2657  000B4A  2B67               	incf	(UART1_Write@i+1)& (0+255),f,b
  2658  000B4C                     l1984:
  2659                           
  2660                           ; BSR set to: 0
  2661  000B4C  0100               	movlb	0	; () banked
  2662  000B4E  0100               	movlb	0	; () banked
  2663  000B50  5167               	movf	(UART1_Write@i+1)& (0+255),w,b
  2664  000B52  0A80               	xorlw	128
  2665  000B54  0100               	movlb	0	; () banked
  2666  000B56  6F64               	movwf	??_UART1_Write& (0+255),b
  2667  000B58  0100               	movlb	0	; () banked
  2668  000B5A  5162               	movf	UART1_Write@length& (0+255),w,b
  2669  000B5C  0100               	movlb	0	; () banked
  2670  000B5E  0100               	movlb	0	; () banked
  2671  000B60  5D66               	subwf	UART1_Write@i& (0+255),w,b
  2672  000B62  0100               	movlb	0	; () banked
  2673  000B64  0100               	movlb	0	; () banked
  2674  000B66  5163               	movf	(UART1_Write@length+1)& (0+255),w,b
  2675  000B68  0A80               	xorlw	128
  2676  000B6A  0100               	movlb	0	; () banked
  2677  000B6C  5964               	subwfb	??_UART1_Write& (0+255),w,b
  2678  000B6E  A0D8               	btfss	status,0,c
  2679  000B70  D7C1               	goto	l1980
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;my_UART.c: 70: }
  2683                           ;my_UART.c: 71: PIE1bits.TX1IE=1;
  2684  000B72  889D               	bsf	3997,4,c	;volatile
  2685                           
  2686                           ; BSR set to: 0
  2687  000B74  0012               	return	
  2688  000B76                     __end_of_UART1_Write:
  2689                           	opt stack 0
  2690                           tosu	equ	0xFFF
  2691                           tosh	equ	0xFFE
  2692                           tosl	equ	0xFFD
  2693                           pclath	equ	0xFFA
  2694                           tblptru	equ	0xFF8
  2695                           tblptrh	equ	0xFF7
  2696                           tblptrl	equ	0xFF6
  2697                           tablat	equ	0xFF5
  2698                           postinc0	equ	0xFEE
  2699                           wreg	equ	0xFE8
  2700                           indf1	equ	0xFE7
  2701                           postinc1	equ	0xFE6
  2702                           postdec1	equ	0xFE5
  2703                           fsr1h	equ	0xFE2
  2704                           fsr1l	equ	0xFE1
  2705                           indf2	equ	0xFDF
  2706                           postinc2	equ	0xFDE
  2707                           postdec2	equ	0xFDD
  2708                           fsr2h	equ	0xFDA
  2709                           fsr2l	equ	0xFD9
  2710                           status	equ	0xFD8
  2711                           
  2712 ;; *************** function _return_motor *****************
  2713 ;; Defined at:
  2714 ;;		line 21 in file "operations.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  target          2    4[BANK0 ] int 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;		None               void
  2721 ;; Registers used:
  2722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2728 ;;      Params:         0       0       0       0       0       0       0
  2729 ;;      Locals:         0       2       0       0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0       0       0
  2731 ;;      Totals:         0       2       0       0       0       0       0
  2732 ;;Total ram usage:        2 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    7
  2735 ;; This function calls:
  2736 ;;		_start_timer
  2737 ;; This function is called by:
  2738 ;;		_ReadLaser_Message
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text11
  2743  00157A                     __ptext11:
  2744                           	opt stack 0
  2745  00157A                     _return_motor:
  2746                           	opt stack 22
  2747                           
  2748                           ;operations.c: 22: int target = 2*200;
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;incstack = 0
  2752                           ;incstack = 0
  2753  00157A  0E01               	movlw	1
  2754  00157C  0100               	movlb	0	; () banked
  2755  00157E  0100               	movlb	0	; () banked
  2756  001580  6F65               	movwf	(return_motor@target+1)& (0+255),b
  2757  001582  0E90               	movlw	144
  2758  001584  0100               	movlb	0	; () banked
  2759  001586  6F64               	movwf	return_motor@target& (0+255),b
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;operations.c: 23: LATAbits.LATA1 = 0;
  2763  001588  9289               	bcf	3977,1,c	;volatile
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;operations.c: 25: start_timer(target, 0);
  2767  00158A  C064  F060         	movff	return_motor@target,?_start_timer
  2768  00158E  C065  F061         	movff	return_motor@target+1,?_start_timer+1
  2769  001592  0E00               	movlw	0
  2770  001594  0100               	movlb	0	; () banked
  2771  001596  0100               	movlb	0	; () banked
  2772  001598  6F63               	movwf	(?_start_timer+3)& (0+255),b
  2773  00159A  0E00               	movlw	0
  2774  00159C  0100               	movlb	0	; () banked
  2775  00159E  6F62               	movwf	(?_start_timer+2)& (0+255),b
  2776  0015A0  ECB3  F008         	call	_start_timer	;wreg free
  2777  0015A4  0012               	return	
  2778  0015A6                     __end_of_return_motor:
  2779                           	opt stack 0
  2780                           tosu	equ	0xFFF
  2781                           tosh	equ	0xFFE
  2782                           tosl	equ	0xFFD
  2783                           pclath	equ	0xFFA
  2784                           tblptru	equ	0xFF8
  2785                           tblptrh	equ	0xFF7
  2786                           tblptrl	equ	0xFF6
  2787                           tablat	equ	0xFF5
  2788                           postinc0	equ	0xFEE
  2789                           wreg	equ	0xFE8
  2790                           indf1	equ	0xFE7
  2791                           postinc1	equ	0xFE6
  2792                           postdec1	equ	0xFE5
  2793                           fsr1h	equ	0xFE2
  2794                           fsr1l	equ	0xFE1
  2795                           indf2	equ	0xFDF
  2796                           postinc2	equ	0xFDE
  2797                           postdec2	equ	0xFDD
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _move_motor *****************
  2803 ;; Defined at:
  2804 ;;		line 14 in file "operations.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  target          2    9[BANK0 ] int 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;		None               void
  2811 ;; Registers used:
  2812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2818 ;;      Params:         0       0       0       0       0       0       0
  2819 ;;      Locals:         0       2       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0
  2821 ;;      Totals:         0       2       0       0       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    7
  2825 ;; This function calls:
  2826 ;;		_start_timer
  2827 ;;		___awdiv
  2828 ;; This function is called by:
  2829 ;;		_ReadLaser_Message
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text12
  2834  00138A                     __ptext12:
  2835                           	opt stack 0
  2836  00138A                     _move_motor:
  2837                           	opt stack 22
  2838                           
  2839                           ;operations.c: 15: int target = 2*200 / readings_num;
  2840                           
  2841                           ;incstack = 0
  2842                           ;incstack = 0
  2843  00138A  0E01               	movlw	1
  2844  00138C  0100               	movlb	0	; () banked
  2845  00138E  0100               	movlb	0	; () banked
  2846  001390  6F61               	movwf	(?___awdiv+1)& (0+255),b
  2847  001392  0E90               	movlw	144
  2848  001394  0100               	movlb	0	; () banked
  2849  001396  6F60               	movwf	?___awdiv& (0+255),b
  2850  001398  C0D8  F062         	movff	_readings_num,?___awdiv+2
  2851  00139C  C0D9  F063         	movff	_readings_num+1,?___awdiv+3
  2852  0013A0  ECD4  F003         	call	___awdiv	;wreg free
  2853  0013A4  0100               	movlb	0	; () banked
  2854  0013A6  C060  F069         	movff	?___awdiv,move_motor@target
  2855  0013AA  0100               	movlb	0	; () banked
  2856  0013AC  C061  F06A         	movff	?___awdiv+1,move_motor@target+1
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;operations.c: 16: LATAbits.LATA1 = 1;
  2860  0013B0  8289               	bsf	3977,1,c	;volatile
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;operations.c: 18: start_timer(target, &laser_read);
  2864  0013B2  C069  F060         	movff	move_motor@target,?_start_timer
  2865  0013B6  C06A  F061         	movff	move_motor@target+1,?_start_timer+1
  2866  0013BA  0E14               	movlw	high _laser_read
  2867  0013BC  0100               	movlb	0	; () banked
  2868  0013BE  0100               	movlb	0	; () banked
  2869  0013C0  6F63               	movwf	(?_start_timer+3)& (0+255),b
  2870  0013C2  0E98               	movlw	low _laser_read
  2871  0013C4  0100               	movlb	0	; () banked
  2872  0013C6  6F62               	movwf	(?_start_timer+2)& (0+255),b
  2873  0013C8  ECB3  F008         	call	_start_timer	;wreg free
  2874  0013CC  0012               	return	
  2875  0013CE                     __end_of_move_motor:
  2876                           	opt stack 0
  2877                           tosu	equ	0xFFF
  2878                           tosh	equ	0xFFE
  2879                           tosl	equ	0xFFD
  2880                           pclath	equ	0xFFA
  2881                           tblptru	equ	0xFF8
  2882                           tblptrh	equ	0xFF7
  2883                           tblptrl	equ	0xFF6
  2884                           tablat	equ	0xFF5
  2885                           postinc0	equ	0xFEE
  2886                           wreg	equ	0xFE8
  2887                           indf1	equ	0xFE7
  2888                           postinc1	equ	0xFE6
  2889                           postdec1	equ	0xFE5
  2890                           fsr1h	equ	0xFE2
  2891                           fsr1l	equ	0xFE1
  2892                           indf2	equ	0xFDF
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function ___awdiv *****************
  2900 ;; Defined at:
  2901 ;;		line 10 in file "/Applications/microchip/xc8/v1.21/sources/common/awdiv.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  dividend        2    0[BANK0 ] int 
  2904 ;;  divisor         2    2[BANK0 ] int 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  quotient        2    7[BANK0 ] int 
  2907 ;;  sign            1    6[BANK0 ] unsigned char 
  2908 ;;  counter         1    5[BANK0 ] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  2    0[BANK0 ] int 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2918 ;;      Params:         0       4       0       0       0       0       0
  2919 ;;      Locals:         0       4       0       0       0       0       0
  2920 ;;      Temps:          0       1       0       0       0       0       0
  2921 ;;      Totals:         0       9       0       0       0       0       0
  2922 ;;Total ram usage:        9 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    6
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_move_motor
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text13
  2933  0007A8                     __ptext13:
  2934                           	opt stack 0
  2935  0007A8                     ___awdiv:
  2936                           	opt stack 22
  2937                           
  2938                           ;incstack = 0
  2939                           ;incstack = 0
  2940  0007A8  0100               	movlb	0	; () banked
  2941  0007AA  6F64               	movwf	??___awdiv& (0+255),b
  2942  0007AC  0E00               	movlw	0
  2943  0007AE  0100               	movlb	0	; () banked
  2944  0007B0  0100               	movlb	0	; () banked
  2945  0007B2  6F66               	movwf	___awdiv@sign& (0+255),b
  2946  0007B4  0100               	movlb	0	; () banked
  2947  0007B6  5164               	movf	??___awdiv& (0+255),w,b
  2948                           
  2949                           ; BSR set to: 0
  2950  0007B8  0100               	movlb	0	; () banked
  2951  0007BA  0100               	movlb	0	; () banked
  2952  0007BC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2953  0007BE  D00F               	goto	l2326
  2954                           
  2955                           ; BSR set to: 0
  2956  0007C0  0100               	movlb	0	; () banked
  2957  0007C2  0100               	movlb	0	; () banked
  2958  0007C4  6D62               	negf	___awdiv@divisor& (0+255),b
  2959  0007C6  0100               	movlb	0	; () banked
  2960  0007C8  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2961  0007CA  B0D8               	btfsc	status,0,c
  2962  0007CC  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2963                           
  2964                           ; BSR set to: 0
  2965  0007CE  0100               	movlb	0	; () banked
  2966  0007D0  6F64               	movwf	??___awdiv& (0+255),b
  2967  0007D2  0E01               	movlw	1
  2968  0007D4  0100               	movlb	0	; () banked
  2969  0007D6  0100               	movlb	0	; () banked
  2970  0007D8  6F66               	movwf	___awdiv@sign& (0+255),b
  2971  0007DA  0100               	movlb	0	; () banked
  2972  0007DC  5164               	movf	??___awdiv& (0+255),w,b
  2973  0007DE                     l2326:
  2974                           
  2975                           ; BSR set to: 0
  2976  0007DE  0100               	movlb	0	; () banked
  2977  0007E0  0100               	movlb	0	; () banked
  2978  0007E2  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2979  0007E4  D00B               	goto	l2332
  2980                           
  2981                           ; BSR set to: 0
  2982  0007E6  0100               	movlb	0	; () banked
  2983  0007E8  0100               	movlb	0	; () banked
  2984  0007EA  6D60               	negf	___awdiv@dividend& (0+255),b
  2985  0007EC  0100               	movlb	0	; () banked
  2986  0007EE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2987  0007F0  B0D8               	btfsc	status,0,c
  2988  0007F2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2989                           
  2990                           ; BSR set to: 0
  2991  0007F4  0E01               	movlw	1
  2992  0007F6  0100               	movlb	0	; () banked
  2993  0007F8  0100               	movlb	0	; () banked
  2994  0007FA  1B66               	xorwf	___awdiv@sign& (0+255),f,b
  2995  0007FC                     l2332:
  2996                           
  2997                           ; BSR set to: 0
  2998  0007FC  0E00               	movlw	0
  2999  0007FE  0100               	movlb	0	; () banked
  3000  000800  0100               	movlb	0	; () banked
  3001  000802  6F68               	movwf	(___awdiv@quotient+1)& (0+255),b
  3002  000804  0E00               	movlw	0
  3003  000806  0100               	movlb	0	; () banked
  3004  000808  6F67               	movwf	___awdiv@quotient& (0+255),b
  3005                           
  3006                           ; BSR set to: 0
  3007  00080A  0100               	movlb	0	; () banked
  3008  00080C  0100               	movlb	0	; () banked
  3009  00080E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3010  000810  1162               	iorwf	___awdiv@divisor& (0+255),w,b
  3011  000812  B4D8               	btfsc	status,2,c
  3012  000814  D043               	goto	l2354
  3013                           
  3014                           ; BSR set to: 0
  3015  000816  0100               	movlb	0	; () banked
  3016  000818  6F64               	movwf	??___awdiv& (0+255),b
  3017  00081A  0E01               	movlw	1
  3018  00081C  0100               	movlb	0	; () banked
  3019  00081E  0100               	movlb	0	; () banked
  3020  000820  6F65               	movwf	___awdiv@counter& (0+255),b
  3021  000822  0100               	movlb	0	; () banked
  3022  000824  5164               	movf	??___awdiv& (0+255),w,b
  3023  000826  D009               	goto	l2340
  3024  000828                     l2338:
  3025                           
  3026                           ; BSR set to: 0
  3027  000828  0100               	movlb	0	; () banked
  3028  00082A  0100               	movlb	0	; () banked
  3029  00082C  0100               	movlb	0	; () banked
  3030  00082E  90D8               	bcf	status,0,c
  3031  000830  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3032  000832  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3033  000834  0100               	movlb	0	; () banked
  3034  000836  0100               	movlb	0	; () banked
  3035  000838  2B65               	incf	___awdiv@counter& (0+255),f,b
  3036  00083A                     l2340:
  3037                           
  3038                           ; BSR set to: 0
  3039  00083A  0100               	movlb	0	; () banked
  3040  00083C  0100               	movlb	0	; () banked
  3041  00083E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3042  000840  D7F3               	goto	l2338
  3043  000842                     l2342:
  3044                           
  3045                           ; BSR set to: 0
  3046  000842  0100               	movlb	0	; () banked
  3047  000844  0100               	movlb	0	; () banked
  3048  000846  0100               	movlb	0	; () banked
  3049  000848  90D8               	bcf	status,0,c
  3050  00084A  3767               	rlcf	___awdiv@quotient& (0+255),f,b
  3051  00084C  3768               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3052                           
  3053                           ; BSR set to: 0
  3054  00084E  0100               	movlb	0	; () banked
  3055  000850  0100               	movlb	0	; () banked
  3056  000852  5162               	movf	___awdiv@divisor& (0+255),w,b
  3057  000854  0100               	movlb	0	; () banked
  3058  000856  0100               	movlb	0	; () banked
  3059  000858  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3060  00085A  0100               	movlb	0	; () banked
  3061  00085C  0100               	movlb	0	; () banked
  3062  00085E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3063  000860  0100               	movlb	0	; () banked
  3064  000862  0100               	movlb	0	; () banked
  3065  000864  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3066  000866  A0D8               	btfss	status,0,c
  3067  000868  D00F               	goto	l2350
  3068                           
  3069                           ; BSR set to: 0
  3070  00086A  0100               	movlb	0	; () banked
  3071  00086C  0100               	movlb	0	; () banked
  3072  00086E  5162               	movf	___awdiv@divisor& (0+255),w,b
  3073  000870  0100               	movlb	0	; () banked
  3074  000872  0100               	movlb	0	; () banked
  3075  000874  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3076  000876  0100               	movlb	0	; () banked
  3077  000878  0100               	movlb	0	; () banked
  3078  00087A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3079  00087C  0100               	movlb	0	; () banked
  3080  00087E  0100               	movlb	0	; () banked
  3081  000880  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3082                           
  3083                           ; BSR set to: 0
  3084  000882  0100               	movlb	0	; () banked
  3085  000884  0100               	movlb	0	; () banked
  3086  000886  8167               	bsf	___awdiv@quotient& (0+255),0,b
  3087  000888                     l2350:
  3088                           
  3089                           ; BSR set to: 0
  3090  000888  0100               	movlb	0	; () banked
  3091  00088A  0100               	movlb	0	; () banked
  3092  00088C  0100               	movlb	0	; () banked
  3093  00088E  90D8               	bcf	status,0,c
  3094  000890  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3095  000892  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3096                           
  3097                           ; BSR set to: 0
  3098  000894  0100               	movlb	0	; () banked
  3099  000896  0100               	movlb	0	; () banked
  3100  000898  2F65               	decfsz	___awdiv@counter& (0+255),f,b
  3101  00089A  D7D3               	goto	l2342
  3102  00089C                     l2354:
  3103                           
  3104                           ; BSR set to: 0
  3105  00089C  0100               	movlb	0	; () banked
  3106  00089E  0100               	movlb	0	; () banked
  3107  0008A0  5166               	movf	___awdiv@sign& (0+255),w,b
  3108  0008A2  B4D8               	btfsc	status,2,c
  3109  0008A4  D007               	goto	l2358
  3110                           
  3111                           ; BSR set to: 0
  3112  0008A6  0100               	movlb	0	; () banked
  3113  0008A8  0100               	movlb	0	; () banked
  3114  0008AA  6D67               	negf	___awdiv@quotient& (0+255),b
  3115  0008AC  0100               	movlb	0	; () banked
  3116  0008AE  1F68               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3117  0008B0  B0D8               	btfsc	status,0,c
  3118  0008B2  2B68               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3119  0008B4                     l2358:
  3120                           
  3121                           ; BSR set to: 0
  3122  0008B4  C067  F060         	movff	___awdiv@quotient,?___awdiv
  3123  0008B8  C068  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3124  0008BC  0012               	return	
  3125  0008BE                     __end_of___awdiv:
  3126                           	opt stack 0
  3127                           tosu	equ	0xFFF
  3128                           tosh	equ	0xFFE
  3129                           tosl	equ	0xFFD
  3130                           pclath	equ	0xFFA
  3131                           tblptru	equ	0xFF8
  3132                           tblptrh	equ	0xFF7
  3133                           tblptrl	equ	0xFF6
  3134                           tablat	equ	0xFF5
  3135                           postinc0	equ	0xFEE
  3136                           wreg	equ	0xFE8
  3137                           indf1	equ	0xFE7
  3138                           postinc1	equ	0xFE6
  3139                           postdec1	equ	0xFE5
  3140                           fsr1h	equ	0xFE2
  3141                           fsr1l	equ	0xFE1
  3142                           indf2	equ	0xFDF
  3143                           postinc2	equ	0xFDE
  3144                           postdec2	equ	0xFDD
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function _start_timer *****************
  3150 ;; Defined at:
  3151 ;;		line 15 in file "timer.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  timer_target    2    0[BANK0 ] int 
  3154 ;;  RX_Callback     2    2[BANK0 ] PTR FTN()void 
  3155 ;;		 -> Absolute function(0), laser_read(0), 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3167 ;;      Params:         0       4       0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0
  3170 ;;      Totals:         0       4       0       0       0       0       0
  3171 ;;Total ram usage:        4 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    6
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_move_motor
  3178 ;;		_return_motor
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text14
  3183  001166                     __ptext14:
  3184                           	opt stack 0
  3185  001166                     _start_timer:
  3186                           	opt stack 22
  3187                           
  3188                           ;timer.c: 16: timer_data_p->TIMER_Callback = RX_Callback;
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;incstack = 0
  3192                           ;incstack = 0
  3193  001166  0100               	movlb	0	; () banked
  3194  001168  EE20 F004          	lfsr	2,4
  3195  00116C  0100               	movlb	0	; () banked
  3196  00116E  51DA               	movf	_timer_data_p& (0+255),w,b
  3197  001170  26D9               	addwf	fsr2l,f,c
  3198  001172  0100               	movlb	0	; () banked
  3199  001174  51DB               	movf	(_timer_data_p+1)& (0+255),w,b
  3200  001176  22DA               	addwfc	fsr2h,f,c
  3201  001178  0100               	movlb	0	; () banked
  3202  00117A  C062  FFDE         	movff	start_timer@RX_Callback,postinc2
  3203  00117E  0100               	movlb	0	; () banked
  3204  001180  C063  FFDD         	movff	start_timer@RX_Callback+1,postdec2
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;timer.c: 17: timer_data_p->timer_target = timer_target;
  3208  001184  C0DA  FFD9         	movff	_timer_data_p,fsr2l
  3209  001188  C0DB  FFDA         	movff	_timer_data_p+1,fsr2h
  3210  00118C  0100               	movlb	0	; () banked
  3211  00118E  C060  FFDE         	movff	start_timer@timer_target,postinc2
  3212  001192  0100               	movlb	0	; () banked
  3213  001194  C061  FFDD         	movff	start_timer@timer_target+1,postdec2
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;timer.c: 18: timer_data_p->count = 0;
  3217  001198  0100               	movlb	0	; () banked
  3218  00119A  EE20 F002          	lfsr	2,2
  3219  00119E  0100               	movlb	0	; () banked
  3220  0011A0  51DA               	movf	_timer_data_p& (0+255),w,b
  3221  0011A2  26D9               	addwf	fsr2l,f,c
  3222  0011A4  0100               	movlb	0	; () banked
  3223  0011A6  51DB               	movf	(_timer_data_p+1)& (0+255),w,b
  3224  0011A8  22DA               	addwfc	fsr2h,f,c
  3225  0011AA  0E00               	movlw	0
  3226  0011AC  6EDE               	movwf	postinc2,c
  3227  0011AE  0E00               	movlw	0
  3228  0011B0  6EDD               	movwf	postdec2,c
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;timer.c: 20: PIR1bits.TMR1IF = 0;
  3232  0011B2  909E               	bcf	3998,0,c	;volatile
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;timer.c: 21: TMR1L = 0;
  3236  0011B4  0E00               	movlw	0
  3237  0011B6  6ECE               	movwf	4046,c	;volatile
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;timer.c: 22: TMR1H = 0;
  3241  0011B8  0E00               	movlw	0
  3242  0011BA  6ECF               	movwf	4047,c	;volatile
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;timer.c: 24: T1CONbits.TMR1ON = 1;
  3246  0011BC  80CD               	bsf	4045,0,c	;volatile
  3247                           
  3248                           ; BSR set to: 0
  3249  0011BE  0012               	return	
  3250  0011C0                     __end_of_start_timer:
  3251                           	opt stack 0
  3252                           tosu	equ	0xFFF
  3253                           tosh	equ	0xFFE
  3254                           tosl	equ	0xFFD
  3255                           pclath	equ	0xFFA
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           postinc0	equ	0xFEE
  3261                           wreg	equ	0xFE8
  3262                           indf1	equ	0xFE7
  3263                           postinc1	equ	0xFE6
  3264                           postdec1	equ	0xFE5
  3265                           fsr1h	equ	0xFE2
  3266                           fsr1l	equ	0xFE1
  3267                           indf2	equ	0xFDF
  3268                           postinc2	equ	0xFDE
  3269                           postdec2	equ	0xFDD
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _UART1_Read_Enable *****************
  3275 ;; Defined at:
  3276 ;;		line 89 in file "my_UART.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  data            1    2[BANK0 ] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;		None               void
  3283 ;; Registers used:
  3284 ;;		None
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3290 ;;      Params:         0       2       0       0       0       0       0
  3291 ;;      Locals:         0       1       0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0
  3293 ;;      Totals:         0       3       0       0       0       0       0
  3294 ;;Total ram usage:        3 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    6
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_ReadLaser_Message
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text15
  3305  001674                     __ptext15:
  3306                           	opt stack 0
  3307  001674                     _UART1_Read_Enable:
  3308                           	opt stack 23
  3309                           
  3310                           ;my_UART.c: 90: PIE1bits.RC1IE = 1;
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;incstack = 0
  3314                           ;incstack = 0
  3315  001674  8A9D               	bsf	3997,5,c	;volatile
  3316                           
  3317                           ;my_UART.c: 91: char data = RC1REG;
  3318  001676  CFAE F062          	movff	4014,UART1_Read_Enable@data	;volatile
  3319  00167A  0012               	return	
  3320  00167C                     __end_of_UART1_Read_Enable:
  3321                           	opt stack 0
  3322                           tosu	equ	0xFFF
  3323                           tosh	equ	0xFFE
  3324                           tosl	equ	0xFFD
  3325                           pclath	equ	0xFFA
  3326                           tblptru	equ	0xFF8
  3327                           tblptrh	equ	0xFF7
  3328                           tblptrl	equ	0xFF6
  3329                           tablat	equ	0xFF5
  3330                           postinc0	equ	0xFEE
  3331                           wreg	equ	0xFE8
  3332                           indf1	equ	0xFE7
  3333                           postinc1	equ	0xFE6
  3334                           postdec1	equ	0xFE5
  3335                           fsr1h	equ	0xFE2
  3336                           fsr1l	equ	0xFE1
  3337                           indf2	equ	0xFDF
  3338                           postinc2	equ	0xFDE
  3339                           postdec2	equ	0xFDD
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           
  3344 ;; *************** function _ToMainHigh_recvmsg *****************
  3345 ;; Defined at:
  3346 ;;		line 135 in file "messages.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  maxlength       1   24[BANK0 ] unsigned char 
  3349 ;;  msgtype         2   25[BANK0 ] PTR unsigned char 
  3350 ;;		 -> main@msgtype(1), 
  3351 ;;  data            2   27[BANK0 ] PTR void 
  3352 ;;		 -> main@msgbuffer(11), 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      char 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3364 ;;      Params:         0       5       0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0
  3367 ;;      Totals:         0       5       0       0       0       0       0
  3368 ;;Total ram usage:        5 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    8
  3371 ;; This function calls:
  3372 ;;		_recv_msg
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text16
  3379  0015A6                     __ptext16:
  3380                           	opt stack 0
  3381  0015A6                     _ToMainHigh_recvmsg:
  3382                           	opt stack 22
  3383                           
  3384                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3385                           
  3386                           ;incstack = 0
  3387                           ;incstack = 0
  3388  0015A6  0101               	movlb	1	; () banked
  3389  0015A8  0E01               	movlw	high _ToMainHigh_MQ
  3390  0015AA  0100               	movlb	0	; () banked
  3391  0015AC  0100               	movlb	0	; () banked
  3392  0015AE  6F6B               	movwf	(?_recv_msg+1)& (0+255),b
  3393  0015B0  0101               	movlb	1	; () banked
  3394  0015B2  0E6C               	movlw	low _ToMainHigh_MQ
  3395  0015B4  0100               	movlb	0	; () banked
  3396  0015B6  6F6A               	movwf	?_recv_msg& (0+255),b
  3397  0015B8  C078  F06C         	movff	ToMainHigh_recvmsg@maxlength,?_recv_msg+2
  3398  0015BC  C079  F06D         	movff	ToMainHigh_recvmsg@msgtype,?_recv_msg+3
  3399  0015C0  C07A  F06E         	movff	ToMainHigh_recvmsg@msgtype+1,?_recv_msg+4
  3400  0015C4  C07B  F06F         	movff	ToMainHigh_recvmsg@data,?_recv_msg+5
  3401  0015C8  C07C  F070         	movff	ToMainHigh_recvmsg@data+1,?_recv_msg+6
  3402  0015CC  EC3E  F003         	call	_recv_msg	;wreg free
  3403  0015D0  0012               	return	
  3404  0015D2                     __end_of_ToMainHigh_recvmsg:
  3405                           	opt stack 0
  3406                           tosu	equ	0xFFF
  3407                           tosh	equ	0xFFE
  3408                           tosl	equ	0xFFD
  3409                           pclath	equ	0xFFA
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           postinc0	equ	0xFEE
  3415                           wreg	equ	0xFE8
  3416                           indf1	equ	0xFE7
  3417                           postinc1	equ	0xFE6
  3418                           postdec1	equ	0xFE5
  3419                           fsr1h	equ	0xFE2
  3420                           fsr1l	equ	0xFE1
  3421                           indf2	equ	0xFDF
  3422                           postinc2	equ	0xFDE
  3423                           postdec2	equ	0xFDD
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8
  3427                           
  3428 ;; *************** function _recv_msg *****************
  3429 ;; Defined at:
  3430 ;;		line 63 in file "messages.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  3433 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3434 ;;  maxlength       1   12[BANK0 ] unsigned char 
  3435 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  3436 ;;		 -> main@msgtype(1), 
  3437 ;;  data            2   15[BANK0 ] PTR void 
  3438 ;;		 -> main@msgbuffer(11), 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  qmsg            2   22[BANK0 ] PTR struct __msg
  3441 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3442 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3443 ;;  tlength         2   20[BANK0 ] unsigned int 
  3444 ;;  slot            1   19[BANK0 ] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      char 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       7       0       0       0       0       0
  3455 ;;      Locals:         0       5       0       0       0       0       0
  3456 ;;      Temps:          0       2       0       0       0       0       0
  3457 ;;      Totals:         0      14       0       0       0       0       0
  3458 ;;Total ram usage:       14 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    7
  3461 ;; This function calls:
  3462 ;;		_memcpy
  3463 ;; This function is called by:
  3464 ;;		_ToMainLow_recvmsg
  3465 ;;		_ToMainHigh_recvmsg
  3466 ;;		_FromMainLow_recvmsg
  3467 ;;		_FromMainHigh_recvmsg
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text17
  3472  00067C                     __ptext17:
  3473                           	opt stack 0
  3474  00067C                     _recv_msg:
  3475                           	opt stack 22
  3476                           
  3477                           ;messages.c: 64: unsigned char slot;
  3478                           ;messages.c: 68: msg *qmsg;
  3479                           ;messages.c: 69: size_t tlength;
  3480                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3481                           
  3482                           ;incstack = 0
  3483                           ;incstack = 0
  3484  00067C  0100               	movlb	0	; () banked
  3485  00067E  EE20 F035          	lfsr	2,53
  3486  000682  0100               	movlb	0	; () banked
  3487  000684  516A               	movf	recv_msg@qptr& (0+255),w,b
  3488  000686  26D9               	addwf	fsr2l,f,c
  3489  000688  0100               	movlb	0	; () banked
  3490  00068A  516B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3491  00068C  22DA               	addwfc	fsr2h,f,c
  3492  00068E  50DF               	movf	indf2,w,c
  3493  000690  0100               	movlb	0	; () banked
  3494  000692  0100               	movlb	0	; () banked
  3495  000694  6F73               	movwf	recv_msg@slot& (0+255),b
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3499  000696  0100               	movlb	0	; () banked
  3500  000698  0100               	movlb	0	; () banked
  3501  00069A  5173               	movf	recv_msg@slot& (0+255),w,b
  3502  00069C  0D0D               	mullw	13
  3503  00069E  50F3               	movf	prodl,w,c
  3504  0006A0  0100               	movlb	0	; () banked
  3505  0006A2  0100               	movlb	0	; () banked
  3506  0006A4  256A               	addwf	recv_msg@qptr& (0+255),w,b
  3507  0006A6  0100               	movlb	0	; () banked
  3508  0006A8  0100               	movlb	0	; () banked
  3509  0006AA  6F76               	movwf	recv_msg@qmsg& (0+255),b
  3510  0006AC  50F4               	movf	prodh,w,c
  3511  0006AE  0100               	movlb	0	; () banked
  3512  0006B0  0100               	movlb	0	; () banked
  3513  0006B2  216B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3514  0006B4  0100               	movlb	0	; () banked
  3515  0006B6  6F77               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;messages.c: 74: if (qmsg->full == 1) {
  3519  0006B8  0E01               	movlw	1
  3520  0006BA  C076  FFD9         	movff	recv_msg@qmsg,fsr2l
  3521  0006BE  C077  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3522  0006C2  62DF               	cpfseq	indf2,c
  3523  0006C4  D06F               	goto	l2256
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3527  0006C6  0100               	movlb	0	; () banked
  3528  0006C8  EE20 F001          	lfsr	2,1
  3529  0006CC  0100               	movlb	0	; () banked
  3530  0006CE  5176               	movf	recv_msg@qmsg& (0+255),w,b
  3531  0006D0  26D9               	addwf	fsr2l,f,c
  3532  0006D2  0100               	movlb	0	; () banked
  3533  0006D4  5177               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3534  0006D6  22DA               	addwfc	fsr2h,f,c
  3535  0006D8  50DF               	movf	indf2,w,c
  3536  0006DA  0100               	movlb	0	; () banked
  3537  0006DC  0100               	movlb	0	; () banked
  3538  0006DE  616C               	cpfslt	recv_msg@maxlength& (0+255),b
  3539  0006E0  D002               	goto	l2240
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;messages.c: 77: return (-3);
  3543  0006E2  0EFD               	movlw	253
  3544  0006E4  0012               	return	
  3545  0006E6                     l2240:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;messages.c: 78: }
  3549                           ;messages.c: 80: tlength = qmsg->length;
  3550  0006E6  0100               	movlb	0	; () banked
  3551  0006E8  EE20 F001          	lfsr	2,1
  3552  0006EC  0100               	movlb	0	; () banked
  3553  0006EE  5176               	movf	recv_msg@qmsg& (0+255),w,b
  3554  0006F0  26D9               	addwf	fsr2l,f,c
  3555  0006F2  0100               	movlb	0	; () banked
  3556  0006F4  5177               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3557  0006F6  22DA               	addwfc	fsr2h,f,c
  3558  0006F8  50DF               	movf	indf2,w,c
  3559  0006FA  0100               	movlb	0	; () banked
  3560  0006FC  6F71               	movwf	??_recv_msg& (0+255),b
  3561  0006FE  0100               	movlb	0	; () banked
  3562  000700  5171               	movf	??_recv_msg& (0+255),w,b
  3563  000702  0100               	movlb	0	; () banked
  3564  000704  0100               	movlb	0	; () banked
  3565  000706  6F74               	movwf	recv_msg@tlength& (0+255),b
  3566  000708  0100               	movlb	0	; () banked
  3567  00070A  6B75               	clrf	(recv_msg@tlength+1)& (0+255),b
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3571  00070C  C06F  F060         	movff	recv_msg@data,?_memcpy
  3572  000710  C070  F061         	movff	recv_msg@data+1,?_memcpy+1
  3573  000714  0E03               	movlw	3
  3574  000716  0100               	movlb	0	; () banked
  3575  000718  0100               	movlb	0	; () banked
  3576  00071A  2576               	addwf	recv_msg@qmsg& (0+255),w,b
  3577  00071C  0100               	movlb	0	; () banked
  3578  00071E  6F71               	movwf	??_recv_msg& (0+255),b
  3579  000720  0E00               	movlw	0
  3580  000722  0100               	movlb	0	; () banked
  3581  000724  0100               	movlb	0	; () banked
  3582  000726  2177               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3583  000728  0100               	movlb	0	; () banked
  3584  00072A  6F72               	movwf	(??_recv_msg+1)& (0+255),b
  3585  00072C  C071  F062         	movff	??_recv_msg,?_memcpy+2
  3586  000730  C072  F063         	movff	??_recv_msg+1,?_memcpy+3
  3587  000734  C074  F064         	movff	recv_msg@tlength,?_memcpy+4
  3588  000738  C075  F065         	movff	recv_msg@tlength+1,?_memcpy+5
  3589  00073C  EC34  F009         	call	_memcpy	;wreg free
  3590                           
  3591                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3592  000740  0100               	movlb	0	; () banked
  3593  000742  EE20 F035          	lfsr	2,53
  3594  000746  0100               	movlb	0	; () banked
  3595  000748  516A               	movf	recv_msg@qptr& (0+255),w,b
  3596  00074A  26D9               	addwf	fsr2l,f,c
  3597  00074C  0100               	movlb	0	; () banked
  3598  00074E  516B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3599  000750  22DA               	addwfc	fsr2h,f,c
  3600  000752  0100               	movlb	0	; () banked
  3601  000754  EE10 F035          	lfsr	1,53
  3602  000758  0100               	movlb	0	; () banked
  3603  00075A  516A               	movf	recv_msg@qptr& (0+255),w,b
  3604  00075C  26E1               	addwf	fsr1l,f,c
  3605  00075E  0100               	movlb	0	; () banked
  3606  000760  516B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3607  000762  22E2               	addwfc	fsr1h,f,c
  3608  000764  50E7               	movf	indf1,w,c
  3609  000766  0100               	movlb	0	; () banked
  3610  000768  6F71               	movwf	??_recv_msg& (0+255),b
  3611  00076A  0100               	movlb	0	; () banked
  3612  00076C  2971               	incf	??_recv_msg& (0+255),w,b
  3613  00076E  0B03               	andlw	3
  3614  000770  6EDF               	movwf	indf2,c
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3618  000772  0100               	movlb	0	; () banked
  3619  000774  EE20 F002          	lfsr	2,2
  3620  000778  0100               	movlb	0	; () banked
  3621  00077A  5176               	movf	recv_msg@qmsg& (0+255),w,b
  3622  00077C  26D9               	addwf	fsr2l,f,c
  3623  00077E  0100               	movlb	0	; () banked
  3624  000780  5177               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3625  000782  22DA               	addwfc	fsr2h,f,c
  3626  000784  C06D  FFE1         	movff	recv_msg@msgtype,fsr1l
  3627  000788  C06E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3628  00078C  CFDF FFE7          	movff	indf2,indf1
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;messages.c: 91: qmsg->full = 0;
  3632  000790  C076  FFD9         	movff	recv_msg@qmsg,fsr2l
  3633  000794  C077  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3634  000798  0E00               	movlw	0
  3635  00079A  6EDF               	movwf	indf2,c
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;messages.c: 92: return (tlength);
  3639  00079C  0100               	movlb	0	; () banked
  3640  00079E  0100               	movlb	0	; () banked
  3641  0007A0  5174               	movf	recv_msg@tlength& (0+255),w,b
  3642  0007A2  0012               	return	
  3643  0007A4                     l2256:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;messages.c: 94: return (-4);
  3647  0007A4  0EFC               	movlw	252
  3648  0007A6  0012               	return	
  3649  0007A8                     __end_of_recv_msg:
  3650                           	opt stack 0
  3651                           tosu	equ	0xFFF
  3652                           tosh	equ	0xFFE
  3653                           tosl	equ	0xFFD
  3654                           pclath	equ	0xFFA
  3655                           tblptru	equ	0xFF8
  3656                           tblptrh	equ	0xFF7
  3657                           tblptrl	equ	0xFF6
  3658                           tablat	equ	0xFF5
  3659                           prodh	equ	0xFF4
  3660                           prodl	equ	0xFF3
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           indf1	equ	0xFE7
  3664                           postinc1	equ	0xFE6
  3665                           postdec1	equ	0xFE5
  3666                           fsr1h	equ	0xFE2
  3667                           fsr1l	equ	0xFE1
  3668                           indf2	equ	0xFDF
  3669                           postinc2	equ	0xFDE
  3670                           postdec2	equ	0xFDD
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           status	equ	0xFD8
  3674                           
  3675 ;; *************** function _memcpy *****************
  3676 ;; Defined at:
  3677 ;;		line 13 in file "/Applications/microchip/xc8/v1.21/sources/common/memcpy.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  d1              2    0[BANK0 ] PTR void 
  3680 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3681 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3682 ;;		 -> main@msgbuffer(11), 
  3683 ;;  s1              2    2[BANK0 ] PTR const void 
  3684 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3685 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3686 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3687 ;;		 -> ToMainLow_MQ(54), InterruptHandlerHigh@data(1), UART1_RX_Int_handle@data(1), main@uart_data2(28), 
  3688 ;;  n               2    4[BANK0 ] unsigned int 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  3691 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3692 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3693 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3694 ;;		 -> ToMainLow_MQ(54), InterruptHandlerHigh@data(1), UART1_RX_Int_handle@data(1), main@uart_data2(28), 
  3695 ;;  d               2    6[BANK0 ] PTR unsigned char 
  3696 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3697 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3698 ;;		 -> main@msgbuffer(11), 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  2    0[BANK0 ] PTR void 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3708 ;;      Params:         0       6       0       0       0       0       0
  3709 ;;      Locals:         0       4       0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0
  3711 ;;      Totals:         0      10       0       0       0       0       0
  3712 ;;Total ram usage:       10 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    6
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_recv_msg
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text18
  3723  001268                     __ptext18:
  3724                           	opt stack 0
  3725  001268                     _memcpy:
  3726                           	opt stack 22
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;incstack = 0
  3730                           ;incstack = 0
  3731  001268  C062  F068         	movff	memcpy@s1,memcpy@s
  3732  00126C  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
  3733  001270  C060  F066         	movff	memcpy@d1,memcpy@d
  3734  001274  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
  3735  001278  D012               	goto	l2226
  3736  00127A                     l2220:
  3737  00127A  C068  FFD9         	movff	memcpy@s,fsr2l
  3738  00127E  C069  FFDA         	movff	memcpy@s+1,fsr2h
  3739  001282  C066  FFE1         	movff	memcpy@d,fsr1l
  3740  001286  C067  FFE2         	movff	memcpy@d+1,fsr1h
  3741  00128A  CFDF FFE7          	movff	indf2,indf1
  3742  00128E  0100               	movlb	0	; () banked
  3743  001290  0100               	movlb	0	; () banked
  3744  001292  4B68               	infsnz	memcpy@s& (0+255),f,b
  3745  001294  2B69               	incf	(memcpy@s+1)& (0+255),f,b
  3746                           
  3747                           ; BSR set to: 0
  3748  001296  0100               	movlb	0	; () banked
  3749  001298  0100               	movlb	0	; () banked
  3750  00129A  4B66               	infsnz	memcpy@d& (0+255),f,b
  3751  00129C  2B67               	incf	(memcpy@d+1)& (0+255),f,b
  3752  00129E                     l2226:
  3753  00129E  0100               	movlb	0	; () banked
  3754  0012A0  0100               	movlb	0	; () banked
  3755  0012A2  0764               	decf	memcpy@n& (0+255),f,b
  3756  0012A4  A0D8               	btfss	status,0,c
  3757  0012A6  0765               	decf	(memcpy@n+1)& (0+255),f,b
  3758  0012A8  0100               	movlb	0	; () banked
  3759  0012AA  2964               	incf	memcpy@n& (0+255),w,b
  3760  0012AC  B4D8               	btfsc	status,2,c
  3761  0012AE  2965               	incf	(memcpy@n+1)& (0+255),w,b
  3762  0012B0  B4D8               	btfsc	status,2,c
  3763                           
  3764                           ; BSR set to: 0
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;	Return value of _memcpy is never used
  3768  0012B2  0012               	return	
  3769  0012B4  D7E2               	goto	l2220
  3770  0012B6                     __end_of_memcpy:
  3771                           	opt stack 0
  3772                           tosu	equ	0xFFF
  3773                           tosh	equ	0xFFE
  3774                           tosl	equ	0xFFD
  3775                           pclath	equ	0xFFA
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           postinc0	equ	0xFEE
  3783                           wreg	equ	0xFE8
  3784                           indf1	equ	0xFE7
  3785                           postinc1	equ	0xFE6
  3786                           postdec1	equ	0xFE5
  3787                           fsr1h	equ	0xFE2
  3788                           fsr1l	equ	0xFE1
  3789                           indf2	equ	0xFDF
  3790                           postinc2	equ	0xFDE
  3791                           postdec2	equ	0xFDD
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8
  3795                           
  3796 ;; *************** function _block_on_To_msgqueues *****************
  3797 ;; Defined at:
  3798 ;;		line 258 in file "messages.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;		None               void
  3805 ;; Registers used:
  3806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3812 ;;      Params:         0       0       0       0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0
  3814 ;;      Temps:          0       1       0       0       0       0       0
  3815 ;;      Totals:         0       1       0       0       0       0       0
  3816 ;;Total ram usage:        1 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    9
  3819 ;; This function calls:
  3820 ;;		_in_main
  3821 ;;		_check_msg
  3822 ;;		_Delay1KTCYx
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text19
  3829  000F7E                     __ptext19:
  3830                           	opt stack 0
  3831  000F7E                     _block_on_To_msgqueues:
  3832                           	opt stack 21
  3833                           
  3834                           ;messages.c: 259: if (!in_main()) {
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;incstack = 0
  3838                           ;incstack = 0
  3839  000F7E  ECE7  F009         	call	_in_main	;wreg free
  3840  000F82  0100               	movlb	0	; () banked
  3841  000F84  0100               	movlb	0	; () banked
  3842  000F86  5165               	movf	(?_in_main+1)& (0+255),w,b
  3843  000F88  0100               	movlb	0	; () banked
  3844  000F8A  1164               	iorwf	?_in_main& (0+255),w,b
  3845  000F8C  B4D8               	btfsc	status,2,c
  3846  000F8E  0012               	return	
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;messages.c: 261: }
  3850                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3851                           
  3852                           ; BSR set to: 0
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;messages.c: 260: return;
  3856  000F90  0100               	movlb	0	; () banked
  3857  000F92  6F66               	movwf	??_block_on_To_msgqueues& (0+255),b
  3858  000F94  0E01               	movlw	1
  3859  000F96  0100               	movlb	0	; () banked
  3860  000F98  0100               	movlb	0	; () banked
  3861  000F9A  6FD7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3862  000F9C  0100               	movlb	0	; () banked
  3863  000F9E  5166               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3864  000FA0                     l1876:
  3865                           
  3866                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3867  000FA0  0101               	movlb	1	; () banked
  3868  000FA2  0E01               	movlw	high _ToMainHigh_MQ
  3869  000FA4  0100               	movlb	0	; () banked
  3870  000FA6  0100               	movlb	0	; () banked
  3871  000FA8  6F61               	movwf	(?_check_msg+1)& (0+255),b
  3872  000FAA  0101               	movlb	1	; () banked
  3873  000FAC  0E6C               	movlw	low _ToMainHigh_MQ
  3874  000FAE  0100               	movlb	0	; () banked
  3875  000FB0  6F60               	movwf	?_check_msg& (0+255),b
  3876  000FB2  EC8C  F00A         	call	_check_msg	;wreg free
  3877  000FB6  0900               	iorlw	0
  3878  000FB8  B4D8               	btfsc	status,2,c
  3879  000FBA  D009               	goto	l1882
  3880                           
  3881                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3882  000FBC  0100               	movlb	0	; () banked
  3883  000FBE  6F66               	movwf	??_block_on_To_msgqueues& (0+255),b
  3884  000FC0  0E00               	movlw	0
  3885  000FC2  0100               	movlb	0	; () banked
  3886  000FC4  0100               	movlb	0	; () banked
  3887  000FC6  6FD7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3888  000FC8  0100               	movlb	0	; () banked
  3889  000FCA  5166               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3890  000FCC  0012               	return	
  3891  000FCE                     l1882:
  3892                           
  3893                           ;messages.c: 271: }
  3894                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3895  000FCE  0101               	movlb	1	; () banked
  3896  000FD0  0E01               	movlw	high _ToMainLow_MQ
  3897  000FD2  0100               	movlb	0	; () banked
  3898  000FD4  0100               	movlb	0	; () banked
  3899  000FD6  6F61               	movwf	(?_check_msg+1)& (0+255),b
  3900  000FD8  0101               	movlb	1	; () banked
  3901  000FDA  0EA2               	movlw	low _ToMainLow_MQ
  3902  000FDC  0100               	movlb	0	; () banked
  3903  000FDE  6F60               	movwf	?_check_msg& (0+255),b
  3904  000FE0  EC8C  F00A         	call	_check_msg	;wreg free
  3905  000FE4  0900               	iorlw	0
  3906  000FE6  B4D8               	btfsc	status,2,c
  3907  000FE8  D009               	goto	l1888
  3908                           
  3909                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3910  000FEA  0100               	movlb	0	; () banked
  3911  000FEC  6F66               	movwf	??_block_on_To_msgqueues& (0+255),b
  3912  000FEE  0E00               	movlw	0
  3913  000FF0  0100               	movlb	0	; () banked
  3914  000FF2  0100               	movlb	0	; () banked
  3915  000FF4  6FD7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3916  000FF6  0100               	movlb	0	; () banked
  3917  000FF8  5166               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3918  000FFA  0012               	return	
  3919  000FFC                     l1888:
  3920                           
  3921                           ;messages.c: 278: }
  3922                           ;messages.c: 279: Delay1KTCYx(10);
  3923  000FFC  0100               	movlb	0	; () banked
  3924  000FFE  6F66               	movwf	??_block_on_To_msgqueues& (0+255),b
  3925  001000  0E0A               	movlw	10
  3926  001002  0100               	movlb	0	; () banked
  3927  001004  0100               	movlb	0	; () banked
  3928  001006  6F60               	movwf	?_Delay1KTCYx& (0+255),b
  3929  001008  0100               	movlb	0	; () banked
  3930  00100A  5166               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3931  00100C  EC28  F00B         	call	_Delay1KTCYx	;wreg free
  3932  001010  D7C7               	goto	l1876
  3933  001012                     __end_of_block_on_To_msgqueues:
  3934                           	opt stack 0
  3935                           tosu	equ	0xFFF
  3936                           tosh	equ	0xFFE
  3937                           tosl	equ	0xFFD
  3938                           pclath	equ	0xFFA
  3939                           tblptru	equ	0xFF8
  3940                           tblptrh	equ	0xFF7
  3941                           tblptrl	equ	0xFF6
  3942                           tablat	equ	0xFF5
  3943                           prodh	equ	0xFF4
  3944                           prodl	equ	0xFF3
  3945                           postinc0	equ	0xFEE
  3946                           wreg	equ	0xFE8
  3947                           indf1	equ	0xFE7
  3948                           postinc1	equ	0xFE6
  3949                           postdec1	equ	0xFE5
  3950                           fsr1h	equ	0xFE2
  3951                           fsr1l	equ	0xFE1
  3952                           indf2	equ	0xFDF
  3953                           postinc2	equ	0xFDE
  3954                           postdec2	equ	0xFDD
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8
  3958                           
  3959 ;; *************** function _Delay1KTCYx *****************
  3960 ;; Defined at:
  3961 ;;		line 9 in file "/Applications/microchip/xc8/v1.21/sources/pic18/d1ktcyx.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  unit            1    0[BANK0 ] unsigned char 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;		None               void
  3968 ;; Registers used:
  3969 ;;		wreg
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3975 ;;      Params:         0       1       0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0
  3978 ;;      Totals:         0       1       0       0       0       0       0
  3979 ;;Total ram usage:        1 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    6
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_block_on_To_msgqueues
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text20
  3990  001650                     __ptext20:
  3991                           	opt stack 0
  3992  001650                     _Delay1KTCYx:
  3993                           	opt stack 23
  3994  001650                     l590:
  3995  001650  0EFA               	movlw	250
  3996  001652                     u1207:
  3997  001652  F000               	nop	
  3998  001654  2EE8               	decfsz	wreg,f,c
  3999  001656  D7FD               	goto	u1207
  4000  001658  0100               	movlb	0	; () banked
  4001  00165A  0100               	movlb	0	; () banked
  4002  00165C  2F60               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4003  00165E  D7F8               	goto	l590
  4004  001660  0012               	return	
  4005  001662                     __end_of_Delay1KTCYx:
  4006                           	opt stack 0
  4007                           tosu	equ	0xFFF
  4008                           tosh	equ	0xFFE
  4009                           tosl	equ	0xFFD
  4010                           pclath	equ	0xFFA
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           postinc0	equ	0xFEE
  4018                           wreg	equ	0xFE8
  4019                           indf1	equ	0xFE7
  4020                           postinc1	equ	0xFE6
  4021                           postdec1	equ	0xFE5
  4022                           fsr1h	equ	0xFE2
  4023                           fsr1l	equ	0xFE1
  4024                           indf2	equ	0xFDF
  4025                           postinc2	equ	0xFDE
  4026                           postdec2	equ	0xFDD
  4027                           fsr2h	equ	0xFDA
  4028                           fsr2l	equ	0xFD9
  4029                           status	equ	0xFD8
  4030                           
  4031 ;; *************** function _check_msg *****************
  4032 ;; Defined at:
  4033 ;;		line 222 in file "messages.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  4036 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      unsigned char 
  4041 ;; Registers used:
  4042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4048 ;;      Params:         0       2       0       0       0       0       0
  4049 ;;      Locals:         0       0       0       0       0       0       0
  4050 ;;      Temps:          0       1       0       0       0       0       0
  4051 ;;      Totals:         0       3       0       0       0       0       0
  4052 ;;Total ram usage:        3 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    6
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_block_on_To_msgqueues
  4059 ;;		_SleepIfOkay
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text21
  4064  001518                     __ptext21:
  4065                           	opt stack 0
  4066  001518                     _check_msg:
  4067                           	opt stack 23
  4068                           
  4069                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;incstack = 0
  4073                           ;incstack = 0
  4074  001518  0100               	movlb	0	; () banked
  4075  00151A  EE20 F035          	lfsr	2,53
  4076  00151E  0100               	movlb	0	; () banked
  4077  001520  5160               	movf	check_msg@qptr& (0+255),w,b
  4078  001522  26D9               	addwf	fsr2l,f,c
  4079  001524  0100               	movlb	0	; () banked
  4080  001526  5161               	movf	(check_msg@qptr+1)& (0+255),w,b
  4081  001528  22DA               	addwfc	fsr2h,f,c
  4082  00152A  50DF               	movf	indf2,w,c
  4083  00152C  0100               	movlb	0	; () banked
  4084  00152E  6F62               	movwf	??_check_msg& (0+255),b
  4085  001530  0100               	movlb	0	; () banked
  4086  001532  5162               	movf	??_check_msg& (0+255),w,b
  4087  001534  0D0D               	mullw	13
  4088  001536  50F3               	movf	prodl,w,c
  4089  001538  0100               	movlb	0	; () banked
  4090  00153A  0100               	movlb	0	; () banked
  4091  00153C  2560               	addwf	check_msg@qptr& (0+255),w,b
  4092  00153E  6ED9               	movwf	fsr2l,c
  4093  001540  50F4               	movf	prodh,w,c
  4094  001542  0100               	movlb	0	; () banked
  4095  001544  0100               	movlb	0	; () banked
  4096  001546  2161               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4097  001548  6EDA               	movwf	fsr2h,c
  4098  00154A  50DF               	movf	indf2,w,c
  4099  00154C  0012               	return	
  4100  00154E                     __end_of_check_msg:
  4101                           	opt stack 0
  4102                           tosu	equ	0xFFF
  4103                           tosh	equ	0xFFE
  4104                           tosl	equ	0xFFD
  4105                           pclath	equ	0xFFA
  4106                           tblptru	equ	0xFF8
  4107                           tblptrh	equ	0xFF7
  4108                           tblptrl	equ	0xFF6
  4109                           tablat	equ	0xFF5
  4110                           prodh	equ	0xFF4
  4111                           prodl	equ	0xFF3
  4112                           postinc0	equ	0xFEE
  4113                           wreg	equ	0xFE8
  4114                           indf1	equ	0xFE7
  4115                           postinc1	equ	0xFE6
  4116                           postdec1	equ	0xFE5
  4117                           fsr1h	equ	0xFE2
  4118                           fsr1l	equ	0xFE1
  4119                           indf2	equ	0xFDF
  4120                           postinc2	equ	0xFDE
  4121                           postdec2	equ	0xFDD
  4122                           fsr2h	equ	0xFDA
  4123                           fsr2l	equ	0xFD9
  4124                           status	equ	0xFD8
  4125                           
  4126 ;; *************** function _in_main *****************
  4127 ;; Defined at:
  4128 ;;		line 124 in file "interrupts.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2    4[BANK0 ] int 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4142 ;;      Params:         0       2       0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0       0       0
  4145 ;;      Totals:         0       2       0       0       0       0       0
  4146 ;;Total ram usage:        2 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    8
  4149 ;; This function calls:
  4150 ;;		_in_high_int
  4151 ;;		_in_low_int
  4152 ;; This function is called by:
  4153 ;;		_block_on_To_msgqueues
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text22
  4158  0013CE                     __ptext22:
  4159                           	opt stack 0
  4160  0013CE                     _in_main:
  4161                           	opt stack 21
  4162                           
  4163                           ;interrupts.c: 125: if ((!in_low_int()) && (!in_high_int())) {
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;incstack = 0
  4167                           ;incstack = 0
  4168  0013CE  ECA2  F009         	call	_in_low_int	;wreg free
  4169  0013D2  0100               	movlb	0	; () banked
  4170  0013D4  0100               	movlb	0	; () banked
  4171  0013D6  5163               	movf	(?_in_low_int+1)& (0+255),w,b
  4172  0013D8  0100               	movlb	0	; () banked
  4173  0013DA  1162               	iorwf	?_in_low_int& (0+255),w,b
  4174  0013DC  A4D8               	btfss	status,2,c
  4175  0013DE  D011               	goto	l2176
  4176                           
  4177                           ; BSR set to: 0
  4178  0013E0  EC31  F00B         	call	_in_high_int	;wreg free
  4179  0013E4  0100               	movlb	0	; () banked
  4180  0013E6  0100               	movlb	0	; () banked
  4181  0013E8  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  4182  0013EA  0100               	movlb	0	; () banked
  4183  0013EC  1160               	iorwf	?_in_high_int& (0+255),w,b
  4184  0013EE  A4D8               	btfss	status,2,c
  4185  0013F0  D008               	goto	l2176
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;interrupts.c: 126: return (1);
  4189  0013F2  0E00               	movlw	0
  4190  0013F4  0100               	movlb	0	; () banked
  4191  0013F6  0100               	movlb	0	; () banked
  4192  0013F8  6F65               	movwf	(?_in_main+1)& (0+255),b
  4193  0013FA  0E01               	movlw	1
  4194  0013FC  0100               	movlb	0	; () banked
  4195  0013FE  6F64               	movwf	?_in_main& (0+255),b
  4196  001400  0012               	return	
  4197  001402                     l2176:
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;interrupts.c: 128: return (0);
  4201  001402  0E00               	movlw	0
  4202  001404  0100               	movlb	0	; () banked
  4203  001406  0100               	movlb	0	; () banked
  4204  001408  6F65               	movwf	(?_in_main+1)& (0+255),b
  4205  00140A  0E00               	movlw	0
  4206  00140C  0100               	movlb	0	; () banked
  4207  00140E  6F64               	movwf	?_in_main& (0+255),b
  4208  001410  0012               	return	
  4209  001412                     __end_of_in_main:
  4210                           	opt stack 0
  4211                           tosu	equ	0xFFF
  4212                           tosh	equ	0xFFE
  4213                           tosl	equ	0xFFD
  4214                           pclath	equ	0xFFA
  4215                           tblptru	equ	0xFF8
  4216                           tblptrh	equ	0xFF7
  4217                           tblptrl	equ	0xFF6
  4218                           tablat	equ	0xFF5
  4219                           prodh	equ	0xFF4
  4220                           prodl	equ	0xFF3
  4221                           postinc0	equ	0xFEE
  4222                           wreg	equ	0xFE8
  4223                           indf1	equ	0xFE7
  4224                           postinc1	equ	0xFE6
  4225                           postdec1	equ	0xFE5
  4226                           fsr1h	equ	0xFE2
  4227                           fsr1l	equ	0xFE1
  4228                           indf2	equ	0xFDF
  4229                           postinc2	equ	0xFDE
  4230                           postdec2	equ	0xFDD
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _in_low_int *****************
  4236 ;; Defined at:
  4237 ;;		line 114 in file "interrupts.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2    2[BANK0 ] int 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4251 ;;      Params:         0       2       0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0
  4254 ;;      Totals:         0       2       0       0       0       0       0
  4255 ;;Total ram usage:        2 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    7
  4258 ;; This function calls:
  4259 ;;		_in_high_int
  4260 ;; This function is called by:
  4261 ;;		_in_main
  4262 ;;		_SleepIfOkay
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text23
  4267  001344                     __ptext23:
  4268                           	opt stack 0
  4269  001344                     _in_low_int:
  4270                           	opt stack 21
  4271                           
  4272                           ;interrupts.c: 115: if (INTCONbits.GIEL == 1) {
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;incstack = 0
  4276                           ;incstack = 0
  4277  001344  ACF2               	btfss	intcon,6,c	;volatile
  4278  001346  D008               	goto	l2154
  4279                           
  4280                           ;interrupts.c: 116: return (0);
  4281  001348  0E00               	movlw	0
  4282  00134A  0100               	movlb	0	; () banked
  4283  00134C  0100               	movlb	0	; () banked
  4284  00134E  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  4285  001350  0E00               	movlw	0
  4286  001352  0100               	movlb	0	; () banked
  4287  001354  6F62               	movwf	?_in_low_int& (0+255),b
  4288  001356  0012               	return	
  4289  001358                     l2154:
  4290  001358  EC31  F00B         	call	_in_high_int	;wreg free
  4291  00135C  0100               	movlb	0	; () banked
  4292  00135E  0100               	movlb	0	; () banked
  4293  001360  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  4294  001362  0100               	movlb	0	; () banked
  4295  001364  1160               	iorwf	?_in_high_int& (0+255),w,b
  4296  001366  B4D8               	btfsc	status,2,c
  4297  001368  D008               	goto	l2162
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;interrupts.c: 118: return (0);
  4301  00136A  0E00               	movlw	0
  4302  00136C  0100               	movlb	0	; () banked
  4303  00136E  0100               	movlb	0	; () banked
  4304  001370  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  4305  001372  0E00               	movlw	0
  4306  001374  0100               	movlb	0	; () banked
  4307  001376  6F62               	movwf	?_in_low_int& (0+255),b
  4308  001378  0012               	return	
  4309  00137A                     l2162:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;interrupts.c: 120: return (1);
  4313  00137A  0E00               	movlw	0
  4314  00137C  0100               	movlb	0	; () banked
  4315  00137E  0100               	movlb	0	; () banked
  4316  001380  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  4317  001382  0E01               	movlw	1
  4318  001384  0100               	movlb	0	; () banked
  4319  001386  6F62               	movwf	?_in_low_int& (0+255),b
  4320  001388  0012               	return	
  4321  00138A                     __end_of_in_low_int:
  4322                           	opt stack 0
  4323                           tosu	equ	0xFFF
  4324                           tosh	equ	0xFFE
  4325                           tosl	equ	0xFFD
  4326                           pclath	equ	0xFFA
  4327                           tblptru	equ	0xFF8
  4328                           tblptrh	equ	0xFF7
  4329                           tblptrl	equ	0xFF6
  4330                           tablat	equ	0xFF5
  4331                           prodh	equ	0xFF4
  4332                           prodl	equ	0xFF3
  4333                           intcon	equ	0xFF2
  4334                           postinc0	equ	0xFEE
  4335                           wreg	equ	0xFE8
  4336                           indf1	equ	0xFE7
  4337                           postinc1	equ	0xFE6
  4338                           postdec1	equ	0xFE5
  4339                           fsr1h	equ	0xFE2
  4340                           fsr1l	equ	0xFE1
  4341                           indf2	equ	0xFDF
  4342                           postinc2	equ	0xFDE
  4343                           postdec2	equ	0xFDD
  4344                           fsr2h	equ	0xFDA
  4345                           fsr2l	equ	0xFD9
  4346                           status	equ	0xFD8
  4347                           
  4348 ;; *************** function _in_high_int *****************
  4349 ;; Defined at:
  4350 ;;		line 106 in file "interrupts.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2    0[BANK0 ] int 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4364 ;;      Params:         0       2       0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0
  4367 ;;      Totals:         0       2       0       0       0       0       0
  4368 ;;Total ram usage:        2 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    6
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_in_low_int
  4375 ;;		_in_main
  4376 ;;		_SleepIfOkay
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text24
  4381  001662                     __ptext24:
  4382                           	opt stack 0
  4383  001662                     _in_high_int:
  4384                           	opt stack 21
  4385                           
  4386                           ;interrupts.c: 107: return (!INTCONbits.GIEH);
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;incstack = 0
  4390                           ;incstack = 0
  4391  001662  0E00               	movlw	0
  4392  001664  AEF2               	btfss	intcon,7,c	;volatile
  4393  001666  0E01               	movlw	1
  4394  001668  0100               	movlb	0	; () banked
  4395  00166A  0100               	movlb	0	; () banked
  4396  00166C  6F60               	movwf	?_in_high_int& (0+255),b
  4397  00166E  0100               	movlb	0	; () banked
  4398  001670  6B61               	clrf	(?_in_high_int+1)& (0+255),b
  4399  001672  0012               	return	
  4400  001674                     __end_of_in_high_int:
  4401                           	opt stack 0
  4402                           tosu	equ	0xFFF
  4403                           tosh	equ	0xFFE
  4404                           tosl	equ	0xFFD
  4405                           pclath	equ	0xFFA
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           intcon	equ	0xFF2
  4413                           postinc0	equ	0xFEE
  4414                           wreg	equ	0xFE8
  4415                           indf1	equ	0xFE7
  4416                           postinc1	equ	0xFE6
  4417                           postdec1	equ	0xFE5
  4418                           fsr1h	equ	0xFE2
  4419                           fsr1l	equ	0xFE1
  4420                           indf2	equ	0xFDF
  4421                           postinc2	equ	0xFDE
  4422                           postdec2	equ	0xFDD
  4423                           fsr2h	equ	0xFDA
  4424                           fsr2l	equ	0xFD9
  4425                           status	equ	0xFD8
  4426                           
  4427 ;; *************** function _laser_init *****************
  4428 ;; Defined at:
  4429 ;;		line 29 in file "operations.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;		None
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  init            1    9[BANK0 ] unsigned char 
  4434 ;;  resp            1    0        unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;		None               void
  4437 ;; Registers used:
  4438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4444 ;;      Params:         0       0       0       0       0       0       0
  4445 ;;      Locals:         0       1       0       0       0       0       0
  4446 ;;      Temps:          0       1       0       0       0       0       0
  4447 ;;      Totals:         0       2       0       0       0       0       0
  4448 ;;Total ram usage:        2 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    7
  4451 ;; This function calls:
  4452 ;;		_UART2_Write
  4453 ;;		_UART2_Read
  4454 ;; This function is called by:
  4455 ;;		_main
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text25
  4460  0012B6                     __ptext25:
  4461                           	opt stack 0
  4462  0012B6                     _laser_init:
  4463                           	opt stack 23
  4464                           
  4465                           ;operations.c: 30: char init = 'U';
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;incstack = 0
  4469                           ;incstack = 0
  4470  0012B6  0100               	movlb	0	; () banked
  4471  0012B8  6F68               	movwf	??_laser_init& (0+255),b
  4472  0012BA  0E55               	movlw	85
  4473  0012BC  0100               	movlb	0	; () banked
  4474  0012BE  0100               	movlb	0	; () banked
  4475  0012C0  6F69               	movwf	laser_init@init& (0+255),b
  4476  0012C2  0100               	movlb	0	; () banked
  4477  0012C4  5168               	movf	??_laser_init& (0+255),w,b
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;operations.c: 31: char resp;
  4481                           ;operations.c: 32: UART2_Write(&init, 1);
  4482  0012C6  0100               	movlb	0	; () banked
  4483  0012C8  0E00               	movlw	high laser_init@init
  4484  0012CA  0100               	movlb	0	; () banked
  4485  0012CC  0100               	movlb	0	; () banked
  4486  0012CE  6F61               	movwf	(?_UART2_Write+1)& (0+255),b
  4487  0012D0  0100               	movlb	0	; () banked
  4488  0012D2  0E69               	movlw	low laser_init@init
  4489  0012D4  0100               	movlb	0	; () banked
  4490  0012D6  6F60               	movwf	?_UART2_Write& (0+255),b
  4491  0012D8  0E00               	movlw	0
  4492  0012DA  0100               	movlb	0	; () banked
  4493  0012DC  0100               	movlb	0	; () banked
  4494  0012DE  6F63               	movwf	(?_UART2_Write+3)& (0+255),b
  4495  0012E0  0E01               	movlw	1
  4496  0012E2  0100               	movlb	0	; () banked
  4497  0012E4  6F62               	movwf	(?_UART2_Write+2)& (0+255),b
  4498  0012E6  ECBB  F005         	call	_UART2_Write	;wreg free
  4499                           
  4500                           ;operations.c: 33: UART2_Read(2);
  4501  0012EA  0E00               	movlw	0
  4502  0012EC  0100               	movlb	0	; () banked
  4503  0012EE  0100               	movlb	0	; () banked
  4504  0012F0  6F61               	movwf	(?_UART2_Read+1)& (0+255),b
  4505  0012F2  0E02               	movlw	2
  4506  0012F4  0100               	movlb	0	; () banked
  4507  0012F6  6F60               	movwf	?_UART2_Read& (0+255),b
  4508  0012F8  EC09  F00A         	call	_UART2_Read	;wreg free
  4509  0012FC  0012               	return	
  4510  0012FE                     __end_of_laser_init:
  4511                           	opt stack 0
  4512                           tosu	equ	0xFFF
  4513                           tosh	equ	0xFFE
  4514                           tosl	equ	0xFFD
  4515                           pclath	equ	0xFFA
  4516                           tblptru	equ	0xFF8
  4517                           tblptrh	equ	0xFF7
  4518                           tblptrl	equ	0xFF6
  4519                           tablat	equ	0xFF5
  4520                           prodh	equ	0xFF4
  4521                           prodl	equ	0xFF3
  4522                           intcon	equ	0xFF2
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           indf1	equ	0xFE7
  4526                           postinc1	equ	0xFE6
  4527                           postdec1	equ	0xFE5
  4528                           fsr1h	equ	0xFE2
  4529                           fsr1l	equ	0xFE1
  4530                           indf2	equ	0xFDF
  4531                           postinc2	equ	0xFDE
  4532                           postdec2	equ	0xFDD
  4533                           fsr2h	equ	0xFDA
  4534                           fsr2l	equ	0xFD9
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _UART2_Read *****************
  4538 ;; Defined at:
  4539 ;;		line 98 in file "my_UART.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  len             2    0[BANK0 ] int 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;		None               void
  4546 ;; Registers used:
  4547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4553 ;;      Params:         0       2       0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0
  4556 ;;      Totals:         0       2       0       0       0       0       0
  4557 ;;Total ram usage:        2 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    6
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_laser_init
  4564 ;;		_laser_read
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text26
  4569  001412                     __ptext26:
  4570                           	opt stack 0
  4571  001412                     _UART2_Read:
  4572                           	opt stack 22
  4573                           
  4574                           ;my_UART.c: 99: if(uart_2_data_p->buffer_in_len != -1){
  4575                           
  4576                           ;incstack = 0
  4577                           ;incstack = 0
  4578  001412  0100               	movlb	0	; () banked
  4579  001414  EE20 F00C          	lfsr	2,12
  4580  001418  0100               	movlb	0	; () banked
  4581  00141A  51DE               	movf	_uart_2_data_p& (0+255),w,b
  4582  00141C  26D9               	addwf	fsr2l,f,c
  4583  00141E  0100               	movlb	0	; () banked
  4584  001420  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  4585  001422  22DA               	addwfc	fsr2h,f,c
  4586  001424  2AD9               	incf	fsr2l,f,c
  4587  001426  50DD               	movf	postdec2,w,c
  4588  001428  0AFF               	xorlw	255
  4589  00142A  0EFF               	movlw	255
  4590  00142C  B4D8               	btfsc	status,2,c
  4591  00142E  18DF               	xorwf	indf2,w,c
  4592  001430  A4D8               	btfss	status,2,c
  4593  001432  0012               	return	
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;my_UART.c: 101: }
  4597                           ;my_UART.c: 102: uart_2_data_p->buffer_in_len=len;
  4598                           
  4599                           ; BSR set to: 0
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;my_UART.c: 100: return;
  4603  001434  0100               	movlb	0	; () banked
  4604  001436  EE20 F00C          	lfsr	2,12
  4605  00143A  0100               	movlb	0	; () banked
  4606  00143C  51DE               	movf	_uart_2_data_p& (0+255),w,b
  4607  00143E  26D9               	addwf	fsr2l,f,c
  4608  001440  0100               	movlb	0	; () banked
  4609  001442  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  4610  001444  22DA               	addwfc	fsr2h,f,c
  4611  001446  0100               	movlb	0	; () banked
  4612  001448  C060  FFDE         	movff	UART2_Read@len,postinc2
  4613  00144C  0100               	movlb	0	; () banked
  4614  00144E  C061  FFDD         	movff	UART2_Read@len+1,postdec2
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;my_UART.c: 103: PIE3bits.RC2IE = 1;
  4618  001452  8AA3               	bsf	4003,5,c	;volatile
  4619                           
  4620                           ; BSR set to: 0
  4621  001454  0012               	return	
  4622  001456                     __end_of_UART2_Read:
  4623                           	opt stack 0
  4624                           tosu	equ	0xFFF
  4625                           tosh	equ	0xFFE
  4626                           tosl	equ	0xFFD
  4627                           pclath	equ	0xFFA
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           postinc0	equ	0xFEE
  4636                           wreg	equ	0xFE8
  4637                           indf1	equ	0xFE7
  4638                           postinc1	equ	0xFE6
  4639                           postdec1	equ	0xFE5
  4640                           fsr1h	equ	0xFE2
  4641                           fsr1l	equ	0xFE1
  4642                           indf2	equ	0xFDF
  4643                           postinc2	equ	0xFDE
  4644                           postdec2	equ	0xFDD
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8
  4648                           
  4649 ;; *************** function _UART2_Write *****************
  4650 ;; Defined at:
  4651 ;;		line 76 in file "my_UART.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  c               2    0[BANK0 ] PTR unsigned char 
  4654 ;;		 -> laser_read@read(2), laser_init@init(1), 
  4655 ;;  length          2    2[BANK0 ] int 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  i               2    6[BANK0 ] int 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;		None               void
  4660 ;; Registers used:
  4661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4667 ;;      Params:         0       4       0       0       0       0       0
  4668 ;;      Locals:         0       2       0       0       0       0       0
  4669 ;;      Temps:          0       2       0       0       0       0       0
  4670 ;;      Totals:         0       8       0       0       0       0       0
  4671 ;;Total ram usage:        8 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    6
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_laser_init
  4678 ;;		_laser_read
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text27
  4683  000B76                     __ptext27:
  4684                           	opt stack 0
  4685  000B76                     _UART2_Write:
  4686                           	opt stack 22
  4687                           
  4688                           ;my_UART.c: 77: if(uart_2_data_p->buffer_out_ind!=0){
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;incstack = 0
  4692                           ;incstack = 0
  4693  000B76  0100               	movlb	0	; () banked
  4694  000B78  EE20 F018          	lfsr	2,24
  4695  000B7C  0100               	movlb	0	; () banked
  4696  000B7E  51DE               	movf	_uart_2_data_p& (0+255),w,b
  4697  000B80  26D9               	addwf	fsr2l,f,c
  4698  000B82  0100               	movlb	0	; () banked
  4699  000B84  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  4700  000B86  22DA               	addwfc	fsr2h,f,c
  4701  000B88  50DE               	movf	postinc2,w,c
  4702  000B8A  10DD               	iorwf	postdec2,w,c
  4703  000B8C  A4D8               	btfss	status,2,c
  4704  000B8E  0012               	return	
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;my_UART.c: 79: }
  4708                           ;my_UART.c: 81: uart_2_data_p->buffer_out_len= length;
  4709                           
  4710                           ; BSR set to: 0
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;my_UART.c: 78: return;
  4714  000B90  0100               	movlb	0	; () banked
  4715  000B92  EE20 F01A          	lfsr	2,26
  4716  000B96  0100               	movlb	0	; () banked
  4717  000B98  51DE               	movf	_uart_2_data_p& (0+255),w,b
  4718  000B9A  26D9               	addwf	fsr2l,f,c
  4719  000B9C  0100               	movlb	0	; () banked
  4720  000B9E  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  4721  000BA0  22DA               	addwfc	fsr2h,f,c
  4722  000BA2  0100               	movlb	0	; () banked
  4723  000BA4  C062  FFDE         	movff	UART2_Write@length,postinc2
  4724  000BA8  0100               	movlb	0	; () banked
  4725  000BAA  C063  FFDD         	movff	UART2_Write@length+1,postdec2
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;my_UART.c: 82: for(int i=0; i<length; i++) {
  4729  000BAE  0E00               	movlw	0
  4730  000BB0  0100               	movlb	0	; () banked
  4731  000BB2  0100               	movlb	0	; () banked
  4732  000BB4  6F67               	movwf	(UART2_Write@i+1)& (0+255),b
  4733  000BB6  0E00               	movlw	0
  4734  000BB8  0100               	movlb	0	; () banked
  4735  000BBA  6F66               	movwf	UART2_Write@i& (0+255),b
  4736  000BBC  D02C               	goto	l1998
  4737  000BBE                     l1994:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;my_UART.c: 83: uart_2_data_p->buffer_out[i] = c[i];
  4741  000BBE  0100               	movlb	0	; () banked
  4742  000BC0  0100               	movlb	0	; () banked
  4743  000BC2  5166               	movf	UART2_Write@i& (0+255),w,b
  4744  000BC4  0100               	movlb	0	; () banked
  4745  000BC6  0100               	movlb	0	; () banked
  4746  000BC8  2560               	addwf	UART2_Write@c& (0+255),w,b
  4747  000BCA  6ED9               	movwf	fsr2l,c
  4748  000BCC  0100               	movlb	0	; () banked
  4749  000BCE  0100               	movlb	0	; () banked
  4750  000BD0  5167               	movf	(UART2_Write@i+1)& (0+255),w,b
  4751  000BD2  0100               	movlb	0	; () banked
  4752  000BD4  0100               	movlb	0	; () banked
  4753  000BD6  2161               	addwfc	(UART2_Write@c+1)& (0+255),w,b
  4754  000BD8  6EDA               	movwf	fsr2h,c
  4755  000BDA  0E0E               	movlw	14
  4756  000BDC  0100               	movlb	0	; () banked
  4757  000BDE  0100               	movlb	0	; () banked
  4758  000BE0  2566               	addwf	UART2_Write@i& (0+255),w,b
  4759  000BE2  0100               	movlb	0	; () banked
  4760  000BE4  6F64               	movwf	??_UART2_Write& (0+255),b
  4761  000BE6  0E00               	movlw	0
  4762  000BE8  0100               	movlb	0	; () banked
  4763  000BEA  0100               	movlb	0	; () banked
  4764  000BEC  2167               	addwfc	(UART2_Write@i+1)& (0+255),w,b
  4765  000BEE  0100               	movlb	0	; () banked
  4766  000BF0  6F65               	movwf	(??_UART2_Write+1)& (0+255),b
  4767  000BF2  0100               	movlb	0	; () banked
  4768  000BF4  5164               	movf	??_UART2_Write& (0+255),w,b
  4769  000BF6  0100               	movlb	0	; () banked
  4770  000BF8  0100               	movlb	0	; () banked
  4771  000BFA  25DE               	addwf	_uart_2_data_p& (0+255),w,b
  4772  000BFC  6EE1               	movwf	fsr1l,c
  4773  000BFE  0100               	movlb	0	; () banked
  4774  000C00  5165               	movf	(??_UART2_Write+1)& (0+255),w,b
  4775  000C02  0100               	movlb	0	; () banked
  4776  000C04  0100               	movlb	0	; () banked
  4777  000C06  21DF               	addwfc	(_uart_2_data_p+1)& (0+255),w,b
  4778  000C08  6EE2               	movwf	fsr1h,c
  4779  000C0A  CFDF FFE7          	movff	indf2,indf1
  4780                           
  4781                           ; BSR set to: 0
  4782  000C0E  0100               	movlb	0	; () banked
  4783  000C10  0100               	movlb	0	; () banked
  4784  000C12  4B66               	infsnz	UART2_Write@i& (0+255),f,b
  4785  000C14  2B67               	incf	(UART2_Write@i+1)& (0+255),f,b
  4786  000C16                     l1998:
  4787                           
  4788                           ; BSR set to: 0
  4789  000C16  0100               	movlb	0	; () banked
  4790  000C18  0100               	movlb	0	; () banked
  4791  000C1A  5167               	movf	(UART2_Write@i+1)& (0+255),w,b
  4792  000C1C  0A80               	xorlw	128
  4793  000C1E  0100               	movlb	0	; () banked
  4794  000C20  6F64               	movwf	??_UART2_Write& (0+255),b
  4795  000C22  0100               	movlb	0	; () banked
  4796  000C24  5162               	movf	UART2_Write@length& (0+255),w,b
  4797  000C26  0100               	movlb	0	; () banked
  4798  000C28  0100               	movlb	0	; () banked
  4799  000C2A  5D66               	subwf	UART2_Write@i& (0+255),w,b
  4800  000C2C  0100               	movlb	0	; () banked
  4801  000C2E  0100               	movlb	0	; () banked
  4802  000C30  5163               	movf	(UART2_Write@length+1)& (0+255),w,b
  4803  000C32  0A80               	xorlw	128
  4804  000C34  0100               	movlb	0	; () banked
  4805  000C36  5964               	subwfb	??_UART2_Write& (0+255),w,b
  4806  000C38  A0D8               	btfss	status,0,c
  4807  000C3A  D7C1               	goto	l1994
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;my_UART.c: 84: }
  4811                           ;my_UART.c: 85: PIE3bits.TX2IE=1;
  4812  000C3C  88A3               	bsf	4003,4,c	;volatile
  4813                           
  4814                           ; BSR set to: 0
  4815  000C3E  0012               	return	
  4816  000C40                     __end_of_UART2_Write:
  4817                           	opt stack 0
  4818                           tosu	equ	0xFFF
  4819                           tosh	equ	0xFFE
  4820                           tosl	equ	0xFFD
  4821                           pclath	equ	0xFFA
  4822                           tblptru	equ	0xFF8
  4823                           tblptrh	equ	0xFF7
  4824                           tblptrl	equ	0xFF6
  4825                           tablat	equ	0xFF5
  4826                           prodh	equ	0xFF4
  4827                           prodl	equ	0xFF3
  4828                           intcon	equ	0xFF2
  4829                           postinc0	equ	0xFEE
  4830                           wreg	equ	0xFE8
  4831                           indf1	equ	0xFE7
  4832                           postinc1	equ	0xFE6
  4833                           postdec1	equ	0xFE5
  4834                           fsr1h	equ	0xFE2
  4835                           fsr1l	equ	0xFE1
  4836                           indf2	equ	0xFDF
  4837                           postinc2	equ	0xFDE
  4838                           postdec2	equ	0xFDD
  4839                           fsr2h	equ	0xFDA
  4840                           fsr2l	equ	0xFD9
  4841                           status	equ	0xFD8
  4842                           
  4843 ;; *************** function _enable_interrupts *****************
  4844 ;; Defined at:
  4845 ;;		line 16 in file "interrupts.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;		None               void
  4852 ;; Registers used:
  4853 ;;		None
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4859 ;;      Params:         0       0       0       0       0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0
  4862 ;;      Totals:         0       0       0       0       0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    6
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text28
  4874  001682                     __ptext28:
  4875                           	opt stack 0
  4876  001682                     _enable_interrupts:
  4877                           	opt stack 24
  4878                           
  4879                           ;interrupts.c: 19: INTCONbits.GIE= 1;
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;incstack = 0
  4883                           ;incstack = 0
  4884  001682  8EF2               	bsf	intcon,7,c	;volatile
  4885                           
  4886                           ;interrupts.c: 20: INTCONbits.PEIE=1;
  4887  001684  8CF2               	bsf	intcon,6,c	;volatile
  4888  001686  0012               	return	
  4889  001688                     __end_of_enable_interrupts:
  4890                           	opt stack 0
  4891                           tosu	equ	0xFFF
  4892                           tosh	equ	0xFFE
  4893                           tosl	equ	0xFFD
  4894                           pclath	equ	0xFFA
  4895                           tblptru	equ	0xFF8
  4896                           tblptrh	equ	0xFF7
  4897                           tblptrl	equ	0xFF6
  4898                           tablat	equ	0xFF5
  4899                           prodh	equ	0xFF4
  4900                           prodl	equ	0xFF3
  4901                           intcon	equ	0xFF2
  4902                           postinc0	equ	0xFEE
  4903                           wreg	equ	0xFE8
  4904                           indf1	equ	0xFE7
  4905                           postinc1	equ	0xFE6
  4906                           postdec1	equ	0xFE5
  4907                           fsr1h	equ	0xFE2
  4908                           fsr1l	equ	0xFE1
  4909                           indf2	equ	0xFDF
  4910                           postinc2	equ	0xFDE
  4911                           postdec2	equ	0xFDD
  4912                           fsr2h	equ	0xFDA
  4913                           fsr2l	equ	0xFD9
  4914                           status	equ	0xFD8
  4915                           
  4916 ;; *************** function _init_queues *****************
  4917 ;; Defined at:
  4918 ;;		line 194 in file "messages.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;		None               void
  4925 ;; Registers used:
  4926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4932 ;;      Params:         0       0       0       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0       0       0
  4934 ;;      Temps:          0       1       0       0       0       0       0
  4935 ;;      Totals:         0       1       0       0       0       0       0
  4936 ;;Total ram usage:        1 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    7
  4939 ;; This function calls:
  4940 ;;		_init_queue
  4941 ;; This function is called by:
  4942 ;;		_main
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text29
  4947  0010FC                     __ptext29:
  4948                           	opt stack 0
  4949  0010FC                     _init_queues:
  4950                           	opt stack 23
  4951                           
  4952                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  4953                           
  4954                           ;incstack = 0
  4955                           ;incstack = 0
  4956  0010FC  0100               	movlb	0	; () banked
  4957  0010FE  6F64               	movwf	??_init_queues& (0+255),b
  4958  001100  0E00               	movlw	0
  4959  001102  0100               	movlb	0	; () banked
  4960  001104  0100               	movlb	0	; () banked
  4961  001106  6FD7               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  4962  001108  0100               	movlb	0	; () banked
  4963  00110A  5164               	movf	??_init_queues& (0+255),w,b
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  4967  00110C  0101               	movlb	1	; () banked
  4968  00110E  0E01               	movlw	high _ToMainLow_MQ
  4969  001110  0100               	movlb	0	; () banked
  4970  001112  0100               	movlb	0	; () banked
  4971  001114  6F61               	movwf	(?_init_queue+1)& (0+255),b
  4972  001116  0101               	movlb	1	; () banked
  4973  001118  0EA2               	movlw	low _ToMainLow_MQ
  4974  00111A  0100               	movlb	0	; () banked
  4975  00111C  6F60               	movwf	?_init_queue& (0+255),b
  4976  00111E  EC09  F008         	call	_init_queue	;wreg free
  4977                           
  4978                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  4979  001122  0101               	movlb	1	; () banked
  4980  001124  0E01               	movlw	high _ToMainHigh_MQ
  4981  001126  0100               	movlb	0	; () banked
  4982  001128  0100               	movlb	0	; () banked
  4983  00112A  6F61               	movwf	(?_init_queue+1)& (0+255),b
  4984  00112C  0101               	movlb	1	; () banked
  4985  00112E  0E6C               	movlw	low _ToMainHigh_MQ
  4986  001130  0100               	movlb	0	; () banked
  4987  001132  6F60               	movwf	?_init_queue& (0+255),b
  4988  001134  EC09  F008         	call	_init_queue	;wreg free
  4989                           
  4990                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  4991  001138  0101               	movlb	1	; () banked
  4992  00113A  0E01               	movlw	high _FromMainLow_MQ
  4993  00113C  0100               	movlb	0	; () banked
  4994  00113E  0100               	movlb	0	; () banked
  4995  001140  6F61               	movwf	(?_init_queue+1)& (0+255),b
  4996  001142  0101               	movlb	1	; () banked
  4997  001144  0E36               	movlw	low _FromMainLow_MQ
  4998  001146  0100               	movlb	0	; () banked
  4999  001148  6F60               	movwf	?_init_queue& (0+255),b
  5000  00114A  EC09  F008         	call	_init_queue	;wreg free
  5001                           
  5002                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  5003  00114E  0101               	movlb	1	; () banked
  5004  001150  0E01               	movlw	high _FromMainHigh_MQ
  5005  001152  0100               	movlb	0	; () banked
  5006  001154  0100               	movlb	0	; () banked
  5007  001156  6F61               	movwf	(?_init_queue+1)& (0+255),b
  5008  001158  0101               	movlb	1	; () banked
  5009  00115A  0E00               	movlw	low _FromMainHigh_MQ
  5010  00115C  0100               	movlb	0	; () banked
  5011  00115E  6F60               	movwf	?_init_queue& (0+255),b
  5012  001160  EC09  F008         	call	_init_queue	;wreg free
  5013  001164  0012               	return	
  5014  001166                     __end_of_init_queues:
  5015                           	opt stack 0
  5016                           tosu	equ	0xFFF
  5017                           tosh	equ	0xFFE
  5018                           tosl	equ	0xFFD
  5019                           pclath	equ	0xFFA
  5020                           tblptru	equ	0xFF8
  5021                           tblptrh	equ	0xFF7
  5022                           tblptrl	equ	0xFF6
  5023                           tablat	equ	0xFF5
  5024                           prodh	equ	0xFF4
  5025                           prodl	equ	0xFF3
  5026                           intcon	equ	0xFF2
  5027                           postinc0	equ	0xFEE
  5028                           wreg	equ	0xFE8
  5029                           indf1	equ	0xFE7
  5030                           postinc1	equ	0xFE6
  5031                           postdec1	equ	0xFE5
  5032                           fsr1h	equ	0xFE2
  5033                           fsr1l	equ	0xFE1
  5034                           indf2	equ	0xFDF
  5035                           postinc2	equ	0xFDE
  5036                           postdec2	equ	0xFDD
  5037                           fsr2h	equ	0xFDA
  5038                           fsr2l	equ	0xFD9
  5039                           status	equ	0xFD8
  5040                           
  5041 ;; *************** function _init_queue *****************
  5042 ;; Defined at:
  5043 ;;		line 14 in file "messages.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  5046 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  i               1    3[BANK0 ] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;		None               void
  5051 ;; Registers used:
  5052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5058 ;;      Params:         0       2       0       0       0       0       0
  5059 ;;      Locals:         0       1       0       0       0       0       0
  5060 ;;      Temps:          0       1       0       0       0       0       0
  5061 ;;      Totals:         0       4       0       0       0       0       0
  5062 ;;Total ram usage:        4 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:    6
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_init_queues
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text30
  5073  001012                     __ptext30:
  5074                           	opt stack 0
  5075  001012                     _init_queue:
  5076                           	opt stack 23
  5077                           
  5078                           ;messages.c: 15: unsigned char i;
  5079                           ;messages.c: 17: qptr->cur_write_ind = 0;
  5080                           
  5081                           ;incstack = 0
  5082                           ;incstack = 0
  5083  001012  0100               	movlb	0	; () banked
  5084  001014  EE20 F034          	lfsr	2,52
  5085  001018  0100               	movlb	0	; () banked
  5086  00101A  5160               	movf	init_queue@qptr& (0+255),w,b
  5087  00101C  26D9               	addwf	fsr2l,f,c
  5088  00101E  0100               	movlb	0	; () banked
  5089  001020  5161               	movf	(init_queue@qptr+1)& (0+255),w,b
  5090  001022  22DA               	addwfc	fsr2h,f,c
  5091  001024  0E00               	movlw	0
  5092  001026  6EDF               	movwf	indf2,c
  5093                           
  5094                           ;messages.c: 18: qptr->cur_read_ind = 0;
  5095  001028  0100               	movlb	0	; () banked
  5096  00102A  EE20 F035          	lfsr	2,53
  5097  00102E  0100               	movlb	0	; () banked
  5098  001030  5160               	movf	init_queue@qptr& (0+255),w,b
  5099  001032  26D9               	addwf	fsr2l,f,c
  5100  001034  0100               	movlb	0	; () banked
  5101  001036  5161               	movf	(init_queue@qptr+1)& (0+255),w,b
  5102  001038  22DA               	addwfc	fsr2h,f,c
  5103  00103A  0E00               	movlw	0
  5104  00103C  6EDF               	movwf	indf2,c
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  5108  00103E  0100               	movlb	0	; () banked
  5109  001040  6F62               	movwf	??_init_queue& (0+255),b
  5110  001042  0E00               	movlw	0
  5111  001044  0100               	movlb	0	; () banked
  5112  001046  0100               	movlb	0	; () banked
  5113  001048  6F63               	movwf	init_queue@i& (0+255),b
  5114  00104A  0100               	movlb	0	; () banked
  5115  00104C  5162               	movf	??_init_queue& (0+255),w,b
  5116                           
  5117                           ; BSR set to: 0
  5118  00104E  0E03               	movlw	3
  5119  001050  0100               	movlb	0	; () banked
  5120  001052  0100               	movlb	0	; () banked
  5121  001054  6563               	cpfsgt	init_queue@i& (0+255),b
  5122  001056  D001               	goto	l2188
  5123  001058  0012               	return	
  5124  00105A                     l2188:
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;messages.c: 20: qptr->queue[i].full = 0;
  5128  00105A  0100               	movlb	0	; () banked
  5129  00105C  0100               	movlb	0	; () banked
  5130  00105E  5163               	movf	init_queue@i& (0+255),w,b
  5131  001060  0D0D               	mullw	13
  5132  001062  50F3               	movf	prodl,w,c
  5133  001064  0100               	movlb	0	; () banked
  5134  001066  0100               	movlb	0	; () banked
  5135  001068  2560               	addwf	init_queue@qptr& (0+255),w,b
  5136  00106A  6ED9               	movwf	fsr2l,c
  5137  00106C  50F4               	movf	prodh,w,c
  5138  00106E  0100               	movlb	0	; () banked
  5139  001070  0100               	movlb	0	; () banked
  5140  001072  2161               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  5141  001074  6EDA               	movwf	fsr2h,c
  5142  001076  0E00               	movlw	0
  5143  001078  6EDF               	movwf	indf2,c
  5144                           
  5145                           ; BSR set to: 0
  5146  00107A  0100               	movlb	0	; () banked
  5147  00107C  0100               	movlb	0	; () banked
  5148  00107E  2B63               	incf	init_queue@i& (0+255),f,b
  5149                           
  5150                           ; BSR set to: 0
  5151  001080  0E03               	movlw	3
  5152  001082  0100               	movlb	0	; () banked
  5153  001084  0100               	movlb	0	; () banked
  5154  001086  6563               	cpfsgt	init_queue@i& (0+255),b
  5155  001088  D7E8               	goto	l2188
  5156  00108A  0012               	return	
  5157  00108C                     __end_of_init_queue:
  5158                           	opt stack 0
  5159                           tosu	equ	0xFFF
  5160                           tosh	equ	0xFFE
  5161                           tosl	equ	0xFFD
  5162                           pclath	equ	0xFFA
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           postinc0	equ	0xFEE
  5171                           wreg	equ	0xFE8
  5172                           indf1	equ	0xFE7
  5173                           postinc1	equ	0xFE6
  5174                           postdec1	equ	0xFE5
  5175                           fsr1h	equ	0xFE2
  5176                           fsr1l	equ	0xFE1
  5177                           indf2	equ	0xFDF
  5178                           postinc2	equ	0xFDE
  5179                           postdec2	equ	0xFDD
  5180                           fsr2h	equ	0xFDA
  5181                           fsr2l	equ	0xFD9
  5182                           status	equ	0xFD8
  5183                           
  5184 ;; *************** function _UART2_Init *****************
  5185 ;; Defined at:
  5186 ;;		line 38 in file "my_UART.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  data            2    0[BANK0 ] PTR struct .
  5189 ;;		 -> main@uart_data2(28), 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;		None               void
  5194 ;; Registers used:
  5195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5201 ;;      Params:         0       2       0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0       0
  5204 ;;      Totals:         0       2       0       0       0       0       0
  5205 ;;Total ram usage:        2 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    6
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_main
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text31
  5216  00108C                     __ptext31:
  5217                           	opt stack 0
  5218  00108C                     _UART2_Init:
  5219                           	opt stack 24
  5220                           
  5221                           ;my_UART.c: 39: uart_2_data_p = data;
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;incstack = 0
  5225                           ;incstack = 0
  5226  00108C  C060  F0DE         	movff	UART2_Init@data,_uart_2_data_p
  5227  001090  C061  F0DF         	movff	UART2_Init@data+1,_uart_2_data_p+1
  5228                           
  5229                           ;my_UART.c: 41: TRISDbits.TRISD7=1;
  5230  001094  8E95               	bsf	3989,7,c	;volatile
  5231                           
  5232                           ;my_UART.c: 42: TRISDbits.TRISD6=0;
  5233  001096  9C95               	bcf	3989,6,c	;volatile
  5234                           
  5235                           ;my_UART.c: 44: BAUDCON2bits.BRG16 = 0;
  5236  001098  9670               	bcf	3952,3,c	;volatile
  5237                           
  5238                           ;my_UART.c: 45: SPBRG2 = 77;
  5239  00109A  0E4D               	movlw	77
  5240  00109C  6E75               	movwf	3957,c	;volatile
  5241                           
  5242                           ;my_UART.c: 46: TXSTA2bits.BRGH = 1;
  5243  00109E  8472               	bsf	3954,2,c	;volatile
  5244                           
  5245                           ;my_UART.c: 47: TXSTA2bits.SYNC = 0;
  5246  0010A0  9872               	bcf	3954,4,c	;volatile
  5247                           
  5248                           ;my_UART.c: 48: RCSTA2bits.SPEN = 1;
  5249  0010A2  8E71               	bsf	3953,7,c	;volatile
  5250                           
  5251                           ;my_UART.c: 49: TXSTA2bits.TX9 = 0;
  5252  0010A4  9C72               	bcf	3954,6,c	;volatile
  5253                           
  5254                           ;my_UART.c: 50: RCSTA2bits.RX9 = 0;
  5255  0010A6  9C71               	bcf	3953,6,c	;volatile
  5256                           
  5257                           ;my_UART.c: 51: RCSTA2bits.CREN = 1;
  5258  0010A8  8871               	bsf	3953,4,c	;volatile
  5259                           
  5260                           ;my_UART.c: 53: TXSTA2bits.TXEN = 1;
  5261  0010AA  8A72               	bsf	3954,5,c	;volatile
  5262                           
  5263                           ;my_UART.c: 57: uart_2_data_p->buffer_in_len = -1;
  5264  0010AC  0100               	movlb	0	; () banked
  5265  0010AE  EE20 F00C          	lfsr	2,12
  5266  0010B2  0100               	movlb	0	; () banked
  5267  0010B4  51DE               	movf	_uart_2_data_p& (0+255),w,b
  5268  0010B6  26D9               	addwf	fsr2l,f,c
  5269  0010B8  0100               	movlb	0	; () banked
  5270  0010BA  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  5271  0010BC  22DA               	addwfc	fsr2h,f,c
  5272  0010BE  0EFF               	movlw	255
  5273  0010C0  6EDE               	movwf	postinc2,c
  5274  0010C2  0EFF               	movlw	255
  5275  0010C4  6EDD               	movwf	postdec2,c
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;my_UART.c: 58: uart_2_data_p->buffer_in_ind = 0;
  5279  0010C6  0100               	movlb	0	; () banked
  5280  0010C8  EE20 F00A          	lfsr	2,10
  5281  0010CC  0100               	movlb	0	; () banked
  5282  0010CE  51DE               	movf	_uart_2_data_p& (0+255),w,b
  5283  0010D0  26D9               	addwf	fsr2l,f,c
  5284  0010D2  0100               	movlb	0	; () banked
  5285  0010D4  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  5286  0010D6  22DA               	addwfc	fsr2h,f,c
  5287  0010D8  0E00               	movlw	0
  5288  0010DA  6EDE               	movwf	postinc2,c
  5289  0010DC  0E00               	movlw	0
  5290  0010DE  6EDD               	movwf	postdec2,c
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;my_UART.c: 59: uart_2_data_p->buffer_out_ind = 0;
  5294  0010E0  0100               	movlb	0	; () banked
  5295  0010E2  EE20 F018          	lfsr	2,24
  5296  0010E6  0100               	movlb	0	; () banked
  5297  0010E8  51DE               	movf	_uart_2_data_p& (0+255),w,b
  5298  0010EA  26D9               	addwf	fsr2l,f,c
  5299  0010EC  0100               	movlb	0	; () banked
  5300  0010EE  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  5301  0010F0  22DA               	addwfc	fsr2h,f,c
  5302  0010F2  0E00               	movlw	0
  5303  0010F4  6EDE               	movwf	postinc2,c
  5304  0010F6  0E00               	movlw	0
  5305  0010F8  6EDD               	movwf	postdec2,c
  5306                           
  5307                           ; BSR set to: 0
  5308  0010FA  0012               	return	
  5309  0010FC                     __end_of_UART2_Init:
  5310                           	opt stack 0
  5311                           tosu	equ	0xFFF
  5312                           tosh	equ	0xFFE
  5313                           tosl	equ	0xFFD
  5314                           pclath	equ	0xFFA
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           intcon	equ	0xFF2
  5322                           postinc0	equ	0xFEE
  5323                           wreg	equ	0xFE8
  5324                           indf1	equ	0xFE7
  5325                           postinc1	equ	0xFE6
  5326                           postdec1	equ	0xFE5
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           postdec2	equ	0xFDD
  5332                           fsr2h	equ	0xFDA
  5333                           fsr2l	equ	0xFD9
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function _UART1_Init *****************
  5337 ;; Defined at:
  5338 ;;		line 11 in file "my_UART.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  data            2    0[BANK0 ] PTR struct .
  5341 ;;		 -> main@uart_data1(28), 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;		None               void
  5346 ;; Registers used:
  5347 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         0       2       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0
  5356 ;;      Totals:         0       2       0       0       0       0       0
  5357 ;;Total ram usage:        2 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    6
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_main
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text32
  5368  0011C0                     __ptext32:
  5369                           	opt stack 0
  5370  0011C0                     _UART1_Init:
  5371                           	opt stack 24
  5372                           
  5373                           ;my_UART.c: 12: uart_1_data_p = data;
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;incstack = 0
  5377                           ;incstack = 0
  5378  0011C0  C060  F0DC         	movff	UART1_Init@data,_uart_1_data_p
  5379  0011C4  C061  F0DD         	movff	UART1_Init@data+1,_uart_1_data_p+1
  5380                           
  5381                           ;my_UART.c: 14: TRISCbits.TRISC6 = 0;
  5382  0011C8  9C94               	bcf	3988,6,c	;volatile
  5383                           
  5384                           ;my_UART.c: 15: TRISCbits.TRISC7 = 1;
  5385  0011CA  8E94               	bsf	3988,7,c	;volatile
  5386                           
  5387                           ;my_UART.c: 17: BAUDCON1bits.BRG16 = 0;
  5388  0011CC  96B8               	bcf	4024,3,c	;volatile
  5389                           
  5390                           ;my_UART.c: 18: SPBRG1 = 77;
  5391  0011CE  0E4D               	movlw	77
  5392  0011D0  6EAF               	movwf	4015,c	;volatile
  5393                           
  5394                           ;my_UART.c: 19: TXSTA1bits.BRGH = 1;
  5395  0011D2  84AC               	bsf	4012,2,c	;volatile
  5396                           
  5397                           ;my_UART.c: 20: TXSTA1bits.SYNC = 0;
  5398  0011D4  98AC               	bcf	4012,4,c	;volatile
  5399                           
  5400                           ;my_UART.c: 21: RCSTA1bits.SPEN = 1;
  5401  0011D6  8EAB               	bsf	4011,7,c	;volatile
  5402                           
  5403                           ;my_UART.c: 22: TXSTA1bits.TX9 = 0;
  5404  0011D8  9CAC               	bcf	4012,6,c	;volatile
  5405                           
  5406                           ;my_UART.c: 23: RCSTA1bits.RX9 = 0;
  5407  0011DA  9CAB               	bcf	4011,6,c	;volatile
  5408                           
  5409                           ;my_UART.c: 24: RCSTA1bits.CREN = 1;
  5410  0011DC  88AB               	bsf	4011,4,c	;volatile
  5411                           
  5412                           ;my_UART.c: 26: TXSTA1bits.TXEN = 1;
  5413  0011DE  8AAC               	bsf	4012,5,c	;volatile
  5414                           
  5415                           ;my_UART.c: 30: uart_1_data_p->buffer_in_ind = 0;
  5416  0011E0  0100               	movlb	0	; () banked
  5417  0011E2  EE20 F00A          	lfsr	2,10
  5418  0011E6  0100               	movlb	0	; () banked
  5419  0011E8  51DC               	movf	_uart_1_data_p& (0+255),w,b
  5420  0011EA  26D9               	addwf	fsr2l,f,c
  5421  0011EC  0100               	movlb	0	; () banked
  5422  0011EE  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  5423  0011F0  22DA               	addwfc	fsr2h,f,c
  5424  0011F2  0E00               	movlw	0
  5425  0011F4  6EDE               	movwf	postinc2,c
  5426  0011F6  0E00               	movlw	0
  5427  0011F8  6EDD               	movwf	postdec2,c
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;my_UART.c: 31: uart_1_data_p->buffer_out_ind = 0;
  5431  0011FA  0100               	movlb	0	; () banked
  5432  0011FC  EE20 F018          	lfsr	2,24
  5433  001200  0100               	movlb	0	; () banked
  5434  001202  51DC               	movf	_uart_1_data_p& (0+255),w,b
  5435  001204  26D9               	addwf	fsr2l,f,c
  5436  001206  0100               	movlb	0	; () banked
  5437  001208  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  5438  00120A  22DA               	addwfc	fsr2h,f,c
  5439  00120C  0E00               	movlw	0
  5440  00120E  6EDE               	movwf	postinc2,c
  5441  001210  0E00               	movlw	0
  5442  001212  6EDD               	movwf	postdec2,c
  5443                           
  5444                           ; BSR set to: 0
  5445  001214  0012               	return	
  5446  001216                     __end_of_UART1_Init:
  5447                           	opt stack 0
  5448                           tosu	equ	0xFFF
  5449                           tosh	equ	0xFFE
  5450                           tosl	equ	0xFFD
  5451                           pclath	equ	0xFFA
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           intcon	equ	0xFF2
  5459                           postinc0	equ	0xFEE
  5460                           wreg	equ	0xFE8
  5461                           indf1	equ	0xFE7
  5462                           postinc1	equ	0xFE6
  5463                           postdec1	equ	0xFE5
  5464                           fsr1h	equ	0xFE2
  5465                           fsr1l	equ	0xFE1
  5466                           indf2	equ	0xFDF
  5467                           postinc2	equ	0xFDE
  5468                           postdec2	equ	0xFDD
  5469                           fsr2h	equ	0xFDA
  5470                           fsr2l	equ	0xFD9
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function _timer_init *****************
  5474 ;; Defined at:
  5475 ;;		line 6 in file "timer.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  data            2    0[BANK0 ] PTR struct .
  5478 ;;		 -> main@TIMER1(6), 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;		None               void
  5483 ;; Registers used:
  5484 ;;		wreg, status,2
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5490 ;;      Params:         0       2       0       0       0       0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0       0       0
  5493 ;;      Totals:         0       2       0       0       0       0       0
  5494 ;;Total ram usage:        2 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    6
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_main
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text33
  5505  001638                     __ptext33:
  5506                           	opt stack 0
  5507  001638                     _timer_init:
  5508                           	opt stack 24
  5509                           
  5510                           ;timer.c: 7: timer_data_p = data;
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;incstack = 0
  5514                           ;incstack = 0
  5515  001638  C060  F0DA         	movff	timer_init@data,_timer_data_p
  5516  00163C  C061  F0DB         	movff	timer_init@data+1,_timer_data_p+1
  5517                           
  5518                           ;timer.c: 8: PIE1bits.TMR1IE = 1;
  5519  001640  809D               	bsf	3997,0,c	;volatile
  5520                           
  5521                           ;timer.c: 9: T1CONbits.T1CKPS = 0b11;
  5522  001642  0E30               	movlw	48
  5523  001644  12CD               	iorwf	4045,f,c	;volatile
  5524                           
  5525                           ;timer.c: 10: T1CONbits.TMR1CS = 00;
  5526  001646  0E3F               	movlw	-193
  5527  001648  16CD               	andwf	4045,f,c	;volatile
  5528                           
  5529                           ;timer.c: 11: T1GCON = 0;
  5530  00164A  0E00               	movlw	0
  5531  00164C  6ECC               	movwf	4044,c	;volatile
  5532  00164E  0012               	return	
  5533  001650                     __end_of_timer_init:
  5534                           	opt stack 0
  5535                           tosu	equ	0xFFF
  5536                           tosh	equ	0xFFE
  5537                           tosl	equ	0xFFD
  5538                           pclath	equ	0xFFA
  5539                           tblptru	equ	0xFF8
  5540                           tblptrh	equ	0xFF7
  5541                           tblptrl	equ	0xFF6
  5542                           tablat	equ	0xFF5
  5543                           prodh	equ	0xFF4
  5544                           prodl	equ	0xFF3
  5545                           intcon	equ	0xFF2
  5546                           postinc0	equ	0xFEE
  5547                           wreg	equ	0xFE8
  5548                           indf1	equ	0xFE7
  5549                           postinc1	equ	0xFE6
  5550                           postdec1	equ	0xFE5
  5551                           fsr1h	equ	0xFE2
  5552                           fsr1l	equ	0xFE1
  5553                           indf2	equ	0xFDF
  5554                           postinc2	equ	0xFDE
  5555                           postdec2	equ	0xFDD
  5556                           fsr2h	equ	0xFDA
  5557                           fsr2l	equ	0xFD9
  5558                           status	equ	0xFD8
  5559                           
  5560 ;; *************** function _InterruptHandlerLow *****************
  5561 ;; Defined at:
  5562 ;;		line 102 in file "interrupts.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;		None               void
  5569 ;; Registers used:
  5570 ;;		None
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5576 ;;      Params:         0       0       0       0       0       0       0
  5577 ;;      Locals:         0       0       0       0       0       0       0
  5578 ;;      Temps:         17       0       0       0       0       0       0
  5579 ;;      Totals:        17       0       0       0       0       0       0
  5580 ;;Total ram usage:       17 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    5
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		Interrupt level 1
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	intcodelo
  5591  000018                     __pintcodelo:
  5592                           	opt stack 0
  5593  000018                     _InterruptHandlerLow:
  5594                           	opt stack 21
  5595                           
  5596                           ;incstack = 0
  5597  000018  CFD8 F001          	movff	status,??_InterruptHandlerLow
  5598  00001C  CFE8 F002          	movff	wreg,??_InterruptHandlerLow+1
  5599  000020  CFE0 F003          	movff	bsr,??_InterruptHandlerLow+2
  5600  000024  CFFA F004          	movff	pclath,??_InterruptHandlerLow+3
  5601  000028  CFFB F005          	movff	pclatu,??_InterruptHandlerLow+4
  5602  00002C  CFE9 F006          	movff	fsr0l,??_InterruptHandlerLow+5
  5603  000030  CFEA F007          	movff	fsr0h,??_InterruptHandlerLow+6
  5604  000034  CFE1 F008          	movff	fsr1l,??_InterruptHandlerLow+7
  5605  000038  CFE2 F009          	movff	fsr1h,??_InterruptHandlerLow+8
  5606  00003C  CFD9 F00A          	movff	fsr2l,??_InterruptHandlerLow+9
  5607  000040  CFDA F00B          	movff	fsr2h,??_InterruptHandlerLow+10
  5608  000044  CFF3 F00C          	movff	prodl,??_InterruptHandlerLow+11
  5609  000048  CFF4 F00D          	movff	prodh,??_InterruptHandlerLow+12
  5610  00004C  CFF6 F00E          	movff	tblptrl,??_InterruptHandlerLow+13
  5611  000050  CFF7 F00F          	movff	tblptrh,??_InterruptHandlerLow+14
  5612  000054  CFF8 F010          	movff	tblptru,??_InterruptHandlerLow+15
  5613  000058  CFF5 F011          	movff	tablat,??_InterruptHandlerLow+16
  5614  00005C  C011  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5615  000060  C010  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5616  000064  C00F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5617  000068  C00E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5618  00006C  C00D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5619  000070  C00C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5620  000074  C00B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5621  000078  C00A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5622  00007C  C009  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5623  000080  C008  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5624  000084  C007  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5625  000088  C006  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5626  00008C  C005  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5627  000090  C004  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5628  000094  C003  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5629  000098  C002  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5630  00009C  C001  FFD8         	movff	??_InterruptHandlerLow,status
  5631  0000A0  0010               	retfie	
  5632  0000A2                     __end_of_InterruptHandlerLow:
  5633                           	opt stack 0
  5634                           tosu	equ	0xFFF
  5635                           tosh	equ	0xFFE
  5636                           tosl	equ	0xFFD
  5637                           pclatu	equ	0xFFB
  5638                           pclath	equ	0xFFA
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           postinc0	equ	0xFEE
  5647                           fsr0h	equ	0xFEA
  5648                           fsr0l	equ	0xFE9
  5649                           wreg	equ	0xFE8
  5650                           indf1	equ	0xFE7
  5651                           postinc1	equ	0xFE6
  5652                           postdec1	equ	0xFE5
  5653                           fsr1h	equ	0xFE2
  5654                           fsr1l	equ	0xFE1
  5655                           bsr	equ	0xFE0
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           postdec2	equ	0xFDD
  5659                           fsr2h	equ	0xFDA
  5660                           fsr2l	equ	0xFD9
  5661                           status	equ	0xFD8
  5662                           
  5663 ;; *************** function _InterruptHandlerHigh *****************
  5664 ;; Defined at:
  5665 ;;		line 58 in file "interrupts.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  data            1   63[COMRAM] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;		None               void
  5672 ;; Registers used:
  5673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5679 ;;      Params:         0       0       0       0       0       0       0
  5680 ;;      Locals:         2       0       0       0       0       0       0
  5681 ;;      Temps:         16       0       0       0       0       0       0
  5682 ;;      Totals:        18       0       0       0       0       0       0
  5683 ;;Total ram usage:       18 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    4
  5686 ;; This function calls:
  5687 ;;		_UART1_TX_Int_handle
  5688 ;;		_UART1_RX_Int_handle
  5689 ;;		_UART2_TX_Int_handle
  5690 ;;		_UART2_RX_Int_handle
  5691 ;;		_ToMainLow_sendmsg
  5692 ;; This function is called by:
  5693 ;;		Interrupt level 2
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	intcode
  5698  000008                     __pintcode:
  5699                           	opt stack 0
  5700  000008                     _InterruptHandlerHigh:
  5701                           	opt stack 21
  5702                           
  5703                           ;incstack = 0
  5704  000008  CFFA F031          	movff	pclath,??_InterruptHandlerHigh+2
  5705  00000C  CFFB F032          	movff	pclatu,??_InterruptHandlerHigh+3
  5706  000010  EFA2  F002         	goto	int_func
  5707                           tosu	equ	0xFFF
  5708                           tosh	equ	0xFFE
  5709                           tosl	equ	0xFFD
  5710                           pclatu	equ	0xFFB
  5711                           pclath	equ	0xFFA
  5712                           tblptru	equ	0xFF8
  5713                           tblptrh	equ	0xFF7
  5714                           tblptrl	equ	0xFF6
  5715                           tablat	equ	0xFF5
  5716                           prodh	equ	0xFF4
  5717                           prodl	equ	0xFF3
  5718                           intcon	equ	0xFF2
  5719                           postinc0	equ	0xFEE
  5720                           fsr0h	equ	0xFEA
  5721                           fsr0l	equ	0xFE9
  5722                           wreg	equ	0xFE8
  5723                           indf1	equ	0xFE7
  5724                           postinc1	equ	0xFE6
  5725                           postdec1	equ	0xFE5
  5726                           fsr1h	equ	0xFE2
  5727                           fsr1l	equ	0xFE1
  5728                           bsr	equ	0xFE0
  5729                           indf2	equ	0xFDF
  5730                           postinc2	equ	0xFDE
  5731                           postdec2	equ	0xFDD
  5732                           fsr2h	equ	0xFDA
  5733                           fsr2l	equ	0xFD9
  5734                           status	equ	0xFD8
  5735                           
  5736                           	psect	intcode_body
  5737  000544                     __pintcode_body:
  5738                           	opt stack 21
  5739  000544                     int_func:
  5740                           	opt stack 21
  5741  000544  CFE9 F033          	movff	fsr0l,??_InterruptHandlerHigh+4
  5742  000548  CFEA F034          	movff	fsr0h,??_InterruptHandlerHigh+5
  5743  00054C  CFE1 F035          	movff	fsr1l,??_InterruptHandlerHigh+6
  5744  000550  CFE2 F036          	movff	fsr1h,??_InterruptHandlerHigh+7
  5745  000554  CFD9 F037          	movff	fsr2l,??_InterruptHandlerHigh+8
  5746  000558  CFDA F038          	movff	fsr2h,??_InterruptHandlerHigh+9
  5747  00055C  CFF3 F039          	movff	prodl,??_InterruptHandlerHigh+10
  5748  000560  CFF4 F03A          	movff	prodh,??_InterruptHandlerHigh+11
  5749  000564  CFF6 F03B          	movff	tblptrl,??_InterruptHandlerHigh+12
  5750  000568  CFF7 F03C          	movff	tblptrh,??_InterruptHandlerHigh+13
  5751  00056C  CFF8 F03D          	movff	tblptru,??_InterruptHandlerHigh+14
  5752  000570  CFF5 F03E          	movff	tablat,??_InterruptHandlerHigh+15
  5753  000574                     
  5754                           ;interrupts.c: 59: char data = 0;
  5755  000574  6E2F               	movwf	??_InterruptHandlerHigh& (0+255),c
  5756  000576  0E00               	movlw	0
  5757  000578  6E40               	movwf	InterruptHandlerHigh@data,c
  5758  00057A  502F               	movf	??_InterruptHandlerHigh& (0+255),w,c
  5759  00057C                     
  5760                           ;interrupts.c: 62: if(PIE1bits.TX1IE && PIR1bits.TX1IF) {
  5761  00057C  A89D               	btfss	3997,4,c	;volatile
  5762  00057E  D001               	goto	i2u83_41
  5763  000580  D001               	goto	i2u83_40
  5764  000582                     i2u83_41:
  5765  000582  D009               	goto	i2l229
  5766  000584                     i2u83_40:
  5767  000584  A89E               	btfss	3998,4,c	;volatile
  5768  000586  D001               	goto	i2u84_41
  5769  000588  D001               	goto	i2u84_40
  5770  00058A                     i2u84_41:
  5771  00058A  D005               	goto	i2l229
  5772  00058C                     i2u84_40:
  5773  00058C                     
  5774                           ;interrupts.c: 63: LATAbits.LATA2 = 1;
  5775  00058C  8489               	bsf	3977,2,c	;volatile
  5776  00058E                     
  5777                           ;interrupts.c: 64: UART1_TX_Int_handle();
  5778  00058E  ECCA  F006         	call	_UART1_TX_Int_handle	;wreg free
  5779  000592                     
  5780                           ;interrupts.c: 65: LATAbits.LATA2 = 0;
  5781  000592  9489               	bcf	3977,2,c	;volatile
  5782                           
  5783                           ;interrupts.c: 66: }
  5784  000594  D056               	goto	i2l240
  5785  000596                     i2l229:
  5786                           
  5787                           ;interrupts.c: 67: else if(PIE1bits.RC1IE && PIR1bits.RC1IF) {
  5788  000596  AA9D               	btfss	3997,5,c	;volatile
  5789  000598  D001               	goto	i2u85_41
  5790  00059A  D001               	goto	i2u85_40
  5791  00059C                     i2u85_41:
  5792  00059C  D009               	goto	i2l231
  5793  00059E                     i2u85_40:
  5794  00059E  AA9E               	btfss	3998,5,c	;volatile
  5795  0005A0  D001               	goto	i2u86_41
  5796  0005A2  D001               	goto	i2u86_40
  5797  0005A4                     i2u86_41:
  5798  0005A4  D005               	goto	i2l231
  5799  0005A6                     i2u86_40:
  5800  0005A6                     
  5801                           ;interrupts.c: 68: LATAbits.LATA3 = 1;
  5802  0005A6  8689               	bsf	3977,3,c	;volatile
  5803  0005A8                     
  5804                           ;interrupts.c: 69: UART1_RX_Int_handle();
  5805  0005A8  ECFA  F00A         	call	_UART1_RX_Int_handle	;wreg free
  5806  0005AC                     
  5807                           ;interrupts.c: 70: LATAbits.LATA3 = 0;
  5808  0005AC  9689               	bcf	3977,3,c	;volatile
  5809                           
  5810                           ;interrupts.c: 71: }
  5811  0005AE  D049               	goto	i2l240
  5812  0005B0                     i2l231:
  5813                           
  5814                           ;interrupts.c: 72: else if(PIE3bits.TX2IE && PIR3bits.TX2IF) {
  5815  0005B0  A8A3               	btfss	4003,4,c	;volatile
  5816  0005B2  D001               	goto	i2u87_41
  5817  0005B4  D001               	goto	i2u87_40
  5818  0005B6                     i2u87_41:
  5819  0005B6  D009               	goto	i2l233
  5820  0005B8                     i2u87_40:
  5821  0005B8  A8A4               	btfss	4004,4,c	;volatile
  5822  0005BA  D001               	goto	i2u88_41
  5823  0005BC  D001               	goto	i2u88_40
  5824  0005BE                     i2u88_41:
  5825  0005BE  D005               	goto	i2l233
  5826  0005C0                     i2u88_40:
  5827  0005C0                     
  5828                           ;interrupts.c: 73: LATAbits.LATA4 = 1;
  5829  0005C0  8889               	bsf	3977,4,c	;volatile
  5830  0005C2                     
  5831                           ;interrupts.c: 74: UART2_TX_Int_handle();
  5832  0005C2  EC20  F006         	call	_UART2_TX_Int_handle	;wreg free
  5833  0005C6                     
  5834                           ;interrupts.c: 75: LATAbits.LATA4 = 0;
  5835  0005C6  9889               	bcf	3977,4,c	;volatile
  5836                           
  5837                           ;interrupts.c: 76: }
  5838  0005C8  D03C               	goto	i2l240
  5839  0005CA                     i2l233:
  5840                           
  5841                           ;interrupts.c: 77: else if(PIE3bits.RC2IE && PIR3bits.RC2IF) {
  5842  0005CA  AAA3               	btfss	4003,5,c	;volatile
  5843  0005CC  D001               	goto	i2u89_41
  5844  0005CE  D001               	goto	i2u89_40
  5845  0005D0                     i2u89_41:
  5846  0005D0  D009               	goto	i2l2122
  5847  0005D2                     i2u89_40:
  5848  0005D2  AAA4               	btfss	4004,5,c	;volatile
  5849  0005D4  D001               	goto	i2u90_41
  5850  0005D6  D001               	goto	i2u90_40
  5851  0005D8                     i2u90_41:
  5852  0005D8  D005               	goto	i2l2122
  5853  0005DA                     i2u90_40:
  5854  0005DA                     
  5855                           ;interrupts.c: 78: LATAbits.LATA5 = 1;
  5856  0005DA  8A89               	bsf	3977,5,c	;volatile
  5857  0005DC                     
  5858                           ;interrupts.c: 79: UART2_RX_Int_handle();
  5859  0005DC  ECE4  F004         	call	_UART2_RX_Int_handle	;wreg free
  5860  0005E0                     
  5861                           ;interrupts.c: 80: LATAbits.LATA5 = 0;
  5862  0005E0  9A89               	bcf	3977,5,c	;volatile
  5863                           
  5864                           ;interrupts.c: 81: }
  5865  0005E2  D02F               	goto	i2l240
  5866  0005E4                     i2l2122:
  5867                           
  5868                           ;interrupts.c: 82: else if(PIE1bits.TMR1IE=1 && PIR1bits.TMR1IF) {
  5869  0005E4  6E2F               	movwf	??_InterruptHandlerHigh& (0+255),c
  5870  0005E6  0E00               	movlw	0
  5871  0005E8  6E3F               	movwf	_InterruptHandlerHigh$1406,c
  5872  0005EA  502F               	movf	??_InterruptHandlerHigh& (0+255),w,c
  5873  0005EC  A09E               	btfss	3998,0,c	;volatile
  5874  0005EE  D001               	goto	i2u91_41
  5875  0005F0  D001               	goto	i2u91_40
  5876  0005F2                     i2u91_41:
  5877  0005F2  D005               	goto	i2l2128
  5878  0005F4                     i2u91_40:
  5879  0005F4  6E2F               	movwf	??_InterruptHandlerHigh& (0+255),c
  5880  0005F6  0E01               	movlw	1
  5881  0005F8  6E3F               	movwf	_InterruptHandlerHigh$1406,c
  5882  0005FA  502F               	movf	??_InterruptHandlerHigh& (0+255),w,c
  5883  0005FC  D000               	goto	i2l2128
  5884  0005FE                     i2l2128:
  5885  0005FE  509D               	movf	3997,w,c	;volatile
  5886  000600  183F               	xorwf	_InterruptHandlerHigh$1406,w,c
  5887  000602  0BFE               	andlw	-2
  5888  000604  183F               	xorwf	_InterruptHandlerHigh$1406,w,c
  5889  000606  6E9D               	movwf	3997,c	;volatile
  5890  000608  509D               	movf	157,w,c	;volatile
  5891  00060A  0B01               	andlw	1
  5892  00060C  0900               	iorlw	0
  5893  00060E  B4D8               	btfsc	status,2,c
  5894  000610  D001               	goto	i2u92_41
  5895  000612  D001               	goto	i2u92_40
  5896  000614                     i2u92_41:
  5897  000614  D016               	goto	i2l240
  5898  000616                     i2u92_40:
  5899  000616                     
  5900                           ;interrupts.c: 83: LATAbits.LATA6 = 1;
  5901  000616  8C89               	bsf	3977,6,c	;volatile
  5902  000618                     
  5903                           ;interrupts.c: 84: ToMainLow_sendmsg(1,10, &data);
  5904  000618  6E2F               	movwf	??_InterruptHandlerHigh& (0+255),c
  5905  00061A  0E01               	movlw	1
  5906  00061C  6E28               	movwf	?_ToMainLow_sendmsg,c
  5907  00061E  502F               	movf	??_InterruptHandlerHigh& (0+255),w,c
  5908  000620  6E30               	movwf	(??_InterruptHandlerHigh+1)& (0+255),c
  5909  000622  0E0A               	movlw	10
  5910  000624  6E29               	movwf	?_ToMainLow_sendmsg+1,c
  5911  000626  5030               	movf	(??_InterruptHandlerHigh+1)& (0+255),w,c
  5912  000628  0E00               	movlw	high InterruptHandlerHigh@data
  5913  00062A  6E2B               	movwf	?_ToMainLow_sendmsg+3,c
  5914  00062C  0E40               	movlw	low InterruptHandlerHigh@data
  5915  00062E  6E2A               	movwf	?_ToMainLow_sendmsg+2,c
  5916  000630  ECE9  F00A         	call	_ToMainLow_sendmsg	;wreg free
  5917  000634                     
  5918                           ;interrupts.c: 85: PIR1bits.TMR1IF=0;
  5919  000634  909E               	bcf	3998,0,c	;volatile
  5920  000636                     
  5921                           ;interrupts.c: 86: LATAbits.LATA6 = 0;
  5922  000636  9C89               	bcf	3977,6,c	;volatile
  5923  000638  D004               	goto	i2l240
  5924  00063A  D003               	goto	i2l240
  5925  00063C  D002               	goto	i2l240
  5926  00063E  D001               	goto	i2l240
  5927  000640  D000               	goto	i2l240
  5928  000642                     i2l240:
  5929  000642  C03E  FFF5         	movff	??_InterruptHandlerHigh+15,tablat
  5930  000646  C03D  FFF8         	movff	??_InterruptHandlerHigh+14,tblptru
  5931  00064A  C03C  FFF7         	movff	??_InterruptHandlerHigh+13,tblptrh
  5932  00064E  C03B  FFF6         	movff	??_InterruptHandlerHigh+12,tblptrl
  5933  000652  C03A  FFF4         	movff	??_InterruptHandlerHigh+11,prodh
  5934  000656  C039  FFF3         	movff	??_InterruptHandlerHigh+10,prodl
  5935  00065A  C038  FFDA         	movff	??_InterruptHandlerHigh+9,fsr2h
  5936  00065E  C037  FFD9         	movff	??_InterruptHandlerHigh+8,fsr2l
  5937  000662  C036  FFE2         	movff	??_InterruptHandlerHigh+7,fsr1h
  5938  000666  C035  FFE1         	movff	??_InterruptHandlerHigh+6,fsr1l
  5939  00066A  C034  FFEA         	movff	??_InterruptHandlerHigh+5,fsr0h
  5940  00066E  C033  FFE9         	movff	??_InterruptHandlerHigh+4,fsr0l
  5941  000672  C032  FFFB         	movff	??_InterruptHandlerHigh+3,pclatu
  5942  000676  C031  FFFA         	movff	??_InterruptHandlerHigh+2,pclath
  5943  00067A  0011               	retfie		f
  5944  00067C                     __end_of_InterruptHandlerHigh:
  5945                           	opt stack 0
  5946                           tosu	equ	0xFFF
  5947                           tosh	equ	0xFFE
  5948                           tosl	equ	0xFFD
  5949                           pclatu	equ	0xFFB
  5950                           pclath	equ	0xFFA
  5951                           tblptru	equ	0xFF8
  5952                           tblptrh	equ	0xFF7
  5953                           tblptrl	equ	0xFF6
  5954                           tablat	equ	0xFF5
  5955                           prodh	equ	0xFF4
  5956                           prodl	equ	0xFF3
  5957                           intcon	equ	0xFF2
  5958                           postinc0	equ	0xFEE
  5959                           fsr0h	equ	0xFEA
  5960                           fsr0l	equ	0xFE9
  5961                           wreg	equ	0xFE8
  5962                           indf1	equ	0xFE7
  5963                           postinc1	equ	0xFE6
  5964                           postdec1	equ	0xFE5
  5965                           fsr1h	equ	0xFE2
  5966                           fsr1l	equ	0xFE1
  5967                           bsr	equ	0xFE0
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function _ToMainLow_sendmsg *****************
  5976 ;; Defined at:
  5977 ;;		line 103 in file "messages.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  length          1   39[COMRAM] unsigned char 
  5980 ;;  msgtype         1   40[COMRAM] unsigned char 
  5981 ;;  data            2   41[COMRAM] PTR void 
  5982 ;;		 -> InterruptHandlerHigh@data(1), 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      char 
  5987 ;; Registers used:
  5988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5994 ;;      Params:         4       0       0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0
  5997 ;;      Totals:         4       0       0       0       0       0       0
  5998 ;;Total ram usage:        4 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    2
  6001 ;; This function calls:
  6002 ;;		_send_msg
  6003 ;; This function is called by:
  6004 ;;		_InterruptHandlerHigh
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text36
  6009  0015D2                     __ptext36:
  6010                           	opt stack 0
  6011  0015D2                     _ToMainLow_sendmsg:
  6012                           	opt stack 22
  6013                           
  6014                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6015                           ;	Return value of _ToMainLow_sendmsg is never used
  6016                           
  6017                           ;incstack = 0
  6018                           ;incstack = 0
  6019  0015D2  0101               	movlb	1	; () banked
  6020  0015D4  0E01               	movlw	high _ToMainLow_MQ
  6021  0015D6  6E1D               	movwf	?_send_msg+1,c
  6022  0015D8  0101               	movlb	1	; () banked
  6023  0015DA  0EA2               	movlw	low _ToMainLow_MQ
  6024  0015DC  6E1C               	movwf	?_send_msg,c
  6025  0015DE  C028  F01E         	movff	ToMainLow_sendmsg@length,?_send_msg+2
  6026  0015E2  C029  F01F         	movff	ToMainLow_sendmsg@msgtype,?_send_msg+3
  6027  0015E6  C02A  F020         	movff	ToMainLow_sendmsg@data,?_send_msg+4
  6028  0015EA  C02B  F021         	movff	ToMainLow_sendmsg@data+1,?_send_msg+5
  6029  0015EE  EC75  F006         	call	_send_msg	;wreg free
  6030  0015F2  0012               	return	
  6031  0015F4                     __end_of_ToMainLow_sendmsg:
  6032                           	opt stack 0
  6033                           tosu	equ	0xFFF
  6034                           tosh	equ	0xFFE
  6035                           tosl	equ	0xFFD
  6036                           pclatu	equ	0xFFB
  6037                           pclath	equ	0xFFA
  6038                           tblptru	equ	0xFF8
  6039                           tblptrh	equ	0xFF7
  6040                           tblptrl	equ	0xFF6
  6041                           tablat	equ	0xFF5
  6042                           prodh	equ	0xFF4
  6043                           prodl	equ	0xFF3
  6044                           intcon	equ	0xFF2
  6045                           postinc0	equ	0xFEE
  6046                           fsr0h	equ	0xFEA
  6047                           fsr0l	equ	0xFE9
  6048                           wreg	equ	0xFE8
  6049                           indf1	equ	0xFE7
  6050                           postinc1	equ	0xFE6
  6051                           postdec1	equ	0xFE5
  6052                           fsr1h	equ	0xFE2
  6053                           fsr1l	equ	0xFE1
  6054                           bsr	equ	0xFE0
  6055                           indf2	equ	0xFDF
  6056                           postinc2	equ	0xFDE
  6057                           postdec2	equ	0xFDD
  6058                           fsr2h	equ	0xFDA
  6059                           fsr2l	equ	0xFD9
  6060                           status	equ	0xFD8
  6061                           
  6062 ;; *************** function _UART2_RX_Int_handle *****************
  6063 ;; Defined at:
  6064 ;;		line 140 in file "my_UART.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;		None
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;		None
  6069 ;; Return value:  Size  Location     Type
  6070 ;;		None               void
  6071 ;; Registers used:
  6072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6078 ;;      Params:         0       0       0       0       0       0       0
  6079 ;;      Locals:         0       0       0       0       0       0       0
  6080 ;;      Temps:          2       0       0       0       0       0       0
  6081 ;;      Totals:         2       0       0       0       0       0       0
  6082 ;;Total ram usage:        2 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    3
  6085 ;; This function calls:
  6086 ;;		_ToMainHigh_sendmsg
  6087 ;; This function is called by:
  6088 ;;		_InterruptHandlerHigh
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text37
  6093  0009C8                     __ptext37:
  6094                           	opt stack 0
  6095  0009C8                     _UART2_RX_Int_handle:
  6096                           	opt stack 21
  6097                           
  6098                           ;my_UART.c: 141: uart_2_data_p->buffer_in[uart_2_data_p->buffer_in_ind] = RCREG2;
  6099                           
  6100                           ;incstack = 0
  6101                           ;incstack = 0
  6102  0009C8  0100               	movlb	0	; () banked
  6103  0009CA  EE20 F00A          	lfsr	2,10
  6104  0009CE  0100               	movlb	0	; () banked
  6105  0009D0  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6106  0009D2  26D9               	addwf	fsr2l,f,c
  6107  0009D4  0100               	movlb	0	; () banked
  6108  0009D6  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6109  0009D8  22DA               	addwfc	fsr2h,f,c
  6110  0009DA  CFDE F02C          	movff	postinc2,??_UART2_RX_Int_handle
  6111  0009DE  CFDD F02D          	movff	postdec2,??_UART2_RX_Int_handle+1
  6112  0009E2  502C               	movf	??_UART2_RX_Int_handle,w,c
  6113  0009E4  0100               	movlb	0	; () banked
  6114  0009E6  0100               	movlb	0	; () banked
  6115  0009E8  25DE               	addwf	_uart_2_data_p& (0+255),w,b
  6116  0009EA  6ED9               	movwf	fsr2l,c
  6117  0009EC  502D               	movf	??_UART2_RX_Int_handle+1,w,c
  6118  0009EE  0100               	movlb	0	; () banked
  6119  0009F0  0100               	movlb	0	; () banked
  6120  0009F2  21DF               	addwfc	(_uart_2_data_p+1)& (0+255),w,b
  6121  0009F4  6EDA               	movwf	fsr2h,c
  6122  0009F6  CF74 FFDF          	movff	3956,indf2	;volatile
  6123                           
  6124                           ;my_UART.c: 142: uart_2_data_p->buffer_in_ind++;
  6125  0009FA  0100               	movlb	0	; () banked
  6126  0009FC  EE20 F00A          	lfsr	2,10
  6127  000A00  0100               	movlb	0	; () banked
  6128  000A02  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6129  000A04  26D9               	addwf	fsr2l,f,c
  6130  000A06  0100               	movlb	0	; () banked
  6131  000A08  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6132  000A0A  22DA               	addwfc	fsr2h,f,c
  6133  000A0C  2ADE               	incf	postinc2,f,c
  6134  000A0E  0E00               	movlw	0
  6135  000A10  22DD               	addwfc	postdec2,f,c
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;my_UART.c: 144: if(uart_2_data_p->buffer_in_len == uart_2_data_p->buffer_in_ind){
  6139  000A12  0100               	movlb	0	; () banked
  6140  000A14  EE20 F00A          	lfsr	2,10
  6141  000A18  0100               	movlb	0	; () banked
  6142  000A1A  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6143  000A1C  26D9               	addwf	fsr2l,f,c
  6144  000A1E  0100               	movlb	0	; () banked
  6145  000A20  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6146  000A22  22DA               	addwfc	fsr2h,f,c
  6147  000A24  0100               	movlb	0	; () banked
  6148  000A26  EE10 F00C          	lfsr	1,12
  6149  000A2A  0100               	movlb	0	; () banked
  6150  000A2C  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6151  000A2E  26E1               	addwf	fsr1l,f,c
  6152  000A30  0100               	movlb	0	; () banked
  6153  000A32  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6154  000A34  22E2               	addwfc	fsr1h,f,c
  6155  000A36  52E6               	movf	postinc1,f,c
  6156  000A38  52DE               	movf	postinc2,f,c
  6157  000A3A  50DD               	movf	postdec2,w,c
  6158  000A3C  18E5               	xorwf	postdec1,w,c
  6159  000A3E  CFDF FFE8          	movff	indf2,wreg
  6160  000A42  B4D8               	btfsc	status,2,c
  6161  000A44  18E7               	xorwf	indf1,w,c
  6162  000A46  A4D8               	btfss	status,2,c
  6163  000A48  0012               	return	
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;my_UART.c: 145: PIE3bits.RC2IE=0;
  6167  000A4A  9AA3               	bcf	4003,5,c	;volatile
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;my_UART.c: 146: uart_2_data_p->buffer_in_ind=0;
  6171  000A4C  0100               	movlb	0	; () banked
  6172  000A4E  EE20 F00A          	lfsr	2,10
  6173  000A52  0100               	movlb	0	; () banked
  6174  000A54  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6175  000A56  26D9               	addwf	fsr2l,f,c
  6176  000A58  0100               	movlb	0	; () banked
  6177  000A5A  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6178  000A5C  22DA               	addwfc	fsr2h,f,c
  6179  000A5E  0E00               	movlw	0
  6180  000A60  6EDE               	movwf	postinc2,c
  6181  000A62  0E00               	movlw	0
  6182  000A64  6EDD               	movwf	postdec2,c
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;my_UART.c: 147: ToMainHigh_sendmsg(uart_2_data_p->buffer_in_len, 51, uart_2_data_p->buf
      +                          fer_in);
  6186  000A66  0100               	movlb	0	; () banked
  6187  000A68  EE20 F00C          	lfsr	2,12
  6188  000A6C  0100               	movlb	0	; () banked
  6189  000A6E  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6190  000A70  26D9               	addwf	fsr2l,f,c
  6191  000A72  0100               	movlb	0	; () banked
  6192  000A74  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6193  000A76  22DA               	addwfc	fsr2h,f,c
  6194  000A78  50DF               	movf	indf2,w,c
  6195  000A7A  6E28               	movwf	?_ToMainHigh_sendmsg,c
  6196  000A7C  6E2C               	movwf	??_UART2_RX_Int_handle& (0+255),c
  6197  000A7E  0E33               	movlw	51
  6198  000A80  6E29               	movwf	?_ToMainHigh_sendmsg+1,c
  6199  000A82  502C               	movf	??_UART2_RX_Int_handle& (0+255),w,c
  6200  000A84  C0DE  F02A         	movff	_uart_2_data_p,?_ToMainHigh_sendmsg+2
  6201  000A88  C0DF  F02B         	movff	_uart_2_data_p+1,?_ToMainHigh_sendmsg+3
  6202  000A8C  EC0B  F00B         	call	_ToMainHigh_sendmsg	;wreg free
  6203                           
  6204                           ;my_UART.c: 148: uart_2_data_p->buffer_in_len = -1;
  6205  000A90  0100               	movlb	0	; () banked
  6206  000A92  EE20 F00C          	lfsr	2,12
  6207  000A96  0100               	movlb	0	; () banked
  6208  000A98  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6209  000A9A  26D9               	addwf	fsr2l,f,c
  6210  000A9C  0100               	movlb	0	; () banked
  6211  000A9E  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6212  000AA0  22DA               	addwfc	fsr2h,f,c
  6213  000AA2  0EFF               	movlw	255
  6214  000AA4  6EDE               	movwf	postinc2,c
  6215  000AA6  0EFF               	movlw	255
  6216  000AA8  6EDD               	movwf	postdec2,c
  6217  000AAA  0012               	return	
  6218  000AAC                     __end_of_UART2_RX_Int_handle:
  6219                           	opt stack 0
  6220                           tosu	equ	0xFFF
  6221                           tosh	equ	0xFFE
  6222                           tosl	equ	0xFFD
  6223                           pclatu	equ	0xFFB
  6224                           pclath	equ	0xFFA
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           prodh	equ	0xFF4
  6230                           prodl	equ	0xFF3
  6231                           intcon	equ	0xFF2
  6232                           postinc0	equ	0xFEE
  6233                           fsr0h	equ	0xFEA
  6234                           fsr0l	equ	0xFE9
  6235                           wreg	equ	0xFE8
  6236                           indf1	equ	0xFE7
  6237                           postinc1	equ	0xFE6
  6238                           postdec1	equ	0xFE5
  6239                           fsr1h	equ	0xFE2
  6240                           fsr1l	equ	0xFE1
  6241                           bsr	equ	0xFE0
  6242                           indf2	equ	0xFDF
  6243                           postinc2	equ	0xFDE
  6244                           postdec2	equ	0xFDD
  6245                           fsr2h	equ	0xFDA
  6246                           fsr2l	equ	0xFD9
  6247                           status	equ	0xFD8
  6248                           
  6249 ;; *************** function _UART2_TX_Int_handle *****************
  6250 ;; Defined at:
  6251 ;;		line 126 in file "my_UART.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;		None               void
  6258 ;; Registers used:
  6259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6265 ;;      Params:         0       0       0       0       0       0       0
  6266 ;;      Locals:         0       0       0       0       0       0       0
  6267 ;;      Temps:          2       0       0       0       0       0       0
  6268 ;;      Totals:         2       0       0       0       0       0       0
  6269 ;;Total ram usage:        2 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_InterruptHandlerHigh
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text38
  6279  000C40                     __ptext38:
  6280                           	opt stack 0
  6281  000C40                     _UART2_TX_Int_handle:
  6282                           	opt stack 24
  6283                           
  6284                           ;my_UART.c: 127: if(uart_2_data_p->buffer_out_len == uart_2_data_p->buffer_out_ind){
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;incstack = 0
  6288                           ;incstack = 0
  6289  000C40  0100               	movlb	0	; () banked
  6290  000C42  EE20 F018          	lfsr	2,24
  6291  000C46  0100               	movlb	0	; () banked
  6292  000C48  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6293  000C4A  26D9               	addwf	fsr2l,f,c
  6294  000C4C  0100               	movlb	0	; () banked
  6295  000C4E  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6296  000C50  22DA               	addwfc	fsr2h,f,c
  6297  000C52  0100               	movlb	0	; () banked
  6298  000C54  EE10 F01A          	lfsr	1,26
  6299  000C58  0100               	movlb	0	; () banked
  6300  000C5A  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6301  000C5C  26E1               	addwf	fsr1l,f,c
  6302  000C5E  0100               	movlb	0	; () banked
  6303  000C60  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6304  000C62  22E2               	addwfc	fsr1h,f,c
  6305  000C64  52E6               	movf	postinc1,f,c
  6306  000C66  52DE               	movf	postinc2,f,c
  6307  000C68  50DD               	movf	postdec2,w,c
  6308  000C6A  18E5               	xorwf	postdec1,w,c
  6309  000C6C  CFDF FFE8          	movff	indf2,wreg
  6310  000C70  B4D8               	btfsc	status,2,c
  6311  000C72  18E7               	xorwf	indf1,w,c
  6312  000C74  A4D8               	btfss	status,2,c
  6313  000C76  D00F               	goto	i2l2034
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;my_UART.c: 128: PIE3bits.TX2IE=0;
  6317  000C78  98A3               	bcf	4003,4,c	;volatile
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;my_UART.c: 129: uart_2_data_p->buffer_out_ind=0;
  6321  000C7A  0100               	movlb	0	; () banked
  6322  000C7C  EE20 F018          	lfsr	2,24
  6323  000C80  0100               	movlb	0	; () banked
  6324  000C82  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6325  000C84  26D9               	addwf	fsr2l,f,c
  6326  000C86  0100               	movlb	0	; () banked
  6327  000C88  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6328  000C8A  22DA               	addwfc	fsr2h,f,c
  6329  000C8C  0E00               	movlw	0
  6330  000C8E  6EDE               	movwf	postinc2,c
  6331  000C90  0E00               	movlw	0
  6332  000C92  6EDD               	movwf	postdec2,c
  6333                           
  6334                           ;my_UART.c: 130: }
  6335  000C94  0012               	return	
  6336  000C96                     i2l2034:
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;my_UART.c: 132: else {
  6340                           ;my_UART.c: 133: TXREG2 = uart_2_data_p->buffer_out[uart_2_data_p->buffer_out_ind];
  6341  000C96  0100               	movlb	0	; () banked
  6342  000C98  EE20 F018          	lfsr	2,24
  6343  000C9C  0100               	movlb	0	; () banked
  6344  000C9E  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6345  000CA0  26D9               	addwf	fsr2l,f,c
  6346  000CA2  0100               	movlb	0	; () banked
  6347  000CA4  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6348  000CA6  22DA               	addwfc	fsr2h,f,c
  6349  000CA8  CFDE F012          	movff	postinc2,??_UART2_TX_Int_handle
  6350  000CAC  CFDD F013          	movff	postdec2,??_UART2_TX_Int_handle+1
  6351  000CB0  0E0E               	movlw	14
  6352  000CB2  2612               	addwf	??_UART2_TX_Int_handle,f,c
  6353  000CB4  0E00               	movlw	0
  6354  000CB6  2213               	addwfc	??_UART2_TX_Int_handle+1,f,c
  6355  000CB8  5012               	movf	??_UART2_TX_Int_handle,w,c
  6356  000CBA  0100               	movlb	0	; () banked
  6357  000CBC  0100               	movlb	0	; () banked
  6358  000CBE  25DE               	addwf	_uart_2_data_p& (0+255),w,b
  6359  000CC0  6ED9               	movwf	fsr2l,c
  6360  000CC2  5013               	movf	??_UART2_TX_Int_handle+1,w,c
  6361  000CC4  0100               	movlb	0	; () banked
  6362  000CC6  0100               	movlb	0	; () banked
  6363  000CC8  21DF               	addwfc	(_uart_2_data_p+1)& (0+255),w,b
  6364  000CCA  6EDA               	movwf	fsr2h,c
  6365  000CCC  50DF               	movf	indf2,w,c
  6366  000CCE  6E73               	movwf	3955,c	;volatile
  6367                           
  6368                           ;my_UART.c: 134: uart_2_data_p->buffer_out_ind++;
  6369  000CD0  0100               	movlb	0	; () banked
  6370  000CD2  EE20 F018          	lfsr	2,24
  6371  000CD6  0100               	movlb	0	; () banked
  6372  000CD8  51DE               	movf	_uart_2_data_p& (0+255),w,b
  6373  000CDA  26D9               	addwf	fsr2l,f,c
  6374  000CDC  0100               	movlb	0	; () banked
  6375  000CDE  51DF               	movf	(_uart_2_data_p+1)& (0+255),w,b
  6376  000CE0  22DA               	addwfc	fsr2h,f,c
  6377  000CE2  2ADE               	incf	postinc2,f,c
  6378  000CE4  0E00               	movlw	0
  6379  000CE6  22DD               	addwfc	postdec2,f,c
  6380  000CE8  0012               	return	
  6381  000CEA                     __end_of_UART2_TX_Int_handle:
  6382                           	opt stack 0
  6383                           tosu	equ	0xFFF
  6384                           tosh	equ	0xFFE
  6385                           tosl	equ	0xFFD
  6386                           pclatu	equ	0xFFB
  6387                           pclath	equ	0xFFA
  6388                           tblptru	equ	0xFF8
  6389                           tblptrh	equ	0xFF7
  6390                           tblptrl	equ	0xFF6
  6391                           tablat	equ	0xFF5
  6392                           prodh	equ	0xFF4
  6393                           prodl	equ	0xFF3
  6394                           intcon	equ	0xFF2
  6395                           postinc0	equ	0xFEE
  6396                           fsr0h	equ	0xFEA
  6397                           fsr0l	equ	0xFE9
  6398                           wreg	equ	0xFE8
  6399                           indf1	equ	0xFE7
  6400                           postinc1	equ	0xFE6
  6401                           postdec1	equ	0xFE5
  6402                           fsr1h	equ	0xFE2
  6403                           fsr1l	equ	0xFE1
  6404                           bsr	equ	0xFE0
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           fsr2h	equ	0xFDA
  6409                           fsr2l	equ	0xFD9
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function _UART1_RX_Int_handle *****************
  6413 ;; Defined at:
  6414 ;;		line 120 in file "my_UART.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  data            1   45[COMRAM] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;		None               void
  6421 ;; Registers used:
  6422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6428 ;;      Params:         0       0       0       0       0       0       0
  6429 ;;      Locals:         1       0       0       0       0       0       0
  6430 ;;      Temps:          2       0       0       0       0       0       0
  6431 ;;      Totals:         3       0       0       0       0       0       0
  6432 ;;Total ram usage:        3 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    3
  6435 ;; This function calls:
  6436 ;;		_ToMainHigh_sendmsg
  6437 ;; This function is called by:
  6438 ;;		_InterruptHandlerHigh
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text39
  6443  0015F4                     __ptext39:
  6444                           	opt stack 0
  6445  0015F4                     _UART1_RX_Int_handle:
  6446                           	opt stack 21
  6447                           
  6448                           ;my_UART.c: 121: unsigned char data = RCREG1;
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;incstack = 0
  6452                           ;incstack = 0
  6453  0015F4  CFAE F02E          	movff	4014,UART1_RX_Int_handle@data	;volatile
  6454                           
  6455                           ;my_UART.c: 122: ToMainHigh_sendmsg(1, 50, &data);
  6456  0015F8  6E2C               	movwf	??_UART1_RX_Int_handle& (0+255),c
  6457  0015FA  0E01               	movlw	1
  6458  0015FC  6E28               	movwf	?_ToMainHigh_sendmsg,c
  6459  0015FE  502C               	movf	??_UART1_RX_Int_handle& (0+255),w,c
  6460  001600  6E2D               	movwf	(??_UART1_RX_Int_handle+1)& (0+255),c
  6461  001602  0E32               	movlw	50
  6462  001604  6E29               	movwf	?_ToMainHigh_sendmsg+1,c
  6463  001606  502D               	movf	(??_UART1_RX_Int_handle+1)& (0+255),w,c
  6464  001608  0E00               	movlw	high UART1_RX_Int_handle@data
  6465  00160A  6E2B               	movwf	?_ToMainHigh_sendmsg+3,c
  6466  00160C  0E2E               	movlw	low UART1_RX_Int_handle@data
  6467  00160E  6E2A               	movwf	?_ToMainHigh_sendmsg+2,c
  6468  001610  EC0B  F00B         	call	_ToMainHigh_sendmsg	;wreg free
  6469  001614  0012               	return	
  6470  001616                     __end_of_UART1_RX_Int_handle:
  6471                           	opt stack 0
  6472                           tosu	equ	0xFFF
  6473                           tosh	equ	0xFFE
  6474                           tosl	equ	0xFFD
  6475                           pclatu	equ	0xFFB
  6476                           pclath	equ	0xFFA
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           postinc0	equ	0xFEE
  6485                           fsr0h	equ	0xFEA
  6486                           fsr0l	equ	0xFE9
  6487                           wreg	equ	0xFE8
  6488                           indf1	equ	0xFE7
  6489                           postinc1	equ	0xFE6
  6490                           postdec1	equ	0xFE5
  6491                           fsr1h	equ	0xFE2
  6492                           fsr1l	equ	0xFE1
  6493                           bsr	equ	0xFE0
  6494                           indf2	equ	0xFDF
  6495                           postinc2	equ	0xFDE
  6496                           postdec2	equ	0xFDD
  6497                           fsr2h	equ	0xFDA
  6498                           fsr2l	equ	0xFD9
  6499                           status	equ	0xFD8
  6500                           
  6501 ;; *************** function _ToMainHigh_sendmsg *****************
  6502 ;; Defined at:
  6503 ;;		line 126 in file "messages.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  length          1   39[COMRAM] unsigned char 
  6506 ;;  msgtype         1   40[COMRAM] unsigned char 
  6507 ;;  data            2   41[COMRAM] PTR void 
  6508 ;;		 -> NULL(0), UART1_RX_Int_handle@data(1), main@uart_data2(28), 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      char 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6520 ;;      Params:         4       0       0       0       0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0
  6523 ;;      Totals:         4       0       0       0       0       0       0
  6524 ;;Total ram usage:        4 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    2
  6527 ;; This function calls:
  6528 ;;		_send_msg
  6529 ;; This function is called by:
  6530 ;;		_UART1_RX_Int_handle
  6531 ;;		_UART2_RX_Int_handle
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text40
  6536  001616                     __ptext40:
  6537                           	opt stack 0
  6538  001616                     _ToMainHigh_sendmsg:
  6539                           	opt stack 21
  6540                           
  6541                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6542                           ;	Return value of _ToMainHigh_sendmsg is never used
  6543                           
  6544                           ;incstack = 0
  6545                           ;incstack = 0
  6546  001616  0101               	movlb	1	; () banked
  6547  001618  0E01               	movlw	high _ToMainHigh_MQ
  6548  00161A  6E1D               	movwf	?_send_msg+1,c
  6549  00161C  0101               	movlb	1	; () banked
  6550  00161E  0E6C               	movlw	low _ToMainHigh_MQ
  6551  001620  6E1C               	movwf	?_send_msg,c
  6552  001622  C028  F01E         	movff	ToMainHigh_sendmsg@length,?_send_msg+2
  6553  001626  C029  F01F         	movff	ToMainHigh_sendmsg@msgtype,?_send_msg+3
  6554  00162A  C02A  F020         	movff	ToMainHigh_sendmsg@data,?_send_msg+4
  6555  00162E  C02B  F021         	movff	ToMainHigh_sendmsg@data+1,?_send_msg+5
  6556  001632  EC75  F006         	call	_send_msg	;wreg free
  6557  001636  0012               	return	
  6558  001638                     __end_of_ToMainHigh_sendmsg:
  6559                           	opt stack 0
  6560                           tosu	equ	0xFFF
  6561                           tosh	equ	0xFFE
  6562                           tosl	equ	0xFFD
  6563                           pclatu	equ	0xFFB
  6564                           pclath	equ	0xFFA
  6565                           tblptru	equ	0xFF8
  6566                           tblptrh	equ	0xFF7
  6567                           tblptrl	equ	0xFF6
  6568                           tablat	equ	0xFF5
  6569                           prodh	equ	0xFF4
  6570                           prodl	equ	0xFF3
  6571                           intcon	equ	0xFF2
  6572                           postinc0	equ	0xFEE
  6573                           fsr0h	equ	0xFEA
  6574                           fsr0l	equ	0xFE9
  6575                           wreg	equ	0xFE8
  6576                           indf1	equ	0xFE7
  6577                           postinc1	equ	0xFE6
  6578                           postdec1	equ	0xFE5
  6579                           fsr1h	equ	0xFE2
  6580                           fsr1l	equ	0xFE1
  6581                           bsr	equ	0xFE0
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _send_msg *****************
  6590 ;; Defined at:
  6591 ;;		line 24 in file "messages.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  qptr            2   27[COMRAM] PTR struct __msg_queue
  6594 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6595 ;;  length          1   29[COMRAM] unsigned char 
  6596 ;;  msgtype         1   30[COMRAM] unsigned char 
  6597 ;;  data            2   31[COMRAM] PTR void 
  6598 ;;		 -> NULL(0), InterruptHandlerHigh@data(1), UART1_RX_Int_handle@data(1), main@uart_data2(28), 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  qmsg            2   37[COMRAM] PTR struct __msg
  6601 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6602 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6603 ;;  tlength         2   34[COMRAM] unsigned int 
  6604 ;;  slot            1   36[COMRAM] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      char 
  6607 ;; Registers used:
  6608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6614 ;;      Params:         6       0       0       0       0       0       0
  6615 ;;      Locals:         5       0       0       0       0       0       0
  6616 ;;      Temps:          1       0       0       0       0       0       0
  6617 ;;      Totals:        12       0       0       0       0       0       0
  6618 ;;Total ram usage:       12 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    1
  6621 ;; This function calls:
  6622 ;;		i2_memcpy
  6623 ;; This function is called by:
  6624 ;;		_ToMainLow_sendmsg
  6625 ;;		_ToMainHigh_sendmsg
  6626 ;;		_FromMainLow_sendmsg
  6627 ;;		_FromMainHigh_sendmsg
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text41
  6632  000CEA                     __ptext41:
  6633                           	opt stack 0
  6634  000CEA                     _send_msg:
  6635                           	opt stack 22
  6636                           
  6637                           ;messages.c: 25: unsigned char slot;
  6638                           ;messages.c: 27: msg *qmsg;
  6639                           ;messages.c: 28: size_t tlength = length;
  6640                           
  6641                           ;incstack = 0
  6642                           ;incstack = 0
  6643  000CEA  C01E  F023         	movff	send_msg@length,send_msg@tlength
  6644  000CEE  6A24               	clrf	send_msg@tlength+1,c
  6645                           
  6646                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6647  000CF0  EE20 F034          	lfsr	2,52
  6648  000CF4  501C               	movf	send_msg@qptr,w,c
  6649  000CF6  26D9               	addwf	fsr2l,f,c
  6650  000CF8  501D               	movf	send_msg@qptr+1,w,c
  6651  000CFA  22DA               	addwfc	fsr2h,f,c
  6652  000CFC  50DF               	movf	indf2,w,c
  6653  000CFE  6E25               	movwf	send_msg@slot,c
  6654                           
  6655                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6656  000D00  5025               	movf	send_msg@slot,w,c
  6657  000D02  0D0D               	mullw	13
  6658  000D04  50F3               	movf	prodl,w,c
  6659  000D06  241C               	addwf	send_msg@qptr,w,c
  6660  000D08  6E26               	movwf	send_msg@qmsg,c
  6661  000D0A  50F4               	movf	prodh,w,c
  6662  000D0C  201D               	addwfc	send_msg@qptr+1,w,c
  6663  000D0E  6E27               	movwf	send_msg@qmsg+1,c
  6664                           
  6665                           ;messages.c: 41: if (qmsg->full != 0) {
  6666  000D10  C026  FFD9         	movff	send_msg@qmsg,fsr2l
  6667  000D14  C027  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6668  000D18  50DF               	movf	indf2,w,c
  6669  000D1A  B4D8               	btfsc	status,2,c
  6670  000D1C  D002               	goto	i2l2206
  6671                           
  6672                           ;messages.c: 42: return (-1);
  6673  000D1E  0EFF               	movlw	255
  6674  000D20  0012               	return	
  6675  000D22                     i2l2206:
  6676                           
  6677                           ;messages.c: 43: }
  6678                           ;messages.c: 46: qmsg->length = length;
  6679  000D22  EE20 F001          	lfsr	2,1
  6680  000D26  5026               	movf	send_msg@qmsg,w,c
  6681  000D28  26D9               	addwf	fsr2l,f,c
  6682  000D2A  5027               	movf	send_msg@qmsg+1,w,c
  6683  000D2C  22DA               	addwfc	fsr2h,f,c
  6684  000D2E  C01E  FFDF         	movff	send_msg@length,indf2
  6685                           
  6686                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6687  000D32  EE20 F002          	lfsr	2,2
  6688  000D36  5026               	movf	send_msg@qmsg,w,c
  6689  000D38  26D9               	addwf	fsr2l,f,c
  6690  000D3A  5027               	movf	send_msg@qmsg+1,w,c
  6691  000D3C  22DA               	addwfc	fsr2h,f,c
  6692  000D3E  C01F  FFDF         	movff	send_msg@msgtype,indf2
  6693                           
  6694                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6695  000D42  0E03               	movlw	3
  6696  000D44  2426               	addwf	send_msg@qmsg,w,c
  6697  000D46  6E12               	movwf	?i2_memcpy,c
  6698  000D48  0E00               	movlw	0
  6699  000D4A  2027               	addwfc	send_msg@qmsg+1,w,c
  6700  000D4C  6E13               	movwf	?i2_memcpy+1,c
  6701  000D4E  C020  F014         	movff	send_msg@data,?i2_memcpy+2
  6702  000D52  C021  F015         	movff	send_msg@data+1,?i2_memcpy+3
  6703  000D56  C023  F016         	movff	send_msg@tlength,?i2_memcpy+4
  6704  000D5A  C024  F017         	movff	send_msg@tlength+1,?i2_memcpy+5
  6705  000D5E  EC6C  F00A         	call	i2_memcpy	;wreg free
  6706                           
  6707                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6708  000D62  EE20 F034          	lfsr	2,52
  6709  000D66  501C               	movf	send_msg@qptr,w,c
  6710  000D68  26D9               	addwf	fsr2l,f,c
  6711  000D6A  501D               	movf	send_msg@qptr+1,w,c
  6712  000D6C  22DA               	addwfc	fsr2h,f,c
  6713  000D6E  EE10 F034          	lfsr	1,52
  6714  000D72  501C               	movf	send_msg@qptr,w,c
  6715  000D74  26E1               	addwf	fsr1l,f,c
  6716  000D76  501D               	movf	send_msg@qptr+1,w,c
  6717  000D78  22E2               	addwfc	fsr1h,f,c
  6718  000D7A  50E7               	movf	indf1,w,c
  6719  000D7C  6E22               	movwf	??_send_msg& (0+255),c
  6720  000D7E  2822               	incf	??_send_msg,w,c
  6721  000D80  0B03               	andlw	3
  6722  000D82  6EDF               	movwf	indf2,c
  6723                           
  6724                           ;messages.c: 59: qmsg->full = 1;
  6725  000D84  C026  FFD9         	movff	send_msg@qmsg,fsr2l
  6726  000D88  C027  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6727  000D8C  0E01               	movlw	1
  6728  000D8E  6EDF               	movwf	indf2,c
  6729                           
  6730                           ;messages.c: 60: return (1);
  6731  000D90  0E01               	movlw	1
  6732  000D92  0012               	return	
  6733  000D94                     __end_of_send_msg:
  6734                           	opt stack 0
  6735                           tosu	equ	0xFFF
  6736                           tosh	equ	0xFFE
  6737                           tosl	equ	0xFFD
  6738                           pclatu	equ	0xFFB
  6739                           pclath	equ	0xFFA
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           intcon	equ	0xFF2
  6747                           postinc0	equ	0xFEE
  6748                           fsr0h	equ	0xFEA
  6749                           fsr0l	equ	0xFE9
  6750                           wreg	equ	0xFE8
  6751                           indf1	equ	0xFE7
  6752                           postinc1	equ	0xFE6
  6753                           postdec1	equ	0xFE5
  6754                           fsr1h	equ	0xFE2
  6755                           fsr1l	equ	0xFE1
  6756                           bsr	equ	0xFE0
  6757                           indf2	equ	0xFDF
  6758                           postinc2	equ	0xFDE
  6759                           postdec2	equ	0xFDD
  6760                           fsr2h	equ	0xFDA
  6761                           fsr2l	equ	0xFD9
  6762                           status	equ	0xFD8
  6763                           
  6764 ;; *************** function i2_memcpy *****************
  6765 ;; Defined at:
  6766 ;;		line 13 in file "/Applications/microchip/xc8/v1.21/sources/common/memcpy.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  d1              2   17[COMRAM] PTR void 
  6769 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6770 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6771 ;;		 -> main@msgbuffer(11), 
  6772 ;;  s1              2   19[COMRAM] PTR const void 
  6773 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6774 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6775 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6776 ;;		 -> ToMainLow_MQ(54), InterruptHandlerHigh@data(1), UART1_RX_Int_handle@data(1), main@uart_data2(28), 
  6777 ;;  n               2   21[COMRAM] unsigned int 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  memcpy          2   25[COMRAM] PTR const unsigned char 
  6780 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6781 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6782 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6783 ;;		 -> ToMainLow_MQ(54), InterruptHandlerHigh@data(1), UART1_RX_Int_handle@data(1), main@uart_data2(28), 
  6784 ;;  memcpy          2   23[COMRAM] PTR unsigned char 
  6785 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6786 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6787 ;;		 -> main@msgbuffer(11), 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  2   17[COMRAM] PTR void 
  6790 ;; Registers used:
  6791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6797 ;;      Params:         6       0       0       0       0       0       0
  6798 ;;      Locals:         4       0       0       0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0
  6800 ;;      Totals:        10       0       0       0       0       0       0
  6801 ;;Total ram usage:       10 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_send_msg
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text42
  6811  0014D8                     __ptext42:
  6812                           	opt stack 0
  6813  0014D8                     i2_memcpy:
  6814                           	opt stack 22
  6815                           
  6816                           ;incstack = 0
  6817                           ;incstack = 0
  6818  0014D8  C014  F01A         	movff	i2memcpy@s1,i2memcpy@s
  6819  0014DC  C015  F01B         	movff	i2memcpy@s1+1,i2memcpy@s+1
  6820  0014E0  C012  F018         	movff	i2memcpy@d1,i2memcpy@d
  6821  0014E4  C013  F019         	movff	i2memcpy@d1+1,i2memcpy@d+1
  6822  0014E8  D00E               	goto	i2l2392
  6823  0014EA                     i2l2386:
  6824  0014EA  C01A  FFD9         	movff	i2memcpy@s,fsr2l
  6825  0014EE  C01B  FFDA         	movff	i2memcpy@s+1,fsr2h
  6826  0014F2  C018  FFE1         	movff	i2memcpy@d,fsr1l
  6827  0014F6  C019  FFE2         	movff	i2memcpy@d+1,fsr1h
  6828  0014FA  CFDF FFE7          	movff	indf2,indf1
  6829  0014FE  4A1A               	infsnz	i2memcpy@s,f,c
  6830  001500  2A1B               	incf	i2memcpy@s+1,f,c
  6831  001502  4A18               	infsnz	i2memcpy@d,f,c
  6832  001504  2A19               	incf	i2memcpy@d+1,f,c
  6833  001506                     i2l2392:
  6834  001506  0616               	decf	i2memcpy@n,f,c
  6835  001508  A0D8               	btfss	status,0,c
  6836  00150A  0617               	decf	i2memcpy@n+1,f,c
  6837  00150C  2816               	incf	i2memcpy@n& (0+255),w,c
  6838  00150E  B4D8               	btfsc	status,2,c
  6839  001510  2817               	incf	(i2memcpy@n+1)& (0+255),w,c
  6840  001512  B4D8               	btfsc	status,2,c
  6841                           
  6842                           ;	Return value of i2_memcpy is never used
  6843  001514  0012               	return	
  6844  001516  D7E9               	goto	i2l2386
  6845  001518                     __end_ofi2_memcpy:
  6846                           	opt stack 0
  6847                           tosu	equ	0xFFF
  6848                           tosh	equ	0xFFE
  6849                           tosl	equ	0xFFD
  6850                           pclatu	equ	0xFFB
  6851                           pclath	equ	0xFFA
  6852                           tblptru	equ	0xFF8
  6853                           tblptrh	equ	0xFF7
  6854                           tblptrl	equ	0xFF6
  6855                           tablat	equ	0xFF5
  6856                           prodh	equ	0xFF4
  6857                           prodl	equ	0xFF3
  6858                           intcon	equ	0xFF2
  6859                           postinc0	equ	0xFEE
  6860                           fsr0h	equ	0xFEA
  6861                           fsr0l	equ	0xFE9
  6862                           wreg	equ	0xFE8
  6863                           indf1	equ	0xFE7
  6864                           postinc1	equ	0xFE6
  6865                           postdec1	equ	0xFE5
  6866                           fsr1h	equ	0xFE2
  6867                           fsr1l	equ	0xFE1
  6868                           bsr	equ	0xFE0
  6869                           indf2	equ	0xFDF
  6870                           postinc2	equ	0xFDE
  6871                           postdec2	equ	0xFDD
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function _UART1_TX_Int_handle *****************
  6877 ;; Defined at:
  6878 ;;		line 107 in file "my_UART.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;		None               void
  6885 ;; Registers used:
  6886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6892 ;;      Params:         0       0       0       0       0       0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0
  6894 ;;      Temps:          2       0       0       0       0       0       0
  6895 ;;      Totals:         2       0       0       0       0       0       0
  6896 ;;Total ram usage:        2 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_InterruptHandlerHigh
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text43
  6906  000D94                     __ptext43:
  6907                           	opt stack 0
  6908  000D94                     _UART1_TX_Int_handle:
  6909                           	opt stack 24
  6910                           
  6911                           ;my_UART.c: 108: if(uart_1_data_p->buffer_out_len == uart_1_data_p->buffer_out_ind){
  6912                           
  6913                           ;incstack = 0
  6914                           ;incstack = 0
  6915  000D94  0100               	movlb	0	; () banked
  6916  000D96  EE20 F018          	lfsr	2,24
  6917  000D9A  0100               	movlb	0	; () banked
  6918  000D9C  51DC               	movf	_uart_1_data_p& (0+255),w,b
  6919  000D9E  26D9               	addwf	fsr2l,f,c
  6920  000DA0  0100               	movlb	0	; () banked
  6921  000DA2  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  6922  000DA4  22DA               	addwfc	fsr2h,f,c
  6923  000DA6  0100               	movlb	0	; () banked
  6924  000DA8  EE10 F01A          	lfsr	1,26
  6925  000DAC  0100               	movlb	0	; () banked
  6926  000DAE  51DC               	movf	_uart_1_data_p& (0+255),w,b
  6927  000DB0  26E1               	addwf	fsr1l,f,c
  6928  000DB2  0100               	movlb	0	; () banked
  6929  000DB4  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  6930  000DB6  22E2               	addwfc	fsr1h,f,c
  6931  000DB8  52E6               	movf	postinc1,f,c
  6932  000DBA  52DE               	movf	postinc2,f,c
  6933  000DBC  50DD               	movf	postdec2,w,c
  6934  000DBE  18E5               	xorwf	postdec1,w,c
  6935  000DC0  CFDF FFE8          	movff	indf2,wreg
  6936  000DC4  B4D8               	btfsc	status,2,c
  6937  000DC6  18E7               	xorwf	indf1,w,c
  6938  000DC8  A4D8               	btfss	status,2,c
  6939  000DCA  D00F               	goto	i2l2018
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;my_UART.c: 109: PIE1bits.TX1IE=0;
  6943  000DCC  989D               	bcf	3997,4,c	;volatile
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;my_UART.c: 110: uart_1_data_p->buffer_out_ind=0;
  6947  000DCE  0100               	movlb	0	; () banked
  6948  000DD0  EE20 F018          	lfsr	2,24
  6949  000DD4  0100               	movlb	0	; () banked
  6950  000DD6  51DC               	movf	_uart_1_data_p& (0+255),w,b
  6951  000DD8  26D9               	addwf	fsr2l,f,c
  6952  000DDA  0100               	movlb	0	; () banked
  6953  000DDC  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  6954  000DDE  22DA               	addwfc	fsr2h,f,c
  6955  000DE0  0E00               	movlw	0
  6956  000DE2  6EDE               	movwf	postinc2,c
  6957  000DE4  0E00               	movlw	0
  6958  000DE6  6EDD               	movwf	postdec2,c
  6959                           
  6960                           ;my_UART.c: 112: }
  6961  000DE8  0012               	return	
  6962  000DEA                     i2l2018:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;my_UART.c: 113: else {
  6966                           ;my_UART.c: 114: TXREG1 = uart_1_data_p->buffer_out[uart_1_data_p->buffer_out_ind];
  6967  000DEA  0100               	movlb	0	; () banked
  6968  000DEC  EE20 F018          	lfsr	2,24
  6969  000DF0  0100               	movlb	0	; () banked
  6970  000DF2  51DC               	movf	_uart_1_data_p& (0+255),w,b
  6971  000DF4  26D9               	addwf	fsr2l,f,c
  6972  000DF6  0100               	movlb	0	; () banked
  6973  000DF8  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  6974  000DFA  22DA               	addwfc	fsr2h,f,c
  6975  000DFC  CFDE F012          	movff	postinc2,??_UART1_TX_Int_handle
  6976  000E00  CFDD F013          	movff	postdec2,??_UART1_TX_Int_handle+1
  6977  000E04  0E0E               	movlw	14
  6978  000E06  2612               	addwf	??_UART1_TX_Int_handle,f,c
  6979  000E08  0E00               	movlw	0
  6980  000E0A  2213               	addwfc	??_UART1_TX_Int_handle+1,f,c
  6981  000E0C  5012               	movf	??_UART1_TX_Int_handle,w,c
  6982  000E0E  0100               	movlb	0	; () banked
  6983  000E10  0100               	movlb	0	; () banked
  6984  000E12  25DC               	addwf	_uart_1_data_p& (0+255),w,b
  6985  000E14  6ED9               	movwf	fsr2l,c
  6986  000E16  5013               	movf	??_UART1_TX_Int_handle+1,w,c
  6987  000E18  0100               	movlb	0	; () banked
  6988  000E1A  0100               	movlb	0	; () banked
  6989  000E1C  21DD               	addwfc	(_uart_1_data_p+1)& (0+255),w,b
  6990  000E1E  6EDA               	movwf	fsr2h,c
  6991  000E20  50DF               	movf	indf2,w,c
  6992  000E22  6EAD               	movwf	4013,c	;volatile
  6993                           
  6994                           ;my_UART.c: 115: uart_1_data_p->buffer_out_ind++;
  6995  000E24  0100               	movlb	0	; () banked
  6996  000E26  EE20 F018          	lfsr	2,24
  6997  000E2A  0100               	movlb	0	; () banked
  6998  000E2C  51DC               	movf	_uart_1_data_p& (0+255),w,b
  6999  000E2E  26D9               	addwf	fsr2l,f,c
  7000  000E30  0100               	movlb	0	; () banked
  7001  000E32  51DD               	movf	(_uart_1_data_p+1)& (0+255),w,b
  7002  000E34  22DA               	addwfc	fsr2h,f,c
  7003  000E36  2ADE               	incf	postinc2,f,c
  7004  000E38  0E00               	movlw	0
  7005  000E3A  22DD               	addwfc	postdec2,f,c
  7006  000E3C  0012               	return	
  7007  000E3E                     __end_of_UART1_TX_Int_handle:
  7008                           	opt stack 0
  7009  0000                     tosu	equ	0xFFF
  7010                           tosh	equ	0xFFE
  7011                           tosl	equ	0xFFD
  7012                           pclatu	equ	0xFFB
  7013                           pclath	equ	0xFFA
  7014                           tblptru	equ	0xFF8
  7015                           tblptrh	equ	0xFF7
  7016                           tblptrl	equ	0xFF6
  7017                           tablat	equ	0xFF5
  7018                           prodh	equ	0xFF4
  7019                           prodl	equ	0xFF3
  7020                           intcon	equ	0xFF2
  7021                           postinc0	equ	0xFEE
  7022                           fsr0h	equ	0xFEA
  7023                           fsr0l	equ	0xFE9
  7024                           wreg	equ	0xFE8
  7025                           indf1	equ	0xFE7
  7026                           postinc1	equ	0xFE6
  7027                           postdec1	equ	0xFE5
  7028                           fsr1h	equ	0xFE2
  7029                           fsr1l	equ	0xFE1
  7030                           bsr	equ	0xFE0
  7031                           indf2	equ	0xFDF
  7032                           postinc2	equ	0xFDE
  7033                           postdec2	equ	0xFDD
  7034                           fsr2h	equ	0xFDA
  7035                           fsr2l	equ	0xFD9
  7036                           status	equ	0xFD8
  7037                           tosu	equ	0xFFF
  7038                           tosh	equ	0xFFE
  7039                           tosl	equ	0xFFD
  7040                           pclatu	equ	0xFFB
  7041                           pclath	equ	0xFFA
  7042                           tblptru	equ	0xFF8
  7043                           tblptrh	equ	0xFF7
  7044                           tblptrl	equ	0xFF6
  7045                           tablat	equ	0xFF5
  7046                           prodh	equ	0xFF4
  7047                           prodl	equ	0xFF3
  7048                           intcon	equ	0xFF2
  7049                           postinc0	equ	0xFEE
  7050                           fsr0h	equ	0xFEA
  7051                           fsr0l	equ	0xFE9
  7052                           wreg	equ	0xFE8
  7053                           indf1	equ	0xFE7
  7054                           postinc1	equ	0xFE6
  7055                           postdec1	equ	0xFE5
  7056                           fsr1h	equ	0xFE2
  7057                           fsr1l	equ	0xFE1
  7058                           bsr	equ	0xFE0
  7059                           indf2	equ	0xFDF
  7060                           postinc2	equ	0xFDE
  7061                           postdec2	equ	0xFDD
  7062                           fsr2h	equ	0xFDA
  7063                           fsr2l	equ	0xFD9
  7064                           status	equ	0xFD8
  7065                           
  7066                           	psect	text44
  7067  000000                     __ptext44:
  7068                           	opt stack 0
  7069                           tosu	equ	0xFFF
  7070                           tosh	equ	0xFFE
  7071                           tosl	equ	0xFFD
  7072                           pclatu	equ	0xFFB
  7073                           pclath	equ	0xFFA
  7074                           tblptru	equ	0xFF8
  7075                           tblptrh	equ	0xFF7
  7076                           tblptrl	equ	0xFF6
  7077                           tablat	equ	0xFF5
  7078                           prodh	equ	0xFF4
  7079                           prodl	equ	0xFF3
  7080                           intcon	equ	0xFF2
  7081                           postinc0	equ	0xFEE
  7082                           fsr0h	equ	0xFEA
  7083                           fsr0l	equ	0xFE9
  7084                           wreg	equ	0xFE8
  7085                           indf1	equ	0xFE7
  7086                           postinc1	equ	0xFE6
  7087                           postdec1	equ	0xFE5
  7088                           fsr1h	equ	0xFE2
  7089                           fsr1l	equ	0xFE1
  7090                           bsr	equ	0xFE0
  7091                           indf2	equ	0xFDF
  7092                           postinc2	equ	0xFDE
  7093                           postdec2	equ	0xFDD
  7094                           fsr2h	equ	0xFDA
  7095                           fsr2l	equ	0xFD9
  7096                           status	equ	0xFD8
  7097                           
  7098                           	psect	rparam
  7099  0000                     tosu	equ	0xFFF
  7100                           tosh	equ	0xFFE
  7101                           tosl	equ	0xFFD
  7102                           pclatu	equ	0xFFB
  7103                           pclath	equ	0xFFA
  7104                           tblptru	equ	0xFF8
  7105                           tblptrh	equ	0xFF7
  7106                           tblptrl	equ	0xFF6
  7107                           tablat	equ	0xFF5
  7108                           prodh	equ	0xFF4
  7109                           prodl	equ	0xFF3
  7110                           intcon	equ	0xFF2
  7111                           postinc0	equ	0xFEE
  7112                           fsr0h	equ	0xFEA
  7113                           fsr0l	equ	0xFE9
  7114                           wreg	equ	0xFE8
  7115                           indf1	equ	0xFE7
  7116                           postinc1	equ	0xFE6
  7117                           postdec1	equ	0xFE5
  7118                           fsr1h	equ	0xFE2
  7119                           fsr1l	equ	0xFE1
  7120                           bsr	equ	0xFE0
  7121                           indf2	equ	0xFDF
  7122                           postinc2	equ	0xFDE
  7123                           postdec2	equ	0xFDD
  7124                           fsr2h	equ	0xFDA
  7125                           fsr2l	equ	0xFD9
  7126                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         226
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     64      64
    BANK0           160    112     134
    BANK1           256      0     216
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    NULL.TIMER_Callback	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), laser_read(), 

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK0[11]), 

    ?_in_high_int	int  size(2) Largest target is 0

    ?___lldiv	unsigned long  size(2) Largest target is 0

    ?___lmul	unsigned long  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK0[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK0[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), InterruptHandlerHigh@data(COMRAM[1]), UART1_RX_Int_handle@data(COMRAM[1]), main@uart_data2(BANK0[28]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), InterruptHandlerHigh@data(COMRAM[1]), UART1_RX_Int_handle@data(COMRAM[1]), main@uart_data2(BANK0[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK0[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK0[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), UART1_RX_Int_handle@data(COMRAM[1]), main@uart_data2(BANK0[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK0[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK0[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 1
		 -> InterruptHandlerHigh@data(COMRAM[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK0[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK0[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK0[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), InterruptHandlerHigh@data(COMRAM[1]), UART1_RX_Int_handle@data(COMRAM[1]), main@uart_data2(BANK0[28]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    timer_data_p.TIMER_Callback	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), laser_read(), 

    start_timer@RX_Callback	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), laser_read(), 

    timer_init@data	PTR struct . size(2) Largest target is 6
		 -> main@TIMER1(BANK0[6]), 

    timer_data_p	PTR struct . size(2) Largest target is 6
		 -> NULL(NULL[0]), main@TIMER1(BANK0[6]), 

    ReadLaser_Message@data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK0[11]), 

    ReadWIFLY_Message@data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK0[11]), 

    UART2_Write@c	PTR unsigned char  size(2) Largest target is 2
		 -> laser_read@read(BANK0[2]), laser_init@init(BANK0[1]), 

    UART1_Write@c	PTR unsigned char  size(2) Largest target is 5
		 -> wifi_write@write(BANK0[5]), 

    UART2_Init@data	PTR struct . size(2) Largest target is 28
		 -> main@uart_data2(BANK0[28]), 

    uart_2_data_p	PTR struct . size(2) Largest target is 28
		 -> NULL(NULL[0]), main@uart_data2(BANK0[28]), 

    UART1_Init@data	PTR struct . size(2) Largest target is 28
		 -> main@uart_data1(BANK0[28]), 

    uart_1_data_p	PTR struct . size(2) Largest target is 28
		 -> NULL(NULL[0]), main@uart_data1(BANK0[28]), 

    S34$TIMER_Callback	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), laser_read(), 

    TIMER1.TIMER_Callback	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), laser_read(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_UART1_RX_Int_handle
    _ToMainLow_sendmsg->_send_msg
    _UART2_RX_Int_handle->_ToMainHigh_sendmsg
    _UART1_RX_Int_handle->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ReadLaser_Message
    _Timer_message_handle->_laser_read
    _ToMainLow_recvmsg->_recv_msg
    _ReadWIFLY_Message->_laser_read
    _laser_read->_UART2_Write
    _ReadLaser_Message->_wifi_write
    _wifi_write->_UART1_Write
    _return_motor->_start_timer
    _move_motor->___awdiv
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _laser_init->_UART2_Write
    _init_queues->_init_queue

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0    3714
                                             36 BANK0     76    76      0
                         _timer_init
                         _UART1_Init
                         _UART2_Init
                        _init_queues
                  _enable_interrupts
                         _laser_init
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                  _ReadLaser_Message
                  _ReadWIFLY_Message
                  _ToMainLow_recvmsg
               _Timer_message_handle
 ---------------------------------------------------------------------------------
 (1) _Timer_message_handle                                 0     0      0     180
                   Absolute function
                         _laser_read
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     541
                                             24 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ReadWIFLY_Message                                    5     1      4     246
                                             10 BANK0      5     1      4
                 _UART1_Read_Disable
                         _laser_read
 ---------------------------------------------------------------------------------
 (2) _laser_read                                           2     2      0     180
                                              8 BANK0      2     2      0
                        _UART2_Write
                         _UART2_Read
 ---------------------------------------------------------------------------------
 (2) _UART1_Read_Disable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadLaser_Message                                   18    14      4    1306
                                             18 BANK0     18    14      4
                  _UART1_Read_Enable
                         _move_motor
                       _return_motor
                         _wifi_write
                             ___lmul
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     162
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      92
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _wifi_write                                          10     6      4     342
                                              8 BANK0     10     6      4
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          8     4      4     134
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _return_motor                                         2     2      0      67
                                              4 BANK0      2     2      0
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _move_motor                                           2     2      0     367
                                              9 BANK0      2     2      0
                        _start_timer
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     300
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _start_timer                                          4     0      4      44
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _UART1_Read_Enable                                    3     1      2       1
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     541
                                             24 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     475
                                             10 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     120
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      66
                                              6 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      22
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      44
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _laser_init                                           3     3      0     180
                                              8 BANK0      2     2      0
                        _UART2_Write
                         _UART2_Read
 ---------------------------------------------------------------------------------
 (3) _UART2_Read                                           2     0      2      22
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          8     4      4     134
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     134
                                              4 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     134
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART2_Init                                           2     0      2      22
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           2     0      2      22
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           2     0      2      22
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerHigh                                18    18      0    2458
                                             46 COMRAM    18    18      0
                _UART1_TX_Int_handle
                _UART1_RX_Int_handle
                _UART2_TX_Int_handle
                _UART2_RX_Int_handle
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4     794
                                             39 COMRAM     4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (7) _UART2_RX_Int_handle                                  2     2      0     794
                                             43 COMRAM     2     2      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (7) _UART2_TX_Int_handle                                  2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _UART1_RX_Int_handle                                  3     3      0     820
                                             43 COMRAM     3     3      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (8) _ToMainHigh_sendmsg                                   4     0      4     794
                                             39 COMRAM     4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6     728
                                             27 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (9) i2_memcpy                                            10     4      6     395
                                             17 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _UART1_TX_Int_handle                                  2     2      0       0
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer_init
   _UART1_Init
   _UART2_Init
   _init_queues
     _init_queue
   _enable_interrupts
   _laser_init
     _UART2_Write
     _UART2_Read
   _block_on_To_msgqueues
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ReadLaser_Message
     _UART1_Read_Enable
     _move_motor
       _start_timer
       ___awdiv
     _return_motor
       _start_timer
     _wifi_write
       _UART1_Write
     ___lmul
     ___lldiv
   _ReadWIFLY_Message
     _UART1_Read_Disable
     _laser_read
       _UART2_Write
       _UART2_Read
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _Timer_message_handle
     Absolute function(Fake)
     _laser_read
       _UART2_Write
       _UART2_Read

 _InterruptHandlerLow (ROOT)

 _InterruptHandlerHigh (ROOT)
   _UART1_TX_Int_handle
   _UART1_RX_Int_handle
     _ToMainHigh_sendmsg
       _send_msg
         i2_memcpy
   _UART2_TX_Int_handle
   _UART2_RX_Int_handle
     _ToMainHigh_sendmsg
       _send_msg
         i2_memcpy
   _ToMainLow_sendmsg
     _send_msg
       i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D8       6       84.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     70      86       4       83.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     40      40       1       67.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       E       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19E       9        0.0%
DATA                 0      0     1AC      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu May  1 23:35:04 2014

    __size_of_UART1_Read_Disable 0004         _MQ_Main_Willing_to_block 00D7  
          ?_Timer_message_handle 0001                               l41 042E  
      __end_of_ToMainLow_recvmsg 157A                     ___awdiv@sign 0066  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 15F4  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_LVP$ON 000000                              l590 1650  
                            l823 09B6                     __CFG_CPB$OFF 000000  
                   __CFG_CPD$OFF 000000                              u748 0EAC  
                            u685 0352                              u749 0EC0  
                            fsr2 000FD9                      _start_timer 1166  
                 _FromMainLow_MQ 0136                              tosl 000FFD  
                            wreg 000FE8                       _TXSTA1bits 000FAC  
                     _TXSTA2bits 000F72                     ?_in_high_int 0060  
                           l2220 127A                             l2310 0EFC  
                           l2240 06E6                             l2162 137A  
                           l2154 1358                             l2226 129E  
                           l2314 0F34                             l2340 083A  
                           l2332 07FC                             l2350 0888  
                           l2342 0842                             l2326 07DE  
                           l2176 1402                             l2256 07A4  
                           l1800 0536                             l2338 0828  
                           l2354 089C                             l2370 0914  
                           l2188 105A                             l2380 099A  
                           l2372 091C                             l2358 08B4  
                           l2368 08FA                             l1922 0316  
                           l1934 039A                             l1942 1234  
                           l1782 047A                             l1790 04E8  
                           l1936 03A0                             l1784 04A8  
                           l1882 0FCE                             l1876 0FA0  
                           l1980 0AF4                             l1796 0530  
                           l1788 04D6                             l1966 0EC2  
                           l1888 0FFC                             l1984 0B4C  
                           l1968 0EC6                             l1994 0BBE  
                           l1998 0C16                             u1207 1652  
                _FromMainHigh_MQ 0100           ?_block_on_To_msgqueues 0001  
                           _main 03A6                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                    __CFG_BORV$190 000000  
                    main@msgtype 0096                             pclat 000FFA  
          ??_UART2_RX_Int_handle 002C                             prodh 000FF4  
                           prodl 000FF3                             start 00A2  
                  __CFG_IESO$OFF 000000                   timer_init@data 0060  
          UART1_Read_Enable@data 0062        ToMainHigh_recvmsg@msgtype 0079  
                    ?_UART1_Init 0060                   send_msg@length 001E  
                    ?_UART2_Init 0060                      ?_UART2_Read 0060  
                    _Delay1KTCYx 1650                     _BAUDCON1bits 000FB8  
                   _BAUDCON2bits 000F70                            ?_main 0001  
                __end_of___awdiv 08BE          ReadWIFLY_Message@length 006C  
                __end_of___lldiv 09C8                  ___awdiv@divisor 0062  
                          i1l243 005C                            i2l230 0642  
                          i2l231 05B0                            i2l232 0640  
                          i2l240 0642                            i2l233 05CA  
                          i2l234 063E                            i2l235 05E4  
                          i2l236 063C                            i2l237 063A  
                          i2l229 0596                            i2l239 05FE  
                ___awdiv@counter 0065                            _TMR1H 000FCF  
                          _TMR1L 000FCE              _UART2_TX_Int_handle 0C40  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000              ___lmul@multiplicand 0064  
                  __CFG_WRT3$OFF 000000                       i2memcpy@d1 0012  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                       i2memcpy@s1 0014  
                   ?_init_queues 0001                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                __end_of_in_main 1412                   __CFG_EBTRB$OFF 000000  
    __end_of_UART1_RX_Int_handle 1616       ToMainLow_recvmsg@maxlength 0078  
             __CFG_MCLRE$EXTMCLR 000000                            pclath 000FFA  
                          tablat 000FF5                            status 000FD8  
                 __CFG_HFOFST$ON 000000                 __end_ofi2_memcpy 1518  
                 __CFG_FOSC$HSMP 000000        ReadLaser_Message@lastdist 00E0  
           ?_UART2_TX_Int_handle 0001                  __initialization 1456  
         ??_Timer_message_handle 006A                     __end_of_main 0544  
     __size_of_ToMainLow_recvmsg 002C       __size_of_ToMainLow_sendmsg 0022  
                   ?_UART1_Write 0060                     ?_UART2_Write 0060  
                         ??_main 0084                  send_msg@msgtype 001F  
                  __activetblptr 000002                  send_msg@tlength 0023  
                 __CFG_PLLCFG$ON 000000                _ReadWIFLY_Message 1216  
             ?_ReadWIFLY_Message 006A                 ___awdiv@dividend 0060  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                           _ANSELD 000F3B  
                         _ANSELE 000F3C                           _T1GCON 000FCC  
            __size_of_UART1_Init 0056              __size_of_UART2_Init 0070  
            __size_of_UART2_Read 0044                           _RC1REG 000FAE  
                         i2l2100 05A6                           i2l2110 05C2  
                         i2l2102 05A8                           i2l2120 05E0  
                         i2l2112 05C6                           i2l2104 05AC  
                         i2l2018 0DEA                           i2l2034 0C96  
                         i2l2130 0616                           i2l2114 05D2  
                         i2l2122 05E4                           i2l2106 05B8  
                         i2l2132 0618                           i2l2124 05EC  
                         i2l2116 05DA                           i2l2108 05C0  
                         i2l2206 0D22                           i2l2134 0634  
                         i2l2126 05F4                           i2l2118 05DC  
                         i2l2136 0636                           i2l2128 05FE  
                         i2l2090 0584                           i2l2092 058C  
                         i2l2094 058E                           i2l2086 0574  
                         i2l2096 0592                           i2l2088 057C  
                         i2l2098 059E                   __CFG_WDTEN$OFF 000000  
                         i2l2392 1506                           i2l2386 14EA  
                         _RCREG1 000FAE                           _RCREG2 000F74  
                         _SPBRG1 000FAF              ??_ReadWIFLY_Message 006E  
                         _SPBRG2 000F75                           _TXREG1 000FAD  
                         _TXREG2 000F73            ??_UART2_TX_Int_handle 0012  
                 __CFG_XINST$OFF 000000                           ___lmul 0EE2  
                      ??___awdiv 0064                   __CFG_STVREN$ON 000000  
                      ??___lldiv 0068                    main@msgbuffer 0085  
                         _memcpy 1268                           clear_0 145C  
                         clear_1 1468                 ___awdiv@quotient 0067  
      __end_of_ReadWIFLY_Message 1268                 __end_of_recv_msg 07A8  
                 laser_init@init 0069                        ??_in_main 0066  
                 laser_read@read 0068                 __end_of_send_msg 0D94  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 0063  
       ToMainLow_recvmsg@msgtype 0079      __end_of_UART1_TX_Int_handle 0E3E  
           __size_of_in_high_int 0012                       __accesstop 0060  
        __end_of__initialization 148E       __end_of_ToMainHigh_recvmsg 15D2  
                __CFG_PBADEN$OFF 000000       __end_of_ToMainHigh_sendmsg 1638  
                 __pcstackCOMRAM 0001            ReadWIFLY_Message@data 006A  
                   __pidataBANK0 167C               __size_of_check_msg 0036  
                   ?_start_timer 0060    __size_of_InterruptHandlerHigh 0674  
    __end_of_InterruptHandlerLow 00A2                        ?i2_memcpy 0012  
                  _ToMainHigh_MQ 016C                    check_msg@qptr 0060  
              _ReadLaser_Message 00A6          ??_block_on_To_msgqueues 0066  
           __size_of_init_queues 006A                _UART1_Read_Enable 1674  
                     __pbssBANK0 00D0                       __pbssBANK1 0100  
             ?_ReadLaser_Message 0072                    UART2_Read@len 0060  
             ?_UART1_Read_Enable 0060       __end_of_UART1_Read_Disable 168C  
            ??_ReadLaser_Message 0076               __CFG_CCP2MX$PORTC1 000000  
            ??_UART1_Read_Enable 0062                          ?___lmul 0060  
                   ??_UART1_Init 0062                     ??_UART2_Init 0062  
                   ??_UART2_Read 0062               __CFG_CCP3MX$PORTB5 000000  
              recv_msg@maxlength 006C                  recv_msg@msgtype 006D  
                recv_msg@tlength 0074                     ?_Delay1KTCYx 0060  
                        ?_memcpy 0060                   ___lmul@product 0068  
     __size_of_ReadWIFLY_Message 0052  Timer_message_handle@wait_status 00D6  
           __size_of_UART1_Write 00CA             __size_of_UART2_Write 00CA  
                     ??i2_memcpy 0018        __end_of_ReadLaser_Message 03A6  
                        i2u90_40 05DA                          i2u90_41 05D8  
      __end_of_UART1_Read_Enable 167C                          i2u91_40 05F4  
                        i2u83_40 0584                          i2u91_41 05F2  
                        i2u83_41 0582                          i2u92_40 0616  
                        i2u84_40 058C                          i2u92_41 0614  
                        i2u84_41 058A                          i2u85_40 059E  
                        i2u85_41 059C                          i2u86_40 05A6  
                        i2u86_41 05A4                          i2u87_40 05B8  
                        i2u87_41 05B6                          i2u88_40 05C0  
                        i2u88_41 05BE                          i2u89_40 05D2  
                        i2u89_41 05D0      __end_of_UART2_RX_Int_handle 0AAC  
              __end_of_check_msg 154E               __end_of_UART1_Init 1216  
             __end_of_UART2_Init 10FC               __end_of_UART2_Read 1456  
                      ?_recv_msg 006A                  __CFG_PWRTEN$OFF 000000  
                     _in_low_int 1344                          __Hparam 0000  
                     _laser_init 12B6                       _laser_read 1498  
                      ?_send_msg 001C                          __Lparam 0000  
                        ___awdiv 07A8                  __size_of___lmul 009C  
                        ___lldiv 08BE                          __pcinit 1456  
                __size_of_memcpy 004E                       _init_queue 1012  
                        __ramtop 0600                          __ptext0 03A6  
                        __ptext1 0E3E                          __ptext2 154E  
                        __ptext3 1216                          __ptext4 1498  
                        __ptext5 1688                          __ptext6 00A6  
                        __ptext7 08BE                          __ptext8 0EE2  
                        __ptext9 12FE                          _in_main 13CE  
                      _T1CONbits 000FCD                  laser_read@F8867 00E4  
                 main@uart_data1 0097                   main@uart_data2 00B4  
                 __pintcode_body 0544             end_of_initialization 148E  
                        memcpy@d 0066                          memcpy@n 0064  
                        memcpy@s 0068                    __Lmediumconst 0000  
                        int_func 0544     __size_of_UART1_RX_Int_handle 0022  
                     ??_recv_msg 0071                  ___lldiv@divisor 0064  
                     ??_send_msg 0022                  ___lldiv@counter 006D  
                     _move_motor 138A                          postdec1 000FE5  
                        postdec2 000FDD           start_timer@RX_Callback 0062  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0029  
              UART1_Write@length 0062                    ?_return_motor 0001  
  __size_of_Timer_message_handle 00A4                       _timer_init 1638  
       InterruptHandlerHigh@data 0040                       main@TIMER1 0090  
                     _wifi_write 12FE                        _TRISAbits 000F92  
     __size_of_ReadLaser_Message 0300                        _TRISCbits 000F94  
                      _TRISDbits 000F95       __size_of_UART1_Read_Enable 0008  
           __size_of_start_timer 005A      __end_of_UART2_TX_Int_handle 0CEA  
                     main@length 00B3                      ?_in_low_int 0062  
                    ?_laser_init 0001                      ?_laser_read 0001  
                 ??_return_motor 0064               _ToMainHigh_recvmsg 15A6  
                 __end_of___lmul 0F7E               _ToMainHigh_sendmsg 1616  
                    ?_init_queue 0060                        i2memcpy@d 0018  
                      i2memcpy@n 0016                        i2memcpy@s 001A  
             return_motor@target 0064                   __end_of_memcpy 12B6  
              _enable_interrupts 1682             __size_of_Delay1KTCYx 0012  
            ?_ToMainHigh_recvmsg 0078              ?_ToMainHigh_sendmsg 0028  
             ?_enable_interrupts 0001              start_initialization 1456  
                  ??_in_high_int 0062                __size_ofi2_memcpy 0040  
            ??_enable_interrupts 0060   __size_of_block_on_To_msgqueues 0094  
  __end_of_block_on_To_msgqueues 1012     __end_of_InterruptHandlerHigh 067C  
           ??_ToMainHigh_recvmsg 007D     __size_of_UART1_TX_Int_handle 00AA  
           ??_ToMainHigh_sendmsg 002C                      ?_move_motor 0001  
                       ??___lmul 0068                      __pdataBANK0 00E0  
                 UART1_Init@data 0060                UART2_Write@length 0062  
      __end_of_enable_interrupts 1688                         ??_memcpy 0066  
                    ?_timer_init 0060               _UART1_Read_Disable 1688  
                 UART2_Init@data 0060                      ?_wifi_write 0068  
                  ??_init_queues 0064                    __pcstackBANK0 0060  
            __size_of_in_low_int 0046              __size_of_laser_init 0048  
            __size_of_laser_read 0040          UART1_RX_Int_handle@data 002E  
            ?_UART1_Read_Disable 0001                  Delay1KTCYx@unit 0060  
       ToMainLow_sendmsg@msgtype 0029     __size_of_InterruptHandlerLow 008A  
            __end_of_in_high_int 1674            ToMainLow_recvmsg@data 007B  
                   _ToMainLow_MQ 01A2              __size_of_init_queue 007A  
                      _check_msg 1518                        __pnvBANK0 00DA  
                   recv_msg@data 006F                     recv_msg@qmsg 0076  
                   recv_msg@slot 0073                     recv_msg@qptr 006A  
           ??_UART1_Read_Disable 0060                __size_of_recv_msg 012C  
                      __pintcode 0008                     UART1_Write@c 0060  
                   UART1_Write@i 0066                __size_of_send_msg 00AA  
                       ?___awdiv 0060                         ?___lldiv 0060  
        start_timer@timer_target 0060                     UART2_Write@c 0060  
                   UART2_Write@i 0066                      __pintcodelo 0018  
                  ??_UART1_Write 0064           ToMainHigh_recvmsg@data 007B  
                  ??_UART2_Write 0064                 __CFG_PRICLKEN$ON 000000  
                       ?_in_main 0064              _UART1_RX_Int_handle 15F4  
                  _uart_1_data_p 00DC                     _readings_num 00D8  
                  _uart_2_data_p 00DE            ToMainLow_sendmsg@data 002A  
            __size_of_move_motor 0044             __end_of_return_motor 15A6  
            __end_of_init_queues 1166                         _LATAbits 000F89  
           ?_UART1_RX_Int_handle 0001              __size_of_timer_init 0018  
                     ?_check_msg 0060                         _PIE1bits 000F9D  
                       _PIE3bits 000FA3     __size_of_UART2_RX_Int_handle 00E4  
               move_motor@target 0069                         _PIR1bits 000F9E  
                       _PIR3bits 000FA4           ToMainHigh_sendmsg@data 002A  
            __size_of_wifi_write 0046                 __CFG_WDTPS$32768 000000  
     __size_of_enable_interrupts 0006         ReadLaser_Message@arcarea 0080  
           _InterruptHandlerHigh 0008         ReadLaser_Message@avgdist 007C  
                       i2_memcpy 14D8                      _in_high_int 1662  
            __end_of_UART1_Write 0B76                     send_msg@data 0020  
            __end_of_UART2_Write 0C40         ReadLaser_Message@reading 007A  
                   send_msg@qmsg 0026                     send_msg@slot 0025  
                   send_msg@qptr 001C     __end_of_Timer_message_handle 0EE2  
              ___lmul@multiplier 0060                        copy_data0 1482  
                 _readings_count 00D4            ??_UART1_RX_Int_handle 002C  
                   ??_in_low_int 0064                     ??_laser_init 0068  
                   ??_laser_read 0068                         __Hrparam 0000  
                       __Lrparam 0000               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTD2 000000                 __size_of___awdiv 0116  
               __size_of___lldiv 010A                     ??_init_queue 0062  
        ToMainLow_sendmsg@length 0028                    ??_start_timer 0064  
            _UART1_TX_Int_handle 0D94            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044      ToMainHigh_recvmsg@maxlength 0078  
                    _init_queues 10FC               __end_of_in_low_int 138A  
                       __ptext10 0AAC                         __ptext11 157A  
                       __ptext20 1650                         __ptext12 138A  
                       __ptext21 1518                         __ptext13 07A8  
                       __ptext30 1012                         __ptext22 13CE  
                       __ptext14 1166                         __ptext31 108C  
                       __ptext23 1344                         __ptext15 1674  
                       __ptext40 1616                         __ptext32 11C0  
                       __ptext24 1662                         __ptext16 15A6  
                       __ptext41 0CEA                         __ptext33 1638  
                       __ptext25 12B6                         __ptext17 067C  
                       __ptext42 14D8                         __ptext26 1412  
                       __ptext18 1268                         __ptext43 0D94  
                       __ptext27 0B76                         __ptext19 0F7E  
                       __ptext44 0000                         __ptext36 15D2  
                       __ptext28 1682                         __ptext37 09C8  
                       __ptext29 10FC                         __ptext38 0C40  
                       __ptext39 15F4               __end_of_laser_init 12FE  
             __end_of_laser_read 14D8                    __size_of_main 019E  
                    ??_check_msg 0062             ?_UART1_TX_Int_handle 0001  
             __end_of_init_queue 108C                         _recv_msg 067C  
   __size_of_UART2_TX_Int_handle 00AA                         _send_msg 0CEA  
                   ??_move_motor 0069                   init_queue@qptr 0060  
                  ??_Delay1KTCYx 0061              _InterruptHandlerLow 0018  
        ReadLaser_Message@length 0074                     ??_timer_init 0062  
                    _UART1_Write 0AAC                      _UART2_Write 0B76  
                     _INTCONbits 000FF2            __size_of_return_motor 002C  
                   ??_wifi_write 006C                         memcpy@d1 0060  
                       memcpy@s1 0062                  wifi_write@total 0068  
             __end_of_move_motor 13CE                  wifi_write@write 006D  
            __end_of_start_timer 11C0                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
               ___lldiv@dividend 0060            ??_UART1_TX_Int_handle 0012  
                     _RCSTA1bits 000FAB            _block_on_To_msgqueues 0F7E  
                     _RCSTA2bits 000F71               __end_of_timer_init 1650  
    __size_of_ToMainHigh_recvmsg 002C      __size_of_ToMainHigh_sendmsg 0022  
                     _OSCCONbits 000FD3                     _timer_data_p 00DA  
       ToMainHigh_sendmsg@length 0028        _InterruptHandlerHigh$1406 003F  
             __end_of_wifi_write 1344                       _UART1_Init 11C0  
                     _UART2_Init 108C                       _UART2_Read 1412  
           _Timer_message_handle 0E3E                     _return_motor 157A  
         ReadLaser_Message@total 00D0           ??_InterruptHandlerHigh 002F  
              _ToMainLow_recvmsg 154E                _ToMainLow_sendmsg 15D2  
               ___lldiv@quotient 0069              _UART2_RX_Int_handle 09C8  
             ?_ToMainLow_recvmsg 0078              __end_of_Delay1KTCYx 1662  
             ?_ToMainLow_sendmsg 0028                __CFG_T3CMX$PORTC0 000000  
          ReadLaser_Message@data 0072            ??_InterruptHandlerLow 0001  
            ??_ToMainLow_recvmsg 007D              ??_ToMainLow_sendmsg 002C  
           ?_UART2_RX_Int_handle 0001  
